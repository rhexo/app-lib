
*** Dumping AST Record Layout
   0 | _RuneRange
   0 |   int __nranges
   4 |   _RuneEntry * __ranges
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
   0 | _RuneLocale
   0 |   char [8] __magic
   8 |   char [32] __encoding
  40 |   __rune_t (*)(const char *, __size_t, const char **) __sgetrune
  44 |   int (*)(__rune_t, char *, __size_t, char **) __sputrune
  48 |   __rune_t __invalid_rune
  52 |   unsigned long [256] __runetype
1076 |   __rune_t [256] __maplower
2100 |   __rune_t [256] __mapupper
3124 |   _RuneRange __runetype_ext
3124 |     int __nranges
3128 |     _RuneEntry * __ranges
     |   [sizeof=8, dsize=8, align=4
     |    nvsize=8, nvalign=4]
3132 |   _RuneRange __maplower_ext
3132 |     int __nranges
3136 |     _RuneEntry * __ranges
     |   [sizeof=8, dsize=8, align=4
     |    nvsize=8, nvalign=4]
3140 |   _RuneRange __mapupper_ext
3140 |     int __nranges
3144 |     _RuneEntry * __ranges
     |   [sizeof=8, dsize=8, align=4
     |    nvsize=8, nvalign=4]
3148 |   void * __variable
3152 |   int __variable_len
     | [sizeof=3156, dsize=3156, align=4
     |  nvsize=3156, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::piecewise_construct_t (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::allocator_arg_t (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | class std::__1::tuple<> (empty)
     | [sizeof=1, dsize=0, align=1
     |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_void_pointer<class std::__1::allocator<char> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_const_void_pointer<class std::__1::allocator<char> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_propagate_on_container_copy_assignment<class std::__1::allocator<char> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_propagate_on_container_swap<class std::__1::allocator<char> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long
   0 |   size_type __cap_
   4 |   size_type __size_
   8 |   pointer __data_
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)
   0 |   unsigned char __size_
   0 |   value_type __lx
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short
   0 |   union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |     unsigned char __size_
   0 |     value_type __lx
     |   [sizeof=1, dsize=1, align=1
     |    nvsize=1, nvalign=1]
   1 |   value_type [11] __data_
     | [sizeof=12, dsize=12, align=1
     |  nvsize=12, nvalign=1]

*** Dumping AST Record Layout
   0 | union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__ulx
   0 |   struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long __lx
   0 |     size_type __cap_
   4 |     size_type __size_
   8 |     pointer __data_
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
   0 |   struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short __lxx
   0 |     union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |       unsigned char __size_
   0 |       value_type __lx
     |     [sizeof=1, dsize=1, align=1
     |      nvsize=1, nvalign=1]
   1 |     value_type [11] __data_
     |   [sizeof=12, dsize=12, align=1
     |    nvsize=12, nvalign=1]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_void_pointer<class std::__1::allocator<wchar_t> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_const_void_pointer<class std::__1::allocator<wchar_t> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_propagate_on_container_copy_assignment<class std::__1::allocator<wchar_t> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__has_propagate_on_container_swap<class std::__1::allocator<wchar_t> >::__two
   0 |   char __lx
   1 |   char __lxx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__long
   0 |   size_type __cap_
   4 |   size_type __size_
   8 |   pointer __data_
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)
   0 |   unsigned char __size_
   0 |   value_type __lx
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short
   0 |   union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |     unsigned char __size_
   0 |     value_type __lx
     |   [sizeof=4, dsize=4, align=4
     |    nvsize=4, nvalign=4]
   4 |   value_type [2] __data_
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__ulx
   0 |   struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__long __lx
   0 |     size_type __cap_
   4 |     size_type __size_
   8 |     pointer __data_
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
   0 |   struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short __lxx
   0 |     union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |       unsigned char __size_
   0 |       value_type __lx
     |     [sizeof=4, dsize=4, align=4
     |      nvsize=4, nvalign=4]
   4 |     value_type [2] __data_
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::mutex
   0 |   pthread_mutex_t __m_
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::defer_lock_t (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::try_to_lock_t (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::adopt_lock_t (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | class std::__1::condition_variable
   0 |   pthread_cond_t __cv_
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::chrono::duration<long long, class std::__1::ratio<1, 1000000000> >
   0 |   rep __rep_
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::chrono::duration<long double, class std::__1::ratio<1, 1000000000> >
   0 |   rep __rep_
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::chrono::duration<long long, class std::__1::ratio<1, 1000000> >
   0 |   rep __rep_
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::__two
   0 |   char [2] __lx
     | [sizeof=2, dsize=2, align=1
     |  nvsize=2, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::__struct_double
   0 |   long double __lx
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::__struct_double4
   0 |   double [4] __lx
     | [sizeof=32, dsize=32, align=4
     |  nvsize=32, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::aligned_storage<12, 8>::type
   0 |   unsigned char [12] __lx
     | [sizeof=16, dsize=16, align=8
     |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
   0 | struct (anonymous at /usr/include/c++/v1/functional:2364:13)
   0 |   size_t __a
   4 |   size_t __b
   8 |   size_t __c
  12 |   size_t __d
     | [sizeof=16, dsize=16, align=4
     |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
   0 | union (anonymous at /usr/include/c++/v1/functional:2361:9)
   0 |   long double __t
   0 |   struct (anonymous at /usr/include/c++/v1/functional:2364:13) 
   0 |     size_t __a
   4 |     size_t __b
   8 |     size_t __c
  12 |     size_t __d
     |   [sizeof=16, dsize=16, align=4
     |    nvsize=16, nvalign=4]
     | [sizeof=16, dsize=16, align=4
     |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::once_flag
   0 |   unsigned long __state_
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::locale::id
   0 |   struct std::__1::once_flag __flag_
   0 |     unsigned long __state_
     |   [sizeof=4, dsize=4, align=4
     |    nvsize=4, nvalign=4]
   4 |   int32_t __id_
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::__basic_string_common<true> (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | class std::__1::allocator<char> (empty)
     | [sizeof=1, dsize=0, align=1
     |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw
   0 |   size_type [3] __words
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)
   0 |   struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long __l
   0 |     size_type __cap_
   4 |     size_type __size_
   8 |     pointer __data_
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
   0 |   struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short __s
   0 |     union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |       unsigned char __size_
   0 |       value_type __lx
     |     [sizeof=1, dsize=1, align=1
     |      nvsize=1, nvalign=1]
   1 |     value_type [11] __data_
     |   [sizeof=12, dsize=12, align=1
     |    nvsize=12, nvalign=1]
   0 |   struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw __r
   0 |     size_type [3] __words
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep
   0 |   union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |     struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long __l
   0 |       size_type __cap_
   4 |       size_type __size_
   8 |       pointer __data_
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
   0 |     struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short __s
   0 |       union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |         unsigned char __size_
   0 |         value_type __lx
     |       [sizeof=1, dsize=1, align=1
     |        nvsize=1, nvalign=1]
   1 |       value_type [11] __data_
     |     [sizeof=12, dsize=12, align=1
     |      nvsize=12, nvalign=1]
   0 |     struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw __r
   0 |       size_type [3] __words
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>
   0 |   class std::__1::allocator<char> (base) (empty)
   0 |   struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep __first_
   0 |     union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |       struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long __l
   0 |         size_type __cap_
   4 |         size_type __size_
   8 |         pointer __data_
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
   0 |       struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short __s
   0 |         union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |           unsigned char __size_
   0 |           value_type __lx
     |         [sizeof=1, dsize=1, align=1
     |          nvsize=1, nvalign=1]
   1 |         value_type [11] __data_
     |       [sizeof=12, dsize=12, align=1
     |        nvsize=12, nvalign=1]
   0 |       struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw __r
   0 |         size_type [3] __words
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >
   0 |   class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> (base)
   0 |     class std::__1::allocator<char> (base) (empty)
   0 |     struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep __first_
   0 |       union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |         struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long __l
   0 |           size_type __cap_
   4 |           size_type __size_
   8 |           pointer __data_
     |         [sizeof=12, dsize=12, align=4
     |          nvsize=12, nvalign=4]
   0 |         struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short __s
   0 |           union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |             unsigned char __size_
   0 |             value_type __lx
     |           [sizeof=1, dsize=1, align=1
     |            nvsize=1, nvalign=1]
   1 |           value_type [11] __data_
     |         [sizeof=12, dsize=12, align=1
     |          nvsize=12, nvalign=1]
   0 |         struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw __r
   0 |           size_type [3] __words
     |         [sizeof=12, dsize=12, align=4
     |          nvsize=12, nvalign=4]
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::basic_string<char>
   0 |   class std::__1::__basic_string_common<true> (base) (empty)
   0 |   class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > __r_
   0 |     class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> (base)
   0 |       class std::__1::allocator<char> (base) (empty)
   0 |       struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep __first_
   0 |         union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |           struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long __l
   0 |             size_type __cap_
   4 |             size_type __size_
   8 |             pointer __data_
     |           [sizeof=12, dsize=12, align=4
     |            nvsize=12, nvalign=4]
   0 |           struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short __s
   0 |             union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |               unsigned char __size_
   0 |               value_type __lx
     |             [sizeof=1, dsize=1, align=1
     |              nvsize=1, nvalign=1]
   1 |             value_type [11] __data_
     |           [sizeof=12, dsize=12, align=1
     |            nvsize=12, nvalign=1]
   0 |           struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw __r
   0 |             size_type [3] __words
     |           [sizeof=12, dsize=12, align=4
     |            nvsize=12, nvalign=4]
     |         [sizeof=12, dsize=12, align=4
     |          nvsize=12, nvalign=4]
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::allocator<wchar_t> (empty)
     | [sizeof=1, dsize=0, align=1
     |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__raw
   0 |   size_type [3] __words
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)
   0 |   struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__long __l
   0 |     size_type __cap_
   4 |     size_type __size_
   8 |     pointer __data_
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
   0 |   struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short __s
   0 |     union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |       unsigned char __size_
   0 |       value_type __lx
     |     [sizeof=4, dsize=4, align=4
     |      nvsize=4, nvalign=4]
   4 |     value_type [2] __data_
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
   0 |   struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__raw __r
   0 |     size_type [3] __words
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep
   0 |   union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |     struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__long __l
   0 |       size_type __cap_
   4 |       size_type __size_
   8 |       pointer __data_
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
   0 |     struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short __s
   0 |       union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |         unsigned char __size_
   0 |         value_type __lx
     |       [sizeof=4, dsize=4, align=4
     |        nvsize=4, nvalign=4]
   4 |       value_type [2] __data_
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
   0 |     struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__raw __r
   0 |       size_type [3] __words
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep, class std::__1::allocator<wchar_t>, 2>
   0 |   class std::__1::allocator<wchar_t> (base) (empty)
   0 |   struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep __first_
   0 |     union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |       struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__long __l
   0 |         size_type __cap_
   4 |         size_type __size_
   8 |         pointer __data_
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
   0 |       struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short __s
   0 |         union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |           unsigned char __size_
   0 |           value_type __lx
     |         [sizeof=4, dsize=4, align=4
     |          nvsize=4, nvalign=4]
   4 |         value_type [2] __data_
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
   0 |       struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__raw __r
   0 |         size_type [3] __words
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::__compressed_pair<struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep, class std::__1::allocator<wchar_t> >
   0 |   class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep, class std::__1::allocator<wchar_t>, 2> (base)
   0 |     class std::__1::allocator<wchar_t> (base) (empty)
   0 |     struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep __first_
   0 |       union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |         struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__long __l
   0 |           size_type __cap_
   4 |           size_type __size_
   8 |           pointer __data_
     |         [sizeof=12, dsize=12, align=4
     |          nvsize=12, nvalign=4]
   0 |         struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short __s
   0 |           union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |             unsigned char __size_
   0 |             value_type __lx
     |           [sizeof=4, dsize=4, align=4
     |            nvsize=4, nvalign=4]
   4 |           value_type [2] __data_
     |         [sizeof=12, dsize=12, align=4
     |          nvsize=12, nvalign=4]
   0 |         struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__raw __r
   0 |           size_type [3] __words
     |         [sizeof=12, dsize=12, align=4
     |          nvsize=12, nvalign=4]
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
     |     [sizeof=12, dsize=12, align=4
     |      nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::basic_string<wchar_t>
   0 |   class std::__1::__basic_string_common<true> (base) (empty)
   0 |   class std::__1::__compressed_pair<struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep, class std::__1::allocator<wchar_t> > __r_
   0 |     class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep, class std::__1::allocator<wchar_t>, 2> (base)
   0 |       class std::__1::allocator<wchar_t> (base) (empty)
   0 |       struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep __first_
   0 |         union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) 
   0 |           struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__long __l
   0 |             size_type __cap_
   4 |             size_type __size_
   8 |             pointer __data_
     |           [sizeof=12, dsize=12, align=4
     |            nvsize=12, nvalign=4]
   0 |           struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short __s
   0 |             union std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) 
   0 |               unsigned char __size_
   0 |               value_type __lx
     |             [sizeof=4, dsize=4, align=4
     |              nvsize=4, nvalign=4]
   4 |             value_type [2] __data_
     |           [sizeof=12, dsize=12, align=4
     |            nvsize=12, nvalign=4]
   0 |           struct std::__1::basic_string<wchar_t, struct std::__1::char_traits<wchar_t>, class std::__1::allocator<wchar_t> >::__raw __r
   0 |             size_type [3] __words
     |           [sizeof=12, dsize=12, align=4
     |            nvsize=12, nvalign=4]
     |         [sizeof=12, dsize=12, align=4
     |          nvsize=12, nvalign=4]
     |       [sizeof=12, dsize=12, align=4
     |        nvsize=12, nvalign=4]
     |   [sizeof=12, dsize=12, align=4
     |    nvsize=12, nvalign=4]
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::money_base::pattern
   0 |   char [4] field
     | [sizeof=4, dsize=4, align=1
     |  nvsize=4, nvalign=1]

*** Dumping AST Record Layout
   0 | class std::__1::__bitset<0, 0> (empty)
     | [sizeof=1, dsize=0, align=1
     |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
   0 | class std::__1::ios_base
   0 |   (ios_base vtable pointer)
   4 |   fmtflags __fmtflags_
   8 |   streamsize __precision_
  12 |   streamsize __width_
  16 |   iostate __rdstate_
  20 |   iostate __exceptions_
  24 |   void * __rdbuf_
  28 |   void * __loc_
  32 |   event_callback * __fn_
  36 |   int * __index_
  40 |   size_t __event_size_
  44 |   size_t __event_cap_
  48 |   long * __iarray_
  52 |   size_t __iarray_size_
  56 |   size_t __iarray_cap_
  60 |   void ** __parray_
  64 |   size_t __parray_size_
  68 |   size_t __parray_cap_
     | [sizeof=72, dsize=72, align=4
     |  nvsize=72, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::basic_ios<char>
   0 |   class std::__1::ios_base (primary base)
   0 |     (ios_base vtable pointer)
   4 |     fmtflags __fmtflags_
   8 |     streamsize __precision_
  12 |     streamsize __width_
  16 |     iostate __rdstate_
  20 |     iostate __exceptions_
  24 |     void * __rdbuf_
  28 |     void * __loc_
  32 |     event_callback * __fn_
  36 |     int * __index_
  40 |     size_t __event_size_
  44 |     size_t __event_cap_
  48 |     long * __iarray_
  52 |     size_t __iarray_size_
  56 |     size_t __iarray_cap_
  60 |     void ** __parray_
  64 |     size_t __parray_size_
  68 |     size_t __parray_cap_
  72 |   basic_ostream<char_type, traits_type> * __tie_
  76 |   int_type __fill_
     | [sizeof=80, dsize=80, align=4
     |  nvsize=80, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::basic_ostream<char>
   0 |   (basic_ostream vtable pointer)
   4 |   class std::__1::basic_ios<char> (virtual base)
   4 |     class std::__1::ios_base (primary base)
   4 |       (ios_base vtable pointer)
   8 |       fmtflags __fmtflags_
  12 |       streamsize __precision_
  16 |       streamsize __width_
  20 |       iostate __rdstate_
  24 |       iostate __exceptions_
  28 |       void * __rdbuf_
  32 |       void * __loc_
  36 |       event_callback * __fn_
  40 |       int * __index_
  44 |       size_t __event_size_
  48 |       size_t __event_cap_
  52 |       long * __iarray_
  56 |       size_t __iarray_size_
  60 |       size_t __iarray_cap_
  64 |       void ** __parray_
  68 |       size_t __parray_size_
  72 |       size_t __parray_cap_
  76 |     basic_ostream<char_type, traits_type> * __tie_
  80 |     int_type __fill_
     | [sizeof=84, dsize=84, align=4
     |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2c054f60 prev 0x2b93acd0 </usr/include/c++/v1/ios:231:1, line:381:1> line:231:56 referenced class ios_base definition
|-TypeVisibilityAttr 0x2c054fb0 <col:23, col:52> Default
|-CXXRecordDecl 0x2c055030 <col:1, col:56> col:56 implicit referenced class ios_base
|-AccessSpecDecl 0x2c055080 <line:233:1, col:7> col:1 public
|-CXXRecordDecl 0x2c0550c0 <line:234:5, col:60> col:60 class failure
| `-TypeVisibilityAttr 0x2c055120 <col:27, col:56> Default
|-TypedefDecl 0x2c055160 <line:236:5, col:26> col:26 referenced fmtflags 'unsigned int'
|-VarDecl 0x2c0551b0 <line:237:5, col:39> col:27 referenced boolalpha 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0551f8 <col:39> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0551e0 <col:39> 'int' 1
|-VarDecl 0x2c055250 <line:238:5, col:33> col:27 referenced dec 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055298 <col:33> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055280 <col:33> 'int' 2
|-VarDecl 0x2c0552f0 <line:239:5, col:35> col:27 referenced fixed 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055338 <col:35> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055320 <col:35> 'int' 4
|-VarDecl 0x2c055390 <line:240:5, col:33> col:27 referenced hex 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0553d8 <col:33> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0553c0 <col:33> 'int' 8
|-VarDecl 0x2c055430 <line:241:5, col:38> col:27 referenced internal 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055478 <col:38> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055460 <col:38> 'int' 16
|-VarDecl 0x2c0554d0 <line:242:5, col:34> col:27 referenced left 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055518 <col:34> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055500 <col:34> 'int' 32
|-VarDecl 0x2c055570 <line:243:5, col:33> col:27 referenced oct 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0555b8 <col:33> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0555a0 <col:33> 'int' 64
|-VarDecl 0x2c055610 <line:244:5, col:35> col:27 referenced right 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055658 <col:35> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055640 <col:35> 'int' 128
|-VarDecl 0x2c0556b0 <line:245:5, col:40> col:27 referenced scientific 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0556f8 <col:40> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0556e0 <col:40> 'int' 256
|-VarDecl 0x2c055750 <line:246:5, col:38> col:27 referenced showbase 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055798 <col:38> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055780 <col:38> 'int' 512
|-VarDecl 0x2c0557f0 <line:247:5, col:39> col:27 referenced showpoint 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055838 <col:39> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055820 <col:39> 'int' 1024
|-VarDecl 0x2c055890 <line:248:5, col:37> col:27 referenced showpos 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0558d8 <col:37> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0558c0 <col:37> 'int' 2048
|-VarDecl 0x2c055930 <line:249:5, col:36> col:27 referenced skipws 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055978 <col:36> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055960 <col:36> 'int' 4096
|-VarDecl 0x2c0559d0 <line:250:5, col:37> col:27 referenced unitbuf 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055a18 <col:37> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055a00 <col:37> 'int' 8192
|-VarDecl 0x2c055a70 <line:251:5, col:39> col:27 referenced uppercase 'const fmtflags':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055ab8 <col:39> 'const fmtflags':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055aa0 <col:39> 'int' 16384
|-VarDecl 0x2c055b10 <line:252:5, col:56> col:27 referenced adjustfield 'const fmtflags':'const unsigned int' static cinit
| `-BinaryOperator 0x2c055bd0 <col:41, col:56> 'unsigned int' '|'
|   |-BinaryOperator 0x2c055b90 <col:41, col:48> 'unsigned int' '|'
|   | |-ImplicitCastExpr 0x2c055b70 <col:41> 'fmtflags':'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2c055b40 <col:41> 'const fmtflags':'const unsigned int' lvalue Var 0x2c0554d0 'left' 'const fmtflags':'const unsigned int'
|   | `-ImplicitCastExpr 0x2c055b80 <col:48> 'fmtflags':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c055b58 <col:48> 'const fmtflags':'const unsigned int' lvalue Var 0x2c055610 'right' 'const fmtflags':'const unsigned int'
|   `-ImplicitCastExpr 0x2c055bc0 <col:56> 'fmtflags':'unsigned int' <LValueToRValue>
|     `-DeclRefExpr 0x2c055ba8 <col:56> 'const fmtflags':'const unsigned int' lvalue Var 0x2c055430 'internal' 'const fmtflags':'const unsigned int'
|-VarDecl 0x2c055c30 <line:253:5, col:51> col:27 referenced basefield 'const fmtflags':'const unsigned int' static cinit
| `-BinaryOperator 0x2c055cf0 <col:39, col:51> 'unsigned int' '|'
|   |-BinaryOperator 0x2c055cb0 <col:39, col:45> 'unsigned int' '|'
|   | |-ImplicitCastExpr 0x2c055c90 <col:39> 'fmtflags':'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2c055c60 <col:39> 'const fmtflags':'const unsigned int' lvalue Var 0x2c055250 'dec' 'const fmtflags':'const unsigned int'
|   | `-ImplicitCastExpr 0x2c055ca0 <col:45> 'fmtflags':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c055c78 <col:45> 'const fmtflags':'const unsigned int' lvalue Var 0x2c055570 'oct' 'const fmtflags':'const unsigned int'
|   `-ImplicitCastExpr 0x2c055ce0 <col:51> 'fmtflags':'unsigned int' <LValueToRValue>
|     `-DeclRefExpr 0x2c055cc8 <col:51> 'const fmtflags':'const unsigned int' lvalue Var 0x2c055390 'hex' 'const fmtflags':'const unsigned int'
|-VarDecl 0x2c055d50 <line:254:5, col:53> col:27 referenced floatfield 'const fmtflags':'const unsigned int' static cinit
| `-BinaryOperator 0x2c055dd0 <col:40, col:53> 'unsigned int' '|'
|   |-ImplicitCastExpr 0x2c055db0 <col:40> 'fmtflags':'unsigned int' <LValueToRValue>
|   | `-DeclRefExpr 0x2c055d80 <col:40> 'const fmtflags':'const unsigned int' lvalue Var 0x2c0556b0 'scientific' 'const fmtflags':'const unsigned int'
|   `-ImplicitCastExpr 0x2c055dc0 <col:53> 'fmtflags':'unsigned int' <LValueToRValue>
|     `-DeclRefExpr 0x2c055d98 <col:53> 'const fmtflags':'const unsigned int' lvalue Var 0x2c0552f0 'fixed' 'const fmtflags':'const unsigned int'
|-TypedefDecl 0x2c055e30 <line:256:5, col:26> col:26 referenced iostate 'unsigned int'
|-TypedefDecl 0x2c055e80 <line:257:5, col:21> col:21 io_state 'iostate':'unsigned int'
|-VarDecl 0x2c055eb0 <line:258:5, col:35> col:26 referenced badbit 'const iostate':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055ef8 <col:35> 'const iostate':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055ee0 <col:35> 'int' 1
|-VarDecl 0x2c055f50 <line:259:5, col:35> col:26 referenced eofbit 'const iostate':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c055f98 <col:35> 'const iostate':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c055f80 <col:35> 'int' 2
|-VarDecl 0x2c055ff0 <line:260:5, col:36> col:26 referenced failbit 'const iostate':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c056038 <col:36> 'const iostate':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c056020 <col:36> 'int' 4
|-VarDecl 0x2c056090 <line:261:5, col:36> col:26 referenced goodbit 'const iostate':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0560d8 <col:36> 'const iostate':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0560c0 <col:36> 'int' 0
|-TypedefDecl 0x2c056130 <line:263:5, col:26> col:26 referenced openmode 'unsigned int'
|-TypedefDecl 0x2c056180 <line:264:5, col:22> col:22 open_mode 'openmode':'unsigned int'
|-VarDecl 0x2c0561b0 <line:265:5, col:33> col:27 app 'const openmode':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0561f8 <col:33> 'const openmode':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0561e0 <col:33> 'int' 1
|-VarDecl 0x2c056250 <line:266:5, col:33> col:27 ate 'const openmode':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c056298 <col:33> 'const openmode':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c056280 <col:33> 'int' 2
|-VarDecl 0x2c0562f0 <line:267:5, col:36> col:27 binary 'const openmode':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c056338 <col:36> 'const openmode':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c056320 <col:36> 'int' 4
|-VarDecl 0x2c056390 <line:268:5, col:32> col:27 referenced in 'const openmode':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c0563d8 <col:32> 'const openmode':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c0563c0 <col:32> 'int' 8
|-VarDecl 0x2c056430 <line:269:5, col:33> col:27 referenced out 'const openmode':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c056478 <col:33> 'const openmode':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c056460 <col:33> 'int' 16
|-VarDecl 0x2c0564d0 <line:270:5, col:35> col:27 trunc 'const openmode':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c056518 <col:35> 'const openmode':'const unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2c056500 <col:35> 'int' 32
|-EnumDecl 0x2c056560 <line:272:5, col:32> col:10 referenced seekdir
| |-EnumConstantDecl 0x2c0565c0 <col:19> col:19 referenced beg 'enum std::__1::ios_base::seekdir'
| |-EnumConstantDecl 0x2c0565f0 <col:24> col:24 referenced cur 'enum std::__1::ios_base::seekdir'
| `-EnumConstantDecl 0x2c056620 <col:29> col:29 referenced end 'enum std::__1::ios_base::seekdir'
|-TypedefDecl 0x2c056660 <line:273:5, col:21> col:21 seek_dir 'enum std::__1::ios_base::seekdir'
|-TypedefDecl 0x2c056700 <line:275:5, col:33> col:33 streamoff 'std::__1::streamoff':'long long'
|-TypedefDecl 0x2c056780 <line:276:5, col:33> col:33 streampos 'std::__1::streampos':'class std::__1::fpos<__mbstate_t>'
|-CXXRecordDecl 0x2c0567d0 <line:278:5, col:60> col:60 class Init
| `-TypeVisibilityAttr 0x2c056830 <col:27, col:56> Default
|-CXXMethodDecl 0x2c0568d0 <line:281:5, col:84> col:76 flags 'fmtflags (void) const'
| |-AlwaysInlineAttr 0x2c056930 <col:47> always_inline
| `-VisibilityAttr 0x2c056960 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c056a30 <line:282:5, col:98> col:76 flags 'fmtflags (fmtflags)'
| |-ParmVarDecl 0x2c0569a0 <col:82, col:91> col:91 __fmtfl 'fmtflags':'unsigned int'
| |-AlwaysInlineAttr 0x2c056aa0 <col:47> always_inline
| `-VisibilityAttr 0x2c056ad0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c056b60 <line:283:5, col:97> col:76 setf 'fmtflags (fmtflags)'
| |-ParmVarDecl 0x2c056b10 <col:81, col:90> col:90 __fmtfl 'fmtflags':'unsigned int'
| |-AlwaysInlineAttr 0x2c056bd0 <col:47> always_inline
| `-VisibilityAttr 0x2c056c00 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c056cf0 <line:284:5, col:114> col:76 setf 'fmtflags (fmtflags, fmtflags)'
| |-ParmVarDecl 0x2c056c40 <col:81, col:90> col:90 __fmtfl 'fmtflags':'unsigned int'
| |-ParmVarDecl 0x2c056c80 <col:99, col:108> col:108 __mask 'fmtflags':'unsigned int'
| |-AlwaysInlineAttr 0x2c056d60 <col:47> always_inline
| `-VisibilityAttr 0x2c056d90 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c056e40 <line:285:5, col:94> col:72 unsetf 'void (fmtflags)'
| |-ParmVarDecl 0x2c056dd0 <col:79, col:88> col:88 __mask 'fmtflags':'unsigned int'
| |-AlwaysInlineAttr 0x2c056eb0 <col:47> always_inline
| `-VisibilityAttr 0x2c056ee0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c056f60 <line:287:5, col:90> col:78 precision 'streamsize (void) const'
| |-AlwaysInlineAttr 0x2c056fc0 <col:47> always_inline
| `-VisibilityAttr 0x2c057000 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c0570b0 <line:288:5, col:105> col:78 precision 'streamsize (streamsize)'
| |-ParmVarDecl 0x2c057040 <col:88, col:99> col:99 __prec 'streamsize':'int'
| |-AlwaysInlineAttr 0x2c057120 <col:47> always_inline
| `-VisibilityAttr 0x2c057150 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c0571a0 <line:289:5, col:86> col:78 width 'streamsize (void) const'
| |-AlwaysInlineAttr 0x2c057200 <col:47> always_inline
| `-VisibilityAttr 0x2c057230 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c0572c0 <line:290:5, col:101> col:78 width 'streamsize (streamsize)'
| |-ParmVarDecl 0x2c057270 <col:84, col:95> col:95 __wide 'streamsize':'int'
| |-AlwaysInlineAttr 0x2c057330 <col:47> always_inline
| `-VisibilityAttr 0x2c057360 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c0573e0 <line:293:5, col:37> col:12 referenced imbue 'class std::__1::locale (const class std::__1::locale &)'
| `-ParmVarDecl 0x2c057390 <col:18, col:32> col:32 __loc 'const class std::__1::locale &'
|-CXXMethodDecl 0x2c057480 <line:294:5, col:21> col:12 referenced getloc 'class std::__1::locale (void) const'
|-CXXMethodDecl 0x2c057500 <line:297:5, col:23> col:16 xalloc 'int (void)' static
|-CXXMethodDecl 0x2c0575f0 <line:298:5, col:28> col:11 iword 'long &(int)'
| `-ParmVarDecl 0x2c057570 <col:17, col:21> col:21 __index 'int'
|-CXXMethodDecl 0x2c0576f0 <line:299:5, col:29> col:12 pword 'void *&(int)'
| `-ParmVarDecl 0x2c057670 <col:18, col:22> col:22 __index 'int'
|-CXXDestructorDecl 0x2c057790 <line:302:5, col:23> col:13 ~ios_base 'void (void) noexcept' virtual
|-EnumDecl 0x2c057800 <line:305:5, col:58> col:10 referenced event
| |-EnumConstantDecl 0x2c057860 <col:18> col:18 referenced erase_event 'enum std::__1::ios_base::event'
| |-EnumConstantDecl 0x2c057890 <col:31> col:31 imbue_event 'enum std::__1::ios_base::event'
| `-EnumConstantDecl 0x2c0578c0 <col:44> col:44 referenced copyfmt_event 'enum std::__1::ios_base::event'
|-TypedefDecl 0x2c057a70 <line:306:5, col:65> col:20 referenced event_callback 'void (*)(enum std::__1::ios_base::event, class std::__1::ios_base &, int)'
|-CXXMethodDecl 0x2c057b90 <line:307:5, col:60> col:10 register_callback 'void (event_callback, int)'
| |-ParmVarDecl 0x2c057ac0 <col:28, col:43> col:43 __fn 'event_callback':'void (*)(enum std::__1::ios_base::event, class std::__1::ios_base &, int)'
| `-ParmVarDecl 0x2c057b00 <col:49, col:53> col:53 __index 'int'
|-AccessSpecDecl 0x2c057c00 <line:309:1, col:8> col:1 private
|-CXXConstructorDecl 0x2c057cd0 <line:310:5, col:29> col:5 ios_base 'void (const class std::__1::ios_base &)'
| `-ParmVarDecl 0x2c057c50 <col:14, col:28> col:29 'const class std::__1::ios_base &'
|-CXXMethodDecl 0x2c057dd0 <line:311:5, col:40> col:15 operator= 'class std::__1::ios_base &(const class std::__1::ios_base &)'
| `-ParmVarDecl 0x2c057d60 <col:25, col:39> col:40 'const class std::__1::ios_base &'
|-AccessSpecDecl 0x2c057e40 <line:313:1, col:7> col:1 public
|-CXXMethodDecl 0x2c057ed0 <line:314:5, col:51> col:17 sync_with_stdio '_Bool (_Bool)' static
| `-ParmVarDecl 0x2c057e60 <col:33, col:47> col:38 __sync '_Bool' cinit
|   `-CXXBoolLiteralExpr 0x2c059750 <col:47> '_Bool' true
|-CXXMethodDecl 0x2c057f90 <line:316:5, col:85> col:75 rdstate 'iostate (void) const'
| |-AlwaysInlineAttr 0x2c057ff0 <col:47> always_inline
| `-VisibilityAttr 0x2c058020 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c0580b0 <line:317:5, col:41> col:10 used clear 'void (iostate)'
| `-ParmVarDecl 0x2c058040 <col:16, col:34> col:24 __state 'iostate':'unsigned int' cinit
|   `-ImplicitCastExpr 0x2c059778 <col:34> 'iostate':'unsigned int' <LValueToRValue>
|     `-DeclRefExpr 0x2c059760 <col:34> 'const iostate':'const unsigned int' lvalue Var 0x2c056090 'goodbit' 'const iostate':'const unsigned int'
|-CXXMethodDecl 0x2c058190 <line:318:5, col:96> col:72 setstate 'void (iostate)'
| |-ParmVarDecl 0x2c058140 <col:81, col:89> col:89 __state 'iostate':'unsigned int'
| |-AlwaysInlineAttr 0x2c058200 <col:47> always_inline
| `-VisibilityAttr 0x2c058230 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058280 <line:320:5, col:79> col:72 good '_Bool (void) const'
| |-AlwaysInlineAttr 0x2c0582e0 <col:47> always_inline
| `-VisibilityAttr 0x2c058310 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058360 <line:321:5, col:78> col:72 eof '_Bool (void) const'
| |-AlwaysInlineAttr 0x2c0583c0 <col:47> always_inline
| `-VisibilityAttr 0x2c0583f0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058440 <line:322:5, col:79> col:72 fail '_Bool (void) const'
| |-AlwaysInlineAttr 0x2c0584a0 <col:47> always_inline
| `-VisibilityAttr 0x2c0584d0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058520 <line:323:5, col:78> col:72 bad '_Bool (void) const'
| |-AlwaysInlineAttr 0x2c058580 <col:47> always_inline
| `-VisibilityAttr 0x2c0585b0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058600 <line:325:5, col:88> col:75 exceptions 'iostate (void) const'
| |-AlwaysInlineAttr 0x2c058660 <col:47> always_inline
| `-VisibilityAttr 0x2c058690 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058720 <line:326:5, col:100> col:72 exceptions 'void (iostate)'
| |-ParmVarDecl 0x2c0586d0 <col:83, col:91> col:91 __iostate 'iostate':'unsigned int'
| |-AlwaysInlineAttr 0x2c058790 <col:47> always_inline
| `-VisibilityAttr 0x2c0587c0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c0587f0 <line:328:5, col:44> col:10 __set_badbit_and_consider_rethrow 'void (void)'
|-CXXMethodDecl 0x2c058870 <line:329:5, col:45> col:10 __set_failbit_and_consider_rethrow 'void (void)'
|-AccessSpecDecl 0x2c0588d0 <line:331:1, col:10> col:1 protected
|-CXXConstructorDecl 0x2c058930 <line:332:5, line:334:16> line:333:5 ios_base 'void (void)'
| |-CompoundStmt 0x2c059788 <col:16, line:334:16>
| |-AlwaysInlineAttr 0x2c0589a0 <line:332:47> always_inline
| `-VisibilityAttr 0x2c0589d0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058a50 <line:336:5, col:25> col:10 referenced init 'void (void *)'
| `-ParmVarDecl 0x2c058a00 <col:15, col:21> col:21 __sb 'void *'
|-CXXMethodDecl 0x2c058b20 <line:337:5, col:104> col:73 rdbuf 'void *(void) const'
| |-CompoundStmt 0x2c0597e8 <col:87, col:104>
| | `-ReturnStmt 0x2c0597d8 <col:88, col:95>
| |   `-ImplicitCastExpr 0x2c0597c8 <col:95> 'void *' <LValueToRValue>
| |     `-MemberExpr 0x2c0597a8 <col:95> 'void *const' lvalue ->__rdbuf_ 0x2c059340
| |       `-CXXThisExpr 0x2c059798 <col:95> 'const class std::__1::ios_base *' this
| |-AlwaysInlineAttr 0x2c058b80 <col:47> always_inline
| `-VisibilityAttr 0x2c058bb0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058c50 <line:339:5, line:344:5> line:340:10 rdbuf 'void (void *)'
| |-ParmVarDecl 0x2c058c00 <col:16, col:22> col:22 used __sb 'void *'
| |-CompoundStmt 0x2c0598d8 <line:341:5, line:344:5>
| | |-BinaryOperator 0x2c059858 <line:342:9, col:20> 'void *' lvalue '='
| | | |-MemberExpr 0x2c059810 <col:9> 'void *' lvalue ->__rdbuf_ 0x2c059340
| | | | `-CXXThisExpr 0x2c059800 <col:9> 'class std::__1::ios_base *' this
| | | `-ImplicitCastExpr 0x2c059848 <col:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x2c059830 <col:20> 'void *' lvalue ParmVar 0x2c058c00 '__sb' 'void *'
| | `-CXXMemberCallExpr 0x2c0598a0 <line:343:9, col:15> 'void'
| |   |-MemberExpr 0x2c059880 <col:9> '<bound member function type>' ->clear 0x2c0580b0
| |   | `-CXXThisExpr 0x2c059870 <col:9> 'class std::__1::ios_base *' this
| |   `-CXXDefaultArgExpr 0x2c0598c8 <<invalid sloc>> 'iostate':'unsigned int'
| |-AlwaysInlineAttr 0x2c058cc0 <line:339:47> always_inline
| `-VisibilityAttr 0x2c058cf0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c058d80 <line:346:5, col:32> col:10 referenced __call_callbacks 'void (enum std::__1::ios_base::event)'
| `-ParmVarDecl 0x2c058d10 <col:27> col:32 'enum std::__1::ios_base::event'
|-CXXMethodDecl 0x2c058e50 <line:347:5, col:33> col:10 referenced copyfmt 'void (const class std::__1::ios_base &)'
| `-ParmVarDecl 0x2c058e00 <col:18, col:32> col:33 'const class std::__1::ios_base &'
|-CXXMethodDecl 0x2c058f40 <line:348:5, col:24> col:10 referenced move 'void (class std::__1::ios_base &)'
| `-ParmVarDecl 0x2c058ed0 <col:15, col:23> col:24 'class std::__1::ios_base &'
|-CXXMethodDecl 0x2c059030 <line:349:5, col:26> col:10 referenced swap 'void (class std::__1::ios_base &) noexcept'
| `-ParmVarDecl 0x2c058fc0 <col:15, col:23> col:24 'class std::__1::ios_base &'
|-CXXMethodDecl 0x2c059120 <line:351:5, line:355:5> line:352:10 referenced set_rdbuf 'void (void *)'
| |-ParmVarDecl 0x2c0590d0 <col:20, col:26> col:26 used __sb 'void *'
| |-CompoundStmt 0x2c059960 <line:353:5, line:355:5>
| | `-BinaryOperator 0x2c059948 <line:354:9, col:20> 'void *' lvalue '='
| |   |-MemberExpr 0x2c059900 <col:9> 'void *' lvalue ->__rdbuf_ 0x2c059340
| |   | `-CXXThisExpr 0x2c0598f0 <col:9> 'class std::__1::ios_base *' this
| |   `-ImplicitCastExpr 0x2c059938 <col:20> 'void *' <LValueToRValue>
| |     `-DeclRefExpr 0x2c059920 <col:20> 'void *' lvalue ParmVar 0x2c0590d0 '__sb' 'void *'
| |-AlwaysInlineAttr 0x2c059190 <line:351:47> always_inline
| `-VisibilityAttr 0x2c0591c0 <col:21, col:44> Hidden
|-AccessSpecDecl 0x2c0591e0 <line:357:1, col:8> col:1 private
|-FieldDecl 0x2c059200 <line:359:5, col:14> col:14 referenced __fmtflags_ 'fmtflags':'unsigned int'
|-FieldDecl 0x2c059240 <line:360:5, col:16> col:16 referenced __precision_ 'streamsize':'int'
|-FieldDecl 0x2c059280 <line:361:5, col:16> col:16 referenced __width_ 'streamsize':'int'
|-FieldDecl 0x2c0592c0 <line:362:5, col:13> col:13 referenced __rdstate_ 'iostate':'unsigned int'
|-FieldDecl 0x2c059300 <line:363:5, col:13> col:13 referenced __exceptions_ 'iostate':'unsigned int'
|-FieldDecl 0x2c059340 <line:364:5, col:11> col:11 referenced __rdbuf_ 'void *'
|-FieldDecl 0x2c059380 <line:365:5, col:11> col:11 __loc_ 'void *'
|-FieldDecl 0x2c059400 <line:366:5, col:21> col:21 __fn_ 'event_callback *'
|-FieldDecl 0x2c059440 <line:367:5, col:10> col:10 __index_ 'int *'
|-FieldDecl 0x2c059480 <line:368:5, col:12> col:12 __event_size_ 'size_t':'unsigned int'
|-FieldDecl 0x2c0594c0 <line:369:5, col:12> col:12 __event_cap_ 'size_t':'unsigned int'
|-VarDecl 0x2c059580 <line:371:5, col:24> col:24 __xindex_ 'atomic<int>':'struct std::__1::atomic<int>' static
|-FieldDecl 0x2c0595c0 <line:375:5, col:11> col:11 __iarray_ 'long *'
|-FieldDecl 0x2c059600 <line:376:5, col:12> col:12 __iarray_size_ 'size_t':'unsigned int'
|-FieldDecl 0x2c059640 <line:377:5, col:12> col:12 __iarray_cap_ 'size_t':'unsigned int'
|-FieldDecl 0x2c059680 <line:378:5, col:12> col:12 __parray_ 'void **'
|-FieldDecl 0x2c0596c0 <line:379:5, col:12> col:12 __parray_size_ 'size_t':'unsigned int'
`-FieldDecl 0x2c059700 <line:380:5, col:12> col:12 __parray_cap_ 'size_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::ios_base" = type { i32 (...)**, i32, i32, i32, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i32, i32, i32*, i32, i32, i8**, i32, i32 }
  NonVirtualBaseLLVMType:%"class.std::__1::ios_base" = type { i32 (...)**, i32, i32, i32, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i32, i32, i32*, i32, i32, i8**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2b93ebe0 parent 0x2b93ac40 </usr/include/c++/v1/streambuf:559:1, col:86> col:72 class basic_ios definition
|-public 'class std::__1::ios_base'
|-TemplateArgument type 'char'
|-TemplateArgument type 'struct std::__1::char_traits<char>'
|-TypeVisibilityAttr 0x2c097410 <col:39, col:68> Default
|-CXXRecordDecl 0x2c0974d0 prev 0x2b93ebe0 </usr/include/c++/v1/ios:571:1, col:56> col:56 implicit class basic_ios
|-AccessSpecDecl 0x2c097520 <line:574:1, col:7> col:1 public
|-TypedefDecl 0x2c097560 <line:576:5, col:20> col:20 char_type 'char':'char'
|-TypedefDecl 0x2c0975b0 <line:577:5, col:21> col:21 traits_type 'struct std::__1::char_traits<char>':'struct std::__1::char_traits<char>'
|-TypedefDecl 0x2c097640 <line:579:5, col:44> col:44 int_type 'typename traits_type::int_type':'int'
|-TypedefDecl 0x2c0976b0 <line:580:5, col:44> col:44 pos_type 'typename traits_type::pos_type':'class std::__1::fpos<__mbstate_t>'
|-TypedefDecl 0x2c097720 <line:581:5, col:44> col:44 off_type 'typename traits_type::off_type':'long long'
|-CXXConversionDecl 0x2c097750 <line:583:5, line:585:47> col:9 operator bool '_Bool (void) const'
| `-AlwaysInlineAttr 0x2c0977f0 <line:583:47> always_inline
|-CXXMethodDecl 0x2c097820 <line:586:5, col:105> col:72 operator! '_Bool (void) const'
| `-AlwaysInlineAttr 0x2c097890 <col:47> always_inline
|-CXXMethodDecl 0x2c0978c0 <line:587:5, col:119> col:75 rdstate 'iostate (void) const'
| `-AlwaysInlineAttr 0x2c097930 <col:47> always_inline
|-CXXMethodDecl 0x2c0979b0 <line:588:5, col:131> col:72 clear 'void (iostate)'
| |-ParmVarDecl 0x2c097960 <col:78, col:96> col:86 __state 'iostate':'unsigned int'
| `-AlwaysInlineAttr 0x2c097a20 <col:47> always_inline
|-CXXMethodDecl 0x2c097a80 <line:589:5, col:127> col:72 setstate 'void (iostate)'
| |-ParmVarDecl 0x2c097a50 <col:81, col:89> col:89 __state 'iostate':'unsigned int'
| `-AlwaysInlineAttr 0x2c097af0 <col:47> always_inline
|-CXXMethodDecl 0x2c097b20 <line:590:5, col:110> col:72 good '_Bool (void) const'
| `-AlwaysInlineAttr 0x2c097b90 <col:47> always_inline
|-CXXMethodDecl 0x2c097bc0 <line:591:5, col:108> col:72 eof '_Bool (void) const'
| `-AlwaysInlineAttr 0x2c097c30 <col:47> always_inline
|-CXXMethodDecl 0x2c097c60 <line:592:5, col:110> col:72 fail '_Bool (void) const'
| `-AlwaysInlineAttr 0x2c097cd0 <col:47> always_inline
|-CXXMethodDecl 0x2c097d00 <line:593:5, col:108> col:72 bad '_Bool (void) const'
| `-AlwaysInlineAttr 0x2c097d70 <col:47> always_inline
|-CXXMethodDecl 0x2c097da0 <line:595:5, col:125> col:75 exceptions 'iostate (void) const'
| `-AlwaysInlineAttr 0x2c097e10 <col:47> always_inline
|-CXXMethodDecl 0x2c097e70 <line:596:5, col:135> col:72 exceptions 'void (iostate)'
| |-ParmVarDecl 0x2c097e40 <col:83, col:91> col:91 __iostate 'iostate':'unsigned int'
| `-AlwaysInlineAttr 0x2c097ee0 <col:47> always_inline
|-CXXConstructorDecl 0x2c098070 <line:599:5, line:600:14> col:14 basic_ios 'void (basic_streambuf<char_type, traits_type> *)'
| |-ParmVarDecl 0x2c097fc0 <col:24, col:64> col:64 __sb 'basic_streambuf<char_type, traits_type> *'
| `-AlwaysInlineAttr 0x2c0980f0 <line:652:50> always_inline
|-CXXDestructorDecl 0x2c098130 <line:601:5, col:14> col:13 ~basic_ios 'void (void) noexcept' virtual
|-CXXMethodDecl 0x2c0982c0 <line:604:5, line:605:50> col:44 tie 'basic_ostream<char_type, traits_type> *(void) const'
| `-AlwaysInlineAttr 0x2c098330 <line:674:50> always_inline
|-CXXMethodDecl 0x2c098530 <line:606:5, line:607:95> col:44 tie 'basic_ostream<char_type, traits_type> *(basic_ostream<char_type, traits_type> *)'
| |-ParmVarDecl 0x2c098470 <col:48, col:87> col:87 __tiestr 'basic_ostream<char_type, traits_type> *'
| `-AlwaysInlineAttr 0x2c0985a0 <line:682:50> always_inline
|-CXXMethodDecl 0x2c0986c0 <line:609:5, line:610:54> col:46 rdbuf 'basic_streambuf<char_type, traits_type> *(void) const'
| `-AlwaysInlineAttr 0x2c098730 <line:692:50> always_inline
|-CXXMethodDecl 0x2c098930 <line:611:5, line:612:97> col:46 rdbuf 'basic_streambuf<char_type, traits_type> *(basic_streambuf<char_type, traits_type> *)'
| |-ParmVarDecl 0x2c098870 <col:52, col:93> col:93 __sb 'basic_streambuf<char_type, traits_type> *'
| `-AlwaysInlineAttr 0x2c0989a0 <line:700:50> always_inline
|-CXXMethodDecl 0x2c098a90 <line:614:5, col:46> col:16 copyfmt 'class std::__1::basic_ios<char> &(const class std::__1::basic_ios<char> &)'
| `-ParmVarDecl 0x2c098a20 <col:24, col:41> col:41 __rhs 'const class std::__1::basic_ios<char> &'
|-CXXMethodDecl 0x2c098b30 <line:616:5, line:617:22> col:15 fill 'char_type (void) const'
| `-AlwaysInlineAttr 0x2c098ba0 <line:738:50> always_inline
|-CXXMethodDecl 0x2c098c60 <line:618:5, line:619:34> col:15 fill 'char_type (char_type)'
| |-ParmVarDecl 0x2c098bd0 <col:20, col:30> col:30 __ch 'char_type':'char'
| `-AlwaysInlineAttr 0x2c098cd0 <line:748:50> always_inline
|-CXXMethodDecl 0x2c098d30 <line:621:5, line:622:37> col:12 imbue 'class std::__1::locale (const class std::__1::locale &)'
| |-ParmVarDecl 0x2c098d00 <col:18, col:32> col:32 __loc 'const class std::__1::locale &'
| `-AlwaysInlineAttr 0x2c098da0 <line:710:50> always_inline
|-CXXMethodDecl 0x2c098e70 <line:624:5, line:625:47> col:10 narrow 'char (char_type, char) const'
| |-ParmVarDecl 0x2c098dd0 <col:17, col:27> col:27 __c 'char_type':'char'
| |-ParmVarDecl 0x2c098e00 <col:32, col:37> col:37 __dfault 'char'
| `-AlwaysInlineAttr 0x2c098ee0 <line:722:50> always_inline
|-CXXMethodDecl 0x2c098f80 <line:626:5, line:627:31> col:15 widen 'char_type (char) const'
| |-ParmVarDecl 0x2c098f10 <col:21, col:26> col:26 __c 'char'
| `-AlwaysInlineAttr 0x2c098ff0 <line:730:50> always_inline
|-AccessSpecDecl 0x2c099020 <line:629:1, col:10> col:1 protected
|-CXXConstructorDecl 0x2c099050 <line:630:5, line:631:5> col:5 basic_ios 'void (void)'
| `-AlwaysInlineAttr 0x2c0990d0 <line:630:47> always_inline
|-CXXMethodDecl 0x2c099210 <line:633:5, line:634:60> col:10 init 'void (basic_streambuf<char_type, traits_type> *)'
| |-ParmVarDecl 0x2c0991a0 <col:15, col:56> col:56 __sb 'basic_streambuf<char_type, traits_type> *'
| `-AlwaysInlineAttr 0x2c099280 <line:664:50> always_inline
|-CXXMethodDecl 0x2c099330 <line:636:5, line:637:31> col:10 move 'void (class std::__1::basic_ios<char> &)'
| |-ParmVarDecl 0x2c0992c0 <col:15, col:26> col:26 __rhs 'class std::__1::basic_ios<char> &'
| `-AlwaysInlineAttr 0x2c0993a0 <line:774:50> always_inline
|-CXXMethodDecl 0x2c099470 <line:639:5, line:640:47> col:10 move 'void (class std::__1::basic_ios<char> &&)'
| |-ParmVarDecl 0x2c099400 <col:15, col:27> col:27 __rhs 'class std::__1::basic_ios<char> &&'
| `-AlwaysInlineAttr 0x2c0994e0 <line:639:47> always_inline
|-CXXMethodDecl 0x2c099590 <line:642:5, line:643:33> col:10 swap 'void (class std::__1::basic_ios<char> &) noexcept'
| |-ParmVarDecl 0x2c099520 <col:15, col:26> col:26 __rhs 'class std::__1::basic_ios<char> &'
| `-AlwaysInlineAttr 0x2c099600 <line:785:50> always_inline
|-CXXMethodDecl 0x2c099740 <line:644:5, line:645:65> col:10 set_rdbuf 'void (basic_streambuf<char_type, traits_type> *)'
| |-ParmVarDecl 0x2c0996d0 <col:20, col:61> col:61 __sb 'basic_streambuf<char_type, traits_type> *'
| `-AlwaysInlineAttr 0x2c0997b0 <line:795:50> always_inline
|-AccessSpecDecl 0x2c0997e0 <line:646:1, col:8> col:1 private
|-FieldDecl 0x2c0998a0 <line:647:5, col:44> col:44 __tie_ 'basic_ostream<char_type, traits_type> *'
|-FieldDecl 0x2c0998f0 <line:648:6, col:23> col:23 __fill_ 'int_type':'int' mutable
|-CXXConstructorDecl 0x2c099940 </usr/include/c++/v1/streambuf:559:72> col:72 implicit basic_ios 'void (const class std::__1::basic_ios<char> &)' inline noexcept-unevaluated 0x2c099940
| `-ParmVarDecl 0x2c0999f0 <col:72> col:72 'const class std::__1::basic_ios<char> &'
`-CXXMethodDecl 0x2c099a30 <col:72, <invalid sloc>> col:72 implicit operator= 'class std::__1::basic_ios<char> &(const class std::__1::basic_ios<char> &)' inline noexcept-unevaluated 0x2c099a30
  `-ParmVarDecl 0x2c099ab0 <col:72> col:72 'const class std::__1::basic_ios<char> &'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::basic_ios" = type { %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }
  NonVirtualBaseLLVMType:%"class.std::__1::basic_ios" = type { %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2b8e1420 parent 0x2b93ac40 </usr/include/c++/v1/ostream:1108:1, col:90> col:72 class basic_ostream definition
|-virtual public 'basic_ios<char, struct std::__1::char_traits<char> >':'class std::__1::basic_ios<char>'
|-TemplateArgument type 'char'
|-TemplateArgument type 'struct std::__1::char_traits<char>'
|-TypeVisibilityAttr 0x2c2b6ad0 <col:39, col:68> Default
|-CXXRecordDecl 0x2c2b6c70 prev 0x2b8e1420 <line:151:1, col:56> col:56 implicit class basic_ostream
|-AccessSpecDecl 0x2c2b6cc0 <line:154:1, col:7> col:1 public
|-TypedefDecl 0x2c2b6ce0 <line:156:5, col:20> col:20 char_type 'char':'char'
|-TypedefDecl 0x2c2b6d10 <line:157:5, col:21> col:21 traits_type 'struct std::__1::char_traits<char>':'struct std::__1::char_traits<char>'
|-TypedefDecl 0x2c2b6da0 <line:158:5, col:44> col:44 int_type 'typename traits_type::int_type':'int'
|-TypedefDecl 0x2c2b6e10 <line:159:5, col:44> col:44 pos_type 'typename traits_type::pos_type':'class std::__1::fpos<__mbstate_t>'
|-TypedefDecl 0x2c2b6e80 <line:160:5, col:44> col:44 off_type 'typename traits_type::off_type':'long long'
|-CXXConstructorDecl 0x2c2b6ff0 <line:163:5, col:14> col:14 basic_ostream 'void (basic_streambuf<char_type, traits_type> *)'
| |-ParmVarDecl 0x2c2b6f60 <col:28, col:69> col:69 __sb 'basic_streambuf<char_type, traits_type> *'
| `-AlwaysInlineAttr 0x2c2b7070 <line:278:50> always_inline
|-CXXDestructorDecl 0x2c2b70b0 <line:164:5, col:14> col:13 ~basic_ostream 'void (void) noexcept' virtual
|-AccessSpecDecl 0x2c2b7130 <line:165:1, col:10> col:1 protected
|-CXXConstructorDecl 0x2c2b7200 <line:167:5, line:168:5> col:5 basic_ostream 'void (class std::__1::basic_ostream<char> &&)'
| |-ParmVarDecl 0x2c2b7180 <col:19, col:35> col:35 __rhs 'class std::__1::basic_ostream<char> &&'
| `-AlwaysInlineAttr 0x2c2b7280 <line:287:50> always_inline
|-CXXMethodDecl 0x2c2b7350 <line:173:5, line:174:51> col:20 operator= 'class std::__1::basic_ostream<char> &(class std::__1::basic_ostream<char> &&)'
| |-ParmVarDecl 0x2c2b72e0 <col:30, col:46> col:46 __rhs 'class std::__1::basic_ostream<char> &&'
| `-AlwaysInlineAttr 0x2c2b73c0 <line:294:50> always_inline
|-CXXMethodDecl 0x2c2b7470 <line:176:5, col:35> col:10 swap 'void (class std::__1::basic_ostream<char> &)'
| |-ParmVarDecl 0x2c2b7400 <col:15, col:30> col:30 __rhs 'class std::__1::basic_ostream<char> &'
| `-AlwaysInlineAttr 0x2c2b74e0 <line:310:50> always_inline
|-CXXConstructorDecl 0x2c2b75c0 <line:179:5> col:5 basic_ostream 'void (const class std::__1::basic_ostream<char> &)' delete
| `-ParmVarDecl 0x2c2b7540 <col:20, col:41> col:41 __rhs 'const class std::__1::basic_ostream<char> &'
|-CXXMethodDecl 0x2c2b76c0 <line:180:5, col:56> col:20 operator= 'class std::__1::basic_ostream<char> &(const class std::__1::basic_ostream<char> &)' delete
| `-ParmVarDecl 0x2c2b7650 <col:30, col:51> col:51 __rhs 'const class std::__1::basic_ostream<char> &'
|-AccessSpecDecl 0x2c2b7730 <line:185:1, col:7> col:1 public
|-CXXRecordDecl 0x2c2b7750 <line:188:5, col:60> col:60 class sentry definition
| |-CXXRecordDecl 0x2c2b93b0 prev 0x2c2b7750 <line:226:1, col:88> col:88 implicit class sentry
| |-FieldDecl 0x2c2b9400 <line:228:5, col:10> col:10 __ok_ '_Bool'
| |-FieldDecl 0x2c2b9500 <line:229:5, col:37> col:37 __os_ 'basic_ostream<char, struct std::__1::char_traits<char> > &'
| |-CXXConstructorDecl 0x2c2b95f0 <line:231:5> col:5 sentry 'void (const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &)'
| | `-ParmVarDecl 0x2c2b9560 <col:12, col:24> col:25 'const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &'
| |-CXXMethodDecl 0x2c2b9710 <line:232:5, col:36> col:13 operator= 'class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &(const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &)'
| | `-ParmVarDecl 0x2c2b96a0 <col:23, col:35> col:36 'const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &'
| |-AccessSpecDecl 0x2c2b9780 <line:234:1, col:7> col:1 public
| |-CXXConstructorDecl 0x2c2b98c0 <line:235:5, col:14> col:14 sentry 'void (basic_ostream<char, struct std::__1::char_traits<char> > &)'
| | `-ParmVarDecl 0x2c2b9840 <col:21, col:53> col:53 __os 'basic_ostream<char, struct std::__1::char_traits<char> > &'
| |-CXXDestructorDecl 0x2c2b9960 <line:236:5, col:6> col:5 ~sentry 'void (void)' noexcept-unevaluated 0x2c2b9960
| `-CXXConversionDecl 0x2c2b99e0 <line:238:5, line:240:45> col:9 operator bool '_Bool (void) const'
|   `-AlwaysInlineAttr 0x2c2b9a80 <line:238:47> always_inline
|-CXXMethodDecl 0x2c2b7940 <line:191:5, col:69> col:20 used operator<< 'class std::__1::basic_ostream<char> &(class std::__1::basic_ostream<char> &(*)(class std::__1::basic_ostream<char> &))'
| |-ParmVarDecl 0x2c2b78b0 <col:31, col:68> col:48 __pf 'class std::__1::basic_ostream<char> &(*)(class std::__1::basic_ostream<char> &)'
| `-AlwaysInlineAttr 0x2c2b79b0 <line:318:50> always_inline
|-CXXMethodDecl 0x2c2b7ca0 <line:192:5, line:193:73> line:192:20 operator<< 'class std::__1::basic_ostream<char> &(basic_ios<char_type, traits_type> &(*)(basic_ios<char_type, traits_type> &))'
| |-ParmVarDecl 0x2c2b7c10 <col:31, line:193:72> col:33 __pf 'basic_ios<char_type, traits_type> &(*)(basic_ios<char_type, traits_type> &)'
| `-AlwaysInlineAttr 0x2c2b7d10 <line:326:50> always_inline
|-CXXMethodDecl 0x2c2b7dd0 <line:194:5, col:59> col:20 used operator<< 'class std::__1::basic_ostream<char> &(class std::__1::ios_base &(*)(class std::__1::ios_base &))'
| |-ParmVarDecl 0x2c2b7d40 <col:31, col:58> col:43 __pf 'class std::__1::ios_base &(*)(class std::__1::ios_base &)'
| `-AlwaysInlineAttr 0x2c2b7e40 <line:336:50> always_inline
|-CXXMethodDecl 0x2c2b7ee0 <line:195:5, col:39> col:20 used operator<< 'class std::__1::basic_ostream<char> &(_Bool)'
| `-ParmVarDecl 0x2c2b7e70 <col:31, col:36> col:36 __n '_Bool'
|-CXXMethodDecl 0x2c2b7fc0 <line:196:5, col:40> col:20 operator<< 'class std::__1::basic_ostream<char> &(short)'
| `-ParmVarDecl 0x2c2b7f50 <col:31, col:37> col:37 __n 'short'
|-CXXMethodDecl 0x2c2b80a0 <line:197:5, col:49> col:20 operator<< 'class std::__1::basic_ostream<char> &(unsigned short)'
| `-ParmVarDecl 0x2c2b8030 <col:31, col:46> col:46 __n 'unsigned short'
|-CXXMethodDecl 0x2c2b8180 <line:198:5, col:38> col:20 operator<< 'class std::__1::basic_ostream<char> &(int)'
| `-ParmVarDecl 0x2c2b8110 <col:31, col:35> col:35 __n 'int'
|-CXXMethodDecl 0x2c2b8260 <line:199:5, col:47> col:20 operator<< 'class std::__1::basic_ostream<char> &(unsigned int)'
| `-ParmVarDecl 0x2c2b81f0 <col:31, col:44> col:44 __n 'unsigned int'
|-CXXMethodDecl 0x2c2b8340 <line:200:5, col:39> col:20 operator<< 'class std::__1::basic_ostream<char> &(long)'
| `-ParmVarDecl 0x2c2b82d0 <col:31, col:36> col:36 __n 'long'
|-CXXMethodDecl 0x2c2b8420 <line:201:5, col:48> col:20 operator<< 'class std::__1::basic_ostream<char> &(unsigned long)'
| `-ParmVarDecl 0x2c2b83b0 <col:31, col:45> col:45 __n 'unsigned long'
|-CXXMethodDecl 0x2c2b8500 <line:202:5, col:44> col:20 operator<< 'class std::__1::basic_ostream<char> &(long long)'
| `-ParmVarDecl 0x2c2b8490 <col:31, col:41> col:41 __n 'long long'
|-CXXMethodDecl 0x2c2b85e0 <line:203:5, col:53> col:20 operator<< 'class std::__1::basic_ostream<char> &(unsigned long long)'
| `-ParmVarDecl 0x2c2b8570 <col:31, col:50> col:50 __n 'unsigned long long'
|-CXXMethodDecl 0x2c2b86c0 <line:204:5, col:40> col:20 operator<< 'class std::__1::basic_ostream<char> &(float)'
| `-ParmVarDecl 0x2c2b8650 <col:31, col:37> col:37 __f 'float'
|-CXXMethodDecl 0x2c2b87a0 <line:205:5, col:41> col:20 operator<< 'class std::__1::basic_ostream<char> &(double)'
| `-ParmVarDecl 0x2c2b8730 <col:31, col:38> col:38 __f 'double'
|-CXXMethodDecl 0x2c2b8880 <line:206:5, col:46> col:20 operator<< 'class std::__1::basic_ostream<char> &(long double)'
| `-ParmVarDecl 0x2c2b8810 <col:31, col:43> col:43 __f 'long double'
|-CXXMethodDecl 0x2c2b8960 <line:207:5, col:46> col:20 operator<< 'class std::__1::basic_ostream<char> &(const void *)'
| `-ParmVarDecl 0x2c2b88f0 <col:31, col:43> col:43 __p 'const void *'
|-CXXMethodDecl 0x2c2b8b00 <line:208:5, col:76> col:20 operator<< 'class std::__1::basic_ostream<char> &(basic_streambuf<char_type, traits_type> *)'
| `-ParmVarDecl 0x2c2b8a70 <col:31, col:72> col:72 __sb 'basic_streambuf<char_type, traits_type> *'
|-CXXMethodDecl 0x2c2b8c10 <line:211:5, col:37> col:20 put 'class std::__1::basic_ostream<char> &(char_type)'
| `-ParmVarDecl 0x2c2b8b80 <col:24, col:34> col:34 __c 'char_type':'char'
|-CXXMethodDecl 0x2c2b8d80 <line:212:5, col:62> col:20 write 'class std::__1::basic_ostream<char> &(const char_type *, streamsize)'
| |-ParmVarDecl 0x2c2b8cb0 <col:26, col:43> col:43 __s 'const char_type *'
| `-ParmVarDecl 0x2c2b8ce0 <col:48, col:59> col:59 __n 'streamsize':'int'
|-CXXMethodDecl 0x2c2b8e30 <line:213:5, col:26> col:20 flush 'class std::__1::basic_ostream<char> &(void)'
|-CXXMethodDecl 0x2c2b8f00 <line:216:5, col:20> col:14 tellp 'pos_type (void)'
| `-AlwaysInlineAttr 0x2c2b8f70 <line:992:50> always_inline
|-CXXMethodDecl 0x2c2b9030 <line:217:5, col:40> col:20 seekp 'class std::__1::basic_ostream<char> &(pos_type)'
| |-ParmVarDecl 0x2c2b8fa0 <col:26, col:35> col:35 __pos 'pos_type':'class std::__1::fpos<__mbstate_t>'
| `-AlwaysInlineAttr 0x2c2b90a0 <line:1002:50> always_inline
|-CXXMethodDecl 0x2c2b91c0 <line:218:5, col:65> col:20 seekp 'class std::__1::basic_ostream<char> &(off_type, class ios_base::seekdir)'
| |-ParmVarDecl 0x2c2b90f0 <col:26, col:35> col:35 __off 'off_type':'long long'
| |-ParmVarDecl 0x2c2b9120 <col:42, col:60> col:60 __dir 'class ios_base::seekdir':'enum std::__1::ios_base::seekdir'
| `-AlwaysInlineAttr 0x2c2b9230 <line:1016:50> always_inline
|-AccessSpecDecl 0x2c2b9260 <line:220:1, col:10> col:1 protected
`-CXXConstructorDecl 0x2c2b9290 <line:221:5, line:222:5> col:5 basic_ostream 'void (void)'
  `-AlwaysInlineAttr 0x2c2b9310 <line:221:47> always_inline

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios" }
  NonVirtualBaseLLVMType:%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | struct data::tuple<> (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | struct data::tuple<const char *>
   0 |   struct data::tuple<> (base) (empty)
   0 |   const char * tail
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | struct data::tuple<unsigned long long, const char *>
   0 |   struct data::tuple<const char *> (base)
   0 |     struct data::tuple<> (base) (empty)
   0 |     const char * tail
   4 |   unsigned long long tail
     | [sizeof=12, dsize=12, align=4
     |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
   0 | struct data::tuple<double, unsigned long long, const char *>
   0 |   struct data::tuple<unsigned long long, const char *> (base)
   0 |     struct data::tuple<const char *> (base)
   0 |       struct data::tuple<> (base) (empty)
   0 |       const char * tail
   4 |     unsigned long long tail
  12 |   double tail
     | [sizeof=20, dsize=20, align=4
     |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2c313d30 <./include/tuple.hpp:8:3, line:9:17> col:10 struct tuple definition
|-TemplateArgument pack
|-CXXRecordDecl 0x2c313e50 prev 0x2c313d30 <col:3, col:10> col:10 implicit struct tuple
|-CXXConstructorDecl 0x2c3145f0 <col:10> col:10 implicit constexpr tuple 'void (const struct data::tuple<> &)' inline noexcept-unevaluated 0x2c3145f0
| `-ParmVarDecl 0x2c3146a0 <col:10> col:10 'const struct data::tuple<> &'
|-CXXConstructorDecl 0x2c314700 <col:10> col:10 implicit constexpr tuple 'void (struct data::tuple<> &&)' inline noexcept-unevaluated 0x2c314700
| `-ParmVarDecl 0x2c3147b0 <col:10> col:10 'struct data::tuple<> &&'
`-CXXDestructorDecl 0x2c3148f0 <col:10> col:10 implicit ~tuple 'void (void)' inline noexcept-unevaluated 0x2c3148f0

Layout: <CGRecordLayout
  LLVMType:%"struct.data::tuple.2" = type { i8 }
  NonVirtualBaseLLVMType:%"struct.data::tuple.2" = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2c313b50 <./include/tuple.hpp:11:3, line:17:3> line:12:10 struct tuple definition
|-public 'tuple<>':'struct data::tuple<>'
|-TemplateArgument pack
| `-TemplateArgument type 'const char *'
|-CXXRecordDecl 0x2c313ed0 prev 0x2c313b50 <col:3, col:10> col:10 implicit struct tuple
|-CXXConstructorDecl 0x2c313fc0 <line:15:5> col:5 tuple 'void (const char *)'
| `-ParmVarDecl 0x2c313f30 <col:11, col:13> col:13 t 'const char *':'const char *'
|-FieldDecl 0x2c314050 <line:16:5, col:7> col:7 tail 'const char *':'const char *'
|-CXXConstructorDecl 0x2c3147f0 <line:12:10> col:10 implicit constexpr tuple 'void (const struct data::tuple<const char *> &)' inline noexcept-unevaluated 0x2c3147f0
| `-ParmVarDecl 0x2c3148a0 <col:10> col:10 'const struct data::tuple<const char *> &'
|-CXXConstructorDecl 0x2c3149a0 <col:10> col:10 implicit constexpr tuple 'void (struct data::tuple<const char *> &&)' inline noexcept-unevaluated 0x2c3149a0
| `-ParmVarDecl 0x2c314a50 <col:10> col:10 'struct data::tuple<const char *> &&'
`-CXXDestructorDecl 0x2c314b90 <col:10> col:10 implicit ~tuple 'void (void)' inline noexcept-unevaluated 0x2c314b90

Layout: <CGRecordLayout
  LLVMType:%"struct.data::tuple.1" = type { i8* }
  NonVirtualBaseLLVMType:%"struct.data::tuple.1" = type { i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2c3138d0 <./include/tuple.hpp:11:3, line:17:3> line:12:10 struct tuple definition
|-public 'tuple<const char *>':'struct data::tuple<const char *>'
|-TemplateArgument pack
| |-TemplateArgument type 'unsigned long long'
| `-TemplateArgument type 'const char *'
|-CXXRecordDecl 0x2c3140b0 prev 0x2c3138d0 <col:3, col:10> col:10 implicit struct tuple
|-CXXConstructorDecl 0x2c314200 <line:15:5> col:5 tuple 'void (unsigned long long, const char *)'
| |-ParmVarDecl 0x2c314110 <col:11, col:13> col:13 t 'unsigned long long':'unsigned long long'
| `-ParmVarDecl 0x2c314150 <col:16, col:22> col:22 ts 'const char *':'const char *'
|-FieldDecl 0x2c314290 <line:16:5, col:7> col:7 tail 'unsigned long long':'unsigned long long'
|-CXXConstructorDecl 0x2c314a90 <line:12:10> col:10 implicit constexpr tuple 'void (const struct data::tuple<unsigned long long, const char *> &)' inline noexcept-unevaluated 0x2c314a90
| `-ParmVarDecl 0x2c314b40 <col:10> col:10 'const struct data::tuple<unsigned long long, const char *> &'
|-CXXConstructorDecl 0x2c314c40 <col:10> col:10 implicit constexpr tuple 'void (struct data::tuple<unsigned long long, const char *> &&)' inline noexcept-unevaluated 0x2c314c40
| `-ParmVarDecl 0x2c314cf0 <col:10> col:10 'struct data::tuple<unsigned long long, const char *> &&'
`-CXXDestructorDecl 0x2c314e30 <col:10> col:10 implicit ~tuple 'void (void)' inline noexcept-unevaluated 0x2c314e30

Layout: <CGRecordLayout
  LLVMType:%"struct.data::tuple.0" = type { %"struct.data::tuple.1", i64 }
  NonVirtualBaseLLVMType:%"struct.data::tuple.0" = type { %"struct.data::tuple.1", i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2c313460 <./include/tuple.hpp:11:3, line:17:3> line:12:10 struct tuple definition
|-public 'tuple<unsigned long long, const char *>':'struct data::tuple<unsigned long long, const char *>'
|-TemplateArgument pack
| |-TemplateArgument type 'double'
| |-TemplateArgument type 'unsigned long long'
| `-TemplateArgument type 'const char *'
|-CXXRecordDecl 0x2c3142f0 prev 0x2c313460 <col:3, col:10> col:10 implicit struct tuple
|-CXXConstructorDecl 0x2c3144a0 <line:15:5> col:5 used tuple 'void (double, unsigned long long, const char *)'
| |-ParmVarDecl 0x2c314350 <col:11, col:13> col:13 t 'double':'double'
| |-ParmVarDecl 0x2c314390 <col:16, col:22> col:22 ts 'unsigned long long':'unsigned long long'
| `-ParmVarDecl 0x2c3143d0 <col:16, col:22> col:22 ts 'const char *':'const char *'
|-FieldDecl 0x2c314530 <line:16:5, col:7> col:7 tail 'double':'double'
|-CXXConstructorDecl 0x2c314d30 <line:12:10> col:10 implicit constexpr tuple 'void (const struct data::tuple<double, unsigned long long, const char *> &)' inline noexcept-unevaluated 0x2c314d30
| `-ParmVarDecl 0x2c314de0 <col:10> col:10 'const struct data::tuple<double, unsigned long long, const char *> &'
`-CXXConstructorDecl 0x2c314ee0 <col:10> col:10 implicit constexpr tuple 'void (struct data::tuple<double, unsigned long long, const char *> &&)' inline noexcept-unevaluated 0x2c314ee0
  `-ParmVarDecl 0x2c314f90 <col:10> col:10 'struct data::tuple<double, unsigned long long, const char *> &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.data::tuple" = type { %"struct.data::tuple.0", double }
  NonVirtualBaseLLVMType:%"struct.data::tuple" = type { %"struct.data::tuple.0", double }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | struct data::elem_type_holder<2, struct data::tuple<double, unsigned long long, const char *> > (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2c315250 <./include/tuple.hpp:29:3, line:33:3> line:30:10 struct elem_type_holder definition
|-TemplateArgument integral 2
|-TemplateArgument type 'struct data::tuple<double, unsigned long long, const char *>'
|-CXXRecordDecl 0x2c315700 prev 0x2c315250 <col:3, col:10> col:10 implicit struct elem_type_holder
|-TypedefDecl 0x2c316680 <line:32:5, col:64> col:64 type 'typename elem_type_holder<2U - 1, tuple<unsigned long long, const char *> >::type':'const char *'
|-CXXConstructorDecl 0x2c3166c0 <line:30:10> col:10 implicit used constexpr elem_type_holder 'void (void) noexcept' inline
| `-CompoundStmt 0x2c316968 <col:10>
|-CXXConstructorDecl 0x2c316770 <col:10> col:10 implicit constexpr elem_type_holder 'void (const struct data::elem_type_holder<2, struct data::tuple<double, unsigned long long, const char *> > &)' inline noexcept-unevaluated 0x2c316770
| `-ParmVarDecl 0x2c316820 <col:10> col:10 'const struct data::elem_type_holder<2, struct data::tuple<double, unsigned long long, const char *> > &'
`-CXXConstructorDecl 0x2c316880 <col:10> col:10 implicit constexpr elem_type_holder 'void (struct data::elem_type_holder<2, struct data::tuple<double, unsigned long long, const char *> > &&)' inline noexcept-unevaluated 0x2c316880
  `-ParmVarDecl 0x2c316930 <col:10> col:10 'struct data::elem_type_holder<2, struct data::tuple<double, unsigned long long, const char *> > &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.data::elem_type_holder" = type { i8 }
  NonVirtualBaseLLVMType:%"struct.data::elem_type_holder" = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | union (anonymous at /usr/include/c++/v1/memory:3314:9)
   0 |   float __t
   0 |   size_t __a
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | struct (anonymous at /usr/include/c++/v1/memory:3334:13)
   0 |   size_t __a
   4 |   size_t __b
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
   0 | union (anonymous at /usr/include/c++/v1/memory:3331:9)
   0 |   double __t
   0 |   struct (anonymous at /usr/include/c++/v1/memory:3334:13) 
   0 |     size_t __a
   4 |     size_t __b
     |   [sizeof=8, dsize=8, align=4
     |    nvsize=8, nvalign=4]
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
   0 | struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void> (empty)
     | [sizeof=1, dsize=1, align=1
     |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
   0 | class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> >
   0 |   struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void> (base) (empty)
   0 |   streambuf_type * __sbuf_
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry
   0 |   _Bool __ok_
   4 |   basic_ostream<char, struct std::__1::char_traits<char> > & __os_
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2c2b7750 </usr/include/c++/v1/ostream:188:5, col:60> col:60 referenced class sentry definition
|-CXXRecordDecl 0x2c2b93b0 prev 0x2c2b7750 <line:226:1, col:88> col:88 implicit class sentry
|-FieldDecl 0x2c2b9400 <line:228:5, col:10> col:10 referenced __ok_ '_Bool'
|-FieldDecl 0x2c2b9500 <line:229:5, col:37> col:37 __os_ 'basic_ostream<char, struct std::__1::char_traits<char> > &'
|-CXXConstructorDecl 0x2c2b95f0 <line:231:5> col:5 sentry 'void (const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &)'
| `-ParmVarDecl 0x2c2b9560 <col:12, col:24> col:25 'const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &'
|-CXXMethodDecl 0x2c2b9710 <line:232:5, col:36> col:13 operator= 'class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &(const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &)'
| `-ParmVarDecl 0x2c2b96a0 <col:23, col:35> col:36 'const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry &'
|-AccessSpecDecl 0x2c2b9780 <line:234:1, col:7> col:1 public
|-CXXConstructorDecl 0x2c2b98c0 <line:235:5, col:14> col:14 used sentry 'void (basic_ostream<char, struct std::__1::char_traits<char> > &)'
| `-ParmVarDecl 0x2c2b9840 <col:21, col:53> col:53 __os 'basic_ostream<char, struct std::__1::char_traits<char> > &'
|-CXXDestructorDecl 0x2c2b9960 <line:236:5, col:6> col:5 used ~sentry 'void (void) noexcept'
`-CXXConversionDecl 0x2c2b99e0 <line:238:5, line:240:45> col:9 used operator bool '_Bool (void) const'
  |-CompoundStmt 0x2c338358 <col:31, col:45>
  | `-ReturnStmt 0x2c338348 <col:32, col:39>
  |   `-ImplicitCastExpr 0x2c338338 <col:39> '_Bool' <LValueToRValue>
  |     `-MemberExpr 0x2c338318 <col:39> 'const _Bool' lvalue ->__ok_ 0x2c2b9400
  |       `-CXXThisExpr 0x2c338308 <col:39> 'const class std::__1::basic_ostream<char, struct std::__1::char_traits<char> >::sentry *' this
  `-AlwaysInlineAttr 0x2c2b9a80 <line:238:47> always_inline

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
  NonVirtualBaseLLVMType:%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2bb15880 </usr/include/c++/v1/iterator:440:1, line:449:1> line:442:57 struct iterator definition
|-TemplateArgument type 'struct std::__1::output_iterator_tag'
|-TemplateArgument type 'void'
|-TemplateArgument type 'void'
|-TemplateArgument type 'void'
|-TemplateArgument type 'void'
|-CXXRecordDecl 0x2bb15ab0 prev 0x2bb15880 <col:1, col:57> col:57 implicit struct iterator
|-TypedefDecl 0x2bb15b20 <line:444:5, col:17> col:17 value_type 'void':'void'
|-TypedefDecl 0x2bb15b70 <line:445:5, col:23> col:23 difference_type 'void':'void'
|-TypedefDecl 0x2bb15bc0 <line:446:5, col:22> col:22 pointer 'void':'void'
|-TypedefDecl 0x2bb15c10 <line:447:5, col:24> col:24 reference 'void':'void'
|-TypedefDecl 0x2bb15c60 <line:448:5, col:23> col:23 iterator_category 'struct std::__1::output_iterator_tag':'struct std::__1::output_iterator_tag'
|-CXXConstructorDecl 0x2c321ac0 <line:442:57> col:57 implicit constexpr iterator 'void (const struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void> &)' inline noexcept-unevaluated 0x2c321ac0
| `-ParmVarDecl 0x2c321b70 <col:57> col:57 'const struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void> &'
|-CXXConstructorDecl 0x2c321bd0 <col:57> col:57 implicit used constexpr iterator 'void (struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void> &&) noexcept' inline
| |-ParmVarDecl 0x2c321c80 <col:57> col:57 'struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void> &&'
| `-CompoundStmt 0x2c322e70 <col:57>
|-CXXDestructorDecl 0x2c321dc0 <col:57> col:57 implicit ~iterator 'void (void)' inline noexcept-unevaluated 0x2c321dc0
`-CXXConstructorDecl 0x2c322de0 <col:57> col:57 implicit used constexpr iterator 'void (void) noexcept' inline
  `-CompoundStmt 0x2c338458 <col:57>

Layout: <CGRecordLayout
  LLVMType:%"struct.std::__1::iterator" = type { i8 }
  NonVirtualBaseLLVMType:%"struct.std::__1::iterator" = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | class std::__1::locale
   0 |   class std::__1::locale::__imp * __locale_
     | [sizeof=4, dsize=4, align=4
     |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
   0 | class std::__1::basic_streambuf<char>
   0 |   (basic_streambuf vtable pointer)
   4 |   class std::__1::locale __loc_
   4 |     class std::__1::locale::__imp * __locale_
     |   [sizeof=4, dsize=4, align=4
     |    nvsize=4, nvalign=4]
   8 |   char_type * __binp_
  12 |   char_type * __ninp_
  16 |   char_type * __einp_
  20 |   char_type * __bout_
  24 |   char_type * __nout_
  28 |   char_type * __eout_
     | [sizeof=32, dsize=32, align=4
     |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2c0037e0 prev 0x2c0032f0 </usr/include/c++/v1/__locale:59:1, line:117:1> line:59:56 referenced class locale definition
|-TypeVisibilityAttr 0x2c003830 <col:23, col:52> Default
|-CXXRecordDecl 0x2c0038b0 <col:1, col:56> col:56 implicit referenced class locale
|-AccessSpecDecl 0x2c003900 <line:61:1, col:7> col:1 public
|-CXXRecordDecl 0x2c003940 <line:63:5, col:60> col:60 referenced class facet
| `-TypeVisibilityAttr 0x2c0039a0 <col:27, col:56> Default
|-CXXRecordDecl 0x2c0039f0 <line:64:5, col:60> col:60 referenced class id
| `-TypeVisibilityAttr 0x2c003a50 <col:27, col:56> Default
|-TypedefDecl 0x2c003a90 <line:66:5, col:17> col:17 referenced category 'int'
|-VarDecl 0x2c003ae0 <line:67:5, line:68:16> col:9 none 'const category':'const int' static cinit
| `-IntegerLiteral 0x2c003b10 <col:16> 'int' 0
|-VarDecl 0x2c003b70 <line:67:5, line:69:24> col:9 referenced collate 'const category':'const int' static cinit
| `-ParenExpr 0x2c003be8 <col:19, col:24> 'int'
|   `-BinaryOperator 0x2c003bd0 <col:20, col:23> 'int' '<<'
|     |-IntegerLiteral 0x2c003ba0 <col:20> 'int' 1
|     `-IntegerLiteral 0x2c003bb8 <col:23> 'int' 0
|-VarDecl 0x2c003c40 <line:67:5, line:70:22> col:9 referenced ctype 'const category':'const int' static cinit
| `-ParenExpr 0x2c003cb8 <col:17, col:22> 'int'
|   `-BinaryOperator 0x2c003ca0 <col:18, col:21> 'int' '<<'
|     |-IntegerLiteral 0x2c003c70 <col:18> 'int' 1
|     `-IntegerLiteral 0x2c003c88 <col:21> 'int' 1
|-VarDecl 0x2c003d10 <line:67:5, line:71:25> col:9 referenced monetary 'const category':'const int' static cinit
| `-ParenExpr 0x2c003d88 <col:20, col:25> 'int'
|   `-BinaryOperator 0x2c003d70 <col:21, col:24> 'int' '<<'
|     |-IntegerLiteral 0x2c003d40 <col:21> 'int' 1
|     `-IntegerLiteral 0x2c003d58 <col:24> 'int' 3
|-VarDecl 0x2c003de0 <line:67:5, line:72:24> col:9 referenced numeric 'const category':'const int' static cinit
| `-ParenExpr 0x2c003e58 <col:19, col:24> 'int'
|   `-BinaryOperator 0x2c003e40 <col:20, col:23> 'int' '<<'
|     |-IntegerLiteral 0x2c003e10 <col:20> 'int' 1
|     `-IntegerLiteral 0x2c003e28 <col:23> 'int' 4
|-VarDecl 0x2c003eb0 <line:67:5, line:73:21> col:9 referenced time 'const category':'const int' static cinit
| `-ParenExpr 0x2c003f28 <col:16, col:21> 'int'
|   `-BinaryOperator 0x2c003f10 <col:17, col:20> 'int' '<<'
|     |-IntegerLiteral 0x2c003ee0 <col:17> 'int' 1
|     `-IntegerLiteral 0x2c003ef8 <col:20> 'int' 5
|-VarDecl 0x2c003f80 <line:67:5, line:74:25> col:9 referenced messages 'const category':'const int' static cinit
| `-ParenExpr 0x2c003ff8 <col:20, col:25> 'int'
|   `-BinaryOperator 0x2c003fe0 <col:21, col:24> 'int' '<<'
|     |-IntegerLiteral 0x2c003fb0 <col:21> 'int' 1
|     `-IntegerLiteral 0x2c003fc8 <col:24> 'int' 2
|-VarDecl 0x2c004050 <line:67:5, line:75:61> col:9 all 'const category':'const int' static cinit
| `-BinaryOperator 0x2c0041d0 <col:15, col:61> 'int' '|'
|   |-BinaryOperator 0x2c004190 <col:15, col:54> 'int' '|'
|   | |-BinaryOperator 0x2c004150 <col:15, col:44> 'int' '|'
|   | | |-BinaryOperator 0x2c004110 <col:15, col:33> 'int' '|'
|   | | | |-BinaryOperator 0x2c0040d0 <col:15, col:25> 'int' '|'
|   | | | | |-ImplicitCastExpr 0x2c0040b0 <col:15> 'category':'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2c004080 <col:15> 'const category':'const int' lvalue Var 0x2c003b70 'collate' 'const category':'const int'
|   | | | | `-ImplicitCastExpr 0x2c0040c0 <col:25> 'category':'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2c004098 <col:25> 'const category':'const int' lvalue Var 0x2c003c40 'ctype' 'const category':'const int'
|   | | | `-ImplicitCastExpr 0x2c004100 <col:33> 'category':'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2c0040e8 <col:33> 'const category':'const int' lvalue Var 0x2c003d10 'monetary' 'const category':'const int'
|   | | `-ImplicitCastExpr 0x2c004140 <col:44> 'category':'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c004128 <col:44> 'const category':'const int' lvalue Var 0x2c003de0 'numeric' 'const category':'const int'
|   | `-ImplicitCastExpr 0x2c004180 <col:54> 'category':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c004168 <col:54> 'const category':'const int' lvalue Var 0x2c003eb0 'time' 'const category':'const int'
|   `-ImplicitCastExpr 0x2c0041c0 <col:61> 'category':'int' <LValueToRValue>
|     `-DeclRefExpr 0x2c0041a8 <col:61> 'const category':'const int' lvalue Var 0x2c003f80 'messages' 'const category':'const int'
|-CXXConstructorDecl 0x2c004290 <line:78:5, col:14> col:5 locale 'void (void) noexcept'
|-CXXConstructorDecl 0x2c0043a0 <line:79:5, col:27> col:5 referenced locale 'void (const class std::__1::locale &) noexcept'
| `-ParmVarDecl 0x2c004310 <col:12, col:24> col:25 'const class std::__1::locale &'
|-CXXConstructorDecl 0x2c004480 <line:80:5, col:32> col:14 locale 'void (const char *)'
| `-ParmVarDecl 0x2c004430 <col:21, col:31> col:32 'const char *'
|-CXXConstructorDecl 0x2c004560 <line:81:5, col:34> col:14 locale 'void (const string &)'
| `-ParmVarDecl 0x2c004510 <col:21, col:33> col:34 'const string &'
|-CXXConstructorDecl 0x2c004720 <line:82:5, col:48> col:5 locale 'void (const class std::__1::locale &, const char *, category)'
| |-ParmVarDecl 0x2c0045f0 <col:12, col:24> col:25 'const class std::__1::locale &'
| |-ParmVarDecl 0x2c004630 <col:27, col:37> col:38 'const char *'
| `-ParmVarDecl 0x2c004670 <col:40> col:48 'category':'int'
|-CXXConstructorDecl 0x2c0048e0 <line:83:5, col:50> col:5 locale 'void (const class std::__1::locale &, const string &, category)'
| |-ParmVarDecl 0x2c0047b0 <col:12, col:24> col:25 'const class std::__1::locale &'
| |-ParmVarDecl 0x2c0047f0 <col:27, col:39> col:40 'const string &'
| `-ParmVarDecl 0x2c004830 <col:42> col:50 'category':'int'
|-FunctionTemplateDecl 0x2c004b50 <line:84:5, line:85:100> col:71 locale
| |-TemplateTypeParmDecl 0x2c004960 <line:84:15, col:21> col:21 referenced class _Facet
| `-CXXConstructorDecl 0x2c004ae0 <line:85:9, col:100> col:71 locale 'void (const class std::__1::locale &, _Facet *)'
|   |-ParmVarDecl 0x2c0049f0 <col:78, col:90> col:91 'const class std::__1::locale &'
|   |-ParmVarDecl 0x2c004a50 <col:93, col:99> col:100 '_Facet *'
|   |-AlwaysInlineAttr 0x2c004b80 <col:51> always_inline
|   `-VisibilityAttr 0x2c004bb0 <col:25, col:48> Hidden
|-CXXConstructorDecl 0x2c004d10 <line:86:5, col:50> col:5 locale 'void (const class std::__1::locale &, const class std::__1::locale &, category)'
| |-ParmVarDecl 0x2c004be0 <col:12, col:24> col:25 'const class std::__1::locale &'
| |-ParmVarDecl 0x2c004c20 <col:27, col:39> col:40 'const class std::__1::locale &'
| `-ParmVarDecl 0x2c004c60 <col:42> col:50 'category':'int'
|-CXXDestructorDecl 0x2c004dd0 <line:88:5, col:13> col:5 used ~locale 'void (void) noexcept'
|-CXXMethodDecl 0x2c004ee0 <line:90:5, col:44> col:19 operator= 'const class std::__1::locale &(const class std::__1::locale &) noexcept'
| `-ParmVarDecl 0x2c004e50 <col:29, col:41> col:42 'const class std::__1::locale &'
|-FunctionTemplateDecl 0x2c0050b0 <line:92:5, col:59> col:36 combine
| |-TemplateTypeParmDecl 0x2c004f50 <col:15, col:21> col:21 class _Facet
| `-CXXMethodDecl 0x2c005050 <col:29, col:59> col:36 combine 'class std::__1::locale (const class std::__1::locale &) const'
|   `-ParmVarDecl 0x2c004fc0 <col:44, col:56> col:57 'const class std::__1::locale &'
|-CXXMethodDecl 0x2c005100 <line:95:5, col:19> col:12 name 'string (void) const'
|-CXXMethodDecl 0x2c0051e0 <line:96:5, col:36> col:10 used operator== '_Bool (const class std::__1::locale &) const'
| `-ParmVarDecl 0x2c005170 <col:21, col:33> col:34 'const class std::__1::locale &'
|-CXXMethodDecl 0x2c0052b0 <line:97:5, col:70> col:10 operator!= '_Bool (const class std::__1::locale &) const'
| |-ParmVarDecl 0x2c005260 <col:21, col:35> col:35 used __y 'const class std::__1::locale &'
| `-CompoundStmt 0x2c007150 <col:46, col:70>
|   `-ReturnStmt 0x2c007140 <col:47, col:68>
|     `-UnaryOperator 0x2c007128 <col:54, col:68> '_Bool' prefix '!'
|       `-ParenExpr 0x2c007110 <col:55, col:68> '_Bool'
|         `-CXXOperatorCallExpr 0x2c0070d8 <col:56, col:65> '_Bool'
|           |-ImplicitCastExpr 0x2c0070c8 <col:62> '_Bool (*)(const class std::__1::locale &) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x2c007098 <col:62> '_Bool (const class std::__1::locale &) const' lvalue CXXMethod 0x2c0051e0 'operator==' '_Bool (const class std::__1::locale &) const'
|           |-UnaryOperator 0x2c0063b0 <col:56, col:57> 'const class std::__1::locale' lvalue prefix '*'
|           | `-CXXThisExpr 0x2c0063a0 <col:57> 'const class std::__1::locale *' this
|           `-DeclRefExpr 0x2c0063c4 <col:65> 'const class std::__1::locale' lvalue ParmVar 0x2c005260 '__y' 'const class std::__1::locale &'
|-FunctionTemplateDecl 0x2c005840 <line:98:5, line:100:73> line:99:12 operator()
| |-TemplateTypeParmDecl 0x2c005320 <line:98:15, col:21> col:21 referenced class _CharT
| |-TemplateTypeParmDecl 0x2c005370 <col:29, col:35> col:35 referenced class _Traits
| |-TemplateTypeParmDecl 0x2c0053c0 <col:44, col:50> col:50 referenced class _Allocator
| `-CXXMethodDecl 0x2c0057e0 <line:99:7, line:100:73> line:99:12 operator() '_Bool (const basic_string<_CharT, _Traits, _Allocator> &, const basic_string<_CharT, _Traits, _Allocator> &) const'
|   |-ParmVarDecl 0x2c0055a0 <col:23, col:70> col:71 'const basic_string<_CharT, _Traits, _Allocator> &'
|   `-ParmVarDecl 0x2c005750 <line:100:23, col:70> col:71 'const basic_string<_CharT, _Traits, _Allocator> &'
|-CXXMethodDecl 0x2c0058f0 <line:103:5, col:39> col:19 global 'class std::__1::locale (const class std::__1::locale &)' static
| `-ParmVarDecl 0x2c005880 <col:26, col:38> col:39 'const class std::__1::locale &'
|-CXXMethodDecl 0x2c0059a0 <line:104:5, col:34> col:26 classic 'const class std::__1::locale &(void)' static
|-AccessSpecDecl 0x2c005a00 <line:106:1, col:8> col:1 private
|-CXXRecordDecl 0x2c005a20 <line:107:5, col:11> col:11 referenced class __imp
|-FieldDecl 0x2c005ab0 <line:108:5, col:12> col:12 __locale_ 'class std::__1::locale::__imp *'
|-CXXMethodDecl 0x2c005c10 <line:110:5, col:52> col:10 referenced __install_ctor 'void (const class std::__1::locale &, class std::__1::locale::facet *, long)'
| |-ParmVarDecl 0x2c005af0 <col:25, col:37> col:38 'const class std::__1::locale &'
| |-ParmVarDecl 0x2c005b50 <col:40, col:45> col:46 'class std::__1::locale::facet *'
| `-ParmVarDecl 0x2c005b90 <col:48> col:52 'long'
|-CXXMethodDecl 0x2c005ce0 <line:111:5, col:29> col:20 __global 'class std::__1::locale &(void)' static
|-CXXMethodDecl 0x2c005de0 <line:112:5, col:25> col:10 referenced has_facet '_Bool (class std::__1::locale::id &) const'
| `-ParmVarDecl 0x2c005d70 <col:20, col:22> col:23 'class std::__1::locale::id &'
|-CXXMethodDecl 0x2c005ef0 <line:113:5, col:33> col:18 used use_facet 'const class std::__1::locale::facet *(class std::__1::locale::id &) const'
| `-ParmVarDecl 0x2c005e60 <col:28, col:30> col:31 'class std::__1::locale::id &'
|-FriendDecl 0x2c006120 <line:115:5, col:66> col:41
| `-FunctionTemplateDecl 0x2c006090 parent 0x2c003290 prev 0x2c003520 <col:5, col:66> col:41 has_facet
|   |-TemplateTypeParmDecl 0x2c005f60 <col:15, col:21> col:21 class _Facet
|   `-FunctionDecl 0x2c006020 parent 0x2c003290 prev 0x2c0034c0 <col:29, col:66> col:41 has_facet '_Bool (const class std::__1::locale &) noexcept'
|     |-ParmVarDecl 0x2c005fd0 <col:51, col:63> col:64 'const class std::__1::locale &'
|     |-AlwaysInlineAttr 0x2c0060f0 <line:50:43> Inherited always_inline
|     `-VisibilityAttr 0x2c006100 <col:17, col:40> Inherited Hidden
`-FriendDecl 0x2c006350 <line:116:5, col:73> col:50
  `-FunctionTemplateDecl 0x2c0062c0 parent 0x2c003290 prev 0x2c003740 <col:5, col:73> col:50 use_facet
    |-TemplateTypeParmDecl 0x2c006150 <col:15, col:21> col:21 referenced class _Facet
    |-FunctionDecl 0x2c006250 parent 0x2c003290 prev 0x2c0036e0 <col:29, col:73> col:50 use_facet 'const _Facet &(const class std::__1::locale &)'
    | |-ParmVarDecl 0x2c0061c0 <col:60, col:72> col:73 'const class std::__1::locale &'
    | |-AlwaysInlineAttr 0x2c006320 <line:55:43> Inherited always_inline
    | `-VisibilityAttr 0x2c006330 <col:17, col:40> Inherited Hidden
    `-Function 0x2c31fb70 'use_facet' 'const class std::__1::ctype<char> &(const class std::__1::locale &)'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
  NonVirtualBaseLLVMType:%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2b8e1060 parent 0x2b93ac40 </usr/include/c++/v1/streambuf:556:1, col:92> col:72 class basic_streambuf definition
|-TemplateArgument type 'char'
|-TemplateArgument type 'struct std::__1::char_traits<char>'
|-TypeVisibilityAttr 0x2c091920 <col:39, col:68> Default
|-CXXRecordDecl 0x2c0919b0 prev 0x2b8e1060 <line:122:1, col:56> col:56 implicit class basic_streambuf
|-AccessSpecDecl 0x2c091a00 <line:124:1, col:7> col:1 public
|-TypedefDecl 0x2c091a40 <line:126:5, col:20> col:20 char_type 'char':'char'
|-TypedefDecl 0x2c091a90 <line:127:5, col:21> col:21 traits_type 'struct std::__1::char_traits<char>':'struct std::__1::char_traits<char>'
|-TypedefDecl 0x2c091b20 <line:128:5, col:44> col:44 int_type 'typename traits_type::int_type':'int'
|-TypedefDecl 0x2c091ba0 <line:129:5, col:44> col:44 pos_type 'typename traits_type::pos_type':'class std::__1::fpos<__mbstate_t>'
|-TypedefDecl 0x2c091c20 <line:130:5, col:44> col:44 off_type 'typename traits_type::off_type':'long long'
|-CXXDestructorDecl 0x2c091c60 <line:132:5, col:14> col:13 ~basic_streambuf 'void (void) noexcept' virtual
|-CXXMethodDecl 0x2c091d10 <line:135:5, col:40> col:12 pubimbue 'class std::__1::locale (const class std::__1::locale &)'
| |-ParmVarDecl 0x2c091ce0 <col:21, col:35> col:35 __loc 'const class std::__1::locale &'
| `-AlwaysInlineAttr 0x2c091da0 <line:223:50> always_inline
|-CXXMethodDecl 0x2c091dd0 <line:136:5, col:21> col:12 getloc 'class std::__1::locale (void) const'
| `-AlwaysInlineAttr 0x2c091e40 <line:234:50> always_inline
|-CXXMethodDecl 0x2c091f80 <line:139:5, col:62> col:22 pubsetbuf 'class std::__1::basic_streambuf<char> *(char_type *, streamsize)'
| |-ParmVarDecl 0x2c091eb0 <col:32, col:43> col:43 __s 'char_type *'
| |-ParmVarDecl 0x2c091ee0 <col:48, col:59> col:59 __n 'streamsize':'int'
| `-AlwaysInlineAttr 0x2c091ff0 <line:242:50> always_inline
|-CXXMethodDecl 0x2c092160 <line:140:5, line:141:82> line:140:14 referenced pubseekoff 'pos_type (off_type, class ios_base::seekdir, class ios_base::openmode)'
| |-ParmVarDecl 0x2c092050 <col:25, col:34> col:34 __off 'off_type':'long long'
| |-ParmVarDecl 0x2c092080 <col:41, col:59> col:59 __way 'class ios_base::seekdir':'enum std::__1::ios_base::seekdir'
| |-ParmVarDecl 0x2c0920b0 <line:141:25, col:79> col:44 __which 'class ios_base::openmode':'unsigned int'
| `-AlwaysInlineAttr 0x2c0921e0 <line:250:50> always_inline
|-CXXMethodDecl 0x2c0922d0 <line:142:5, line:143:82> line:142:14 referenced pubseekpos 'pos_type (pos_type, class ios_base::openmode)'
| |-ParmVarDecl 0x2c092210 <col:25, col:34> col:34 __sp 'pos_type':'class std::__1::fpos<__mbstate_t>'
| |-ParmVarDecl 0x2c092240 <line:143:25, col:79> col:44 __which 'class ios_base::openmode':'unsigned int'
| `-AlwaysInlineAttr 0x2c092340 <line:260:50> always_inline
|-CXXMethodDecl 0x2c092370 <line:144:5, col:17> col:9 referenced pubsync 'int (void)'
| `-AlwaysInlineAttr 0x2c0923e0 <line:269:50> always_inline
|-CXXMethodDecl 0x2c092410 <line:148:5, col:25> col:16 in_avail 'streamsize (void)'
| `-AlwaysInlineAttr 0x2c092480 <line:277:50> always_inline
|-CXXMethodDecl 0x2c0924f0 <line:149:5, col:21> col:14 snextc 'int_type (void)'
| `-AlwaysInlineAttr 0x2c092560 <line:287:50> always_inline
|-CXXMethodDecl 0x2c0925a0 <line:150:5, col:21> col:14 sbumpc 'int_type (void)'
| `-AlwaysInlineAttr 0x2c092610 <line:297:50> always_inline
|-CXXMethodDecl 0x2c092650 <line:151:5, col:20> col:14 sgetc 'int_type (void)'
| `-AlwaysInlineAttr 0x2c0926c0 <line:307:50> always_inline
|-CXXMethodDecl 0x2c0927a0 <line:152:5, col:52> col:16 referenced sgetn 'streamsize (char_type *, streamsize)'
| |-ParmVarDecl 0x2c092700 <col:22, col:33> col:33 __s 'char_type *'
| |-ParmVarDecl 0x2c092730 <col:38, col:49> col:49 __n 'streamsize':'int'
| `-AlwaysInlineAttr 0x2c092810 <line:317:50> always_inline
|-CXXMethodDecl 0x2c0928b0 <line:155:5, col:37> col:14 sputbackc 'int_type (char_type)'
| |-ParmVarDecl 0x2c092840 <col:24, col:34> col:34 __c 'char_type':'char'
| `-AlwaysInlineAttr 0x2c092920 <line:325:50> always_inline
|-CXXMethodDecl 0x2c092960 <line:156:5, col:22> col:14 sungetc 'int_type (void)'
| `-AlwaysInlineAttr 0x2c0929d0 <line:335:50> always_inline
|-CXXMethodDecl 0x2c092a50 <line:159:5, col:33> col:14 sputc 'int_type (char_type)'
| |-ParmVarDecl 0x2c092a00 <col:20, col:30> col:30 __c 'char_type':'char'
| `-AlwaysInlineAttr 0x2c092ac0 <line:345:50> always_inline
|-CXXMethodDecl 0x2c092bc0 <line:356:1, line:361:1> line:160:16 used sputn 'streamsize (const char_type *, streamsize)'
| |-ParmVarDecl 0x2c092b20 <col:22, col:39> col:39 used __s 'const char_type *'
| |-ParmVarDecl 0x2c092b50 <col:44, col:55> col:55 used __n 'streamsize':'int'
| |-CompoundStmt 0x2c33a0c0 <line:359:1, line:361:1>
| | `-ReturnStmt 0x2c33a0b0 <line:360:5, col:27>
| |   `-CXXMemberCallExpr 0x2c33a068 <col:12, col:27> 'streamsize':'int'
| |     |-MemberExpr 0x2c33a018 <col:12> '<bound member function type>' ->xsputn 0x2c094270
| |     | `-CXXThisExpr 0x2c33a008 <col:12> 'class std::__1::basic_streambuf<char> *' this
| |     |-ImplicitCastExpr 0x2c33a090 <col:19> 'const char_type *' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c33a038 <col:19> 'const char_type *' lvalue ParmVar 0x2c092b20 '__s' 'const char_type *'
| |     `-ImplicitCastExpr 0x2c33a0a0 <col:24> 'streamsize':'int' <LValueToRValue>
| |       `-DeclRefExpr 0x2c33a050 <col:24> 'streamsize':'int' lvalue ParmVar 0x2c092b50 '__n' 'streamsize':'int'
| `-AlwaysInlineAttr 0x2c092c30 <line:356:50> always_inline
|-AccessSpecDecl 0x2c092c60 <line:162:1, col:10> col:1 protected
|-CXXConstructorDecl 0x2c092ca0 <line:163:5> col:5 basic_streambuf 'void (void)'
|-CXXConstructorDecl 0x2c092dd0 <line:164:5> col:5 basic_streambuf 'void (const class std::__1::basic_streambuf<char> &)'
| `-ParmVarDecl 0x2c092d50 <col:21, col:44> col:44 __rhs 'const class std::__1::basic_streambuf<char> &'
|-CXXMethodDecl 0x2c092ef0 <line:165:5, col:60> col:22 operator= 'class std::__1::basic_streambuf<char> &(const class std::__1::basic_streambuf<char> &)'
| `-ParmVarDecl 0x2c092e80 <col:32, col:55> col:55 __rhs 'const class std::__1::basic_streambuf<char> &'
|-CXXMethodDecl 0x2c092fe0 <line:166:5, col:37> col:10 swap 'void (class std::__1::basic_streambuf<char> &)'
| `-ParmVarDecl 0x2c092f70 <col:15, col:32> col:32 __rhs 'class std::__1::basic_streambuf<char> &'
|-CXXMethodDecl 0x2c0930b0 <line:169:5, col:108> col:78 eback 'char_type *(void) const'
| `-AlwaysInlineAttr 0x2c093120 <col:47> always_inline
|-CXXMethodDecl 0x2c093170 <line:170:5, col:107> col:78 gptr 'char_type *(void) const'
| `-AlwaysInlineAttr 0x2c0931e0 <col:47> always_inline
|-CXXMethodDecl 0x2c093230 <line:171:5, col:108> col:78 egptr 'char_type *(void) const'
| `-AlwaysInlineAttr 0x2c0932a0 <col:47> always_inline
|-CXXMethodDecl 0x2c093300 <line:172:5, col:23> col:10 gbump 'void (int)'
| |-ParmVarDecl 0x2c0932d0 <col:16, col:20> col:20 __n 'int'
| `-AlwaysInlineAttr 0x2c093370 <line:414:50> always_inline
|-CXXMethodDecl 0x2c0934e0 <line:173:5, col:71> col:10 setg 'void (char_type *, char_type *, char_type *)'
| |-ParmVarDecl 0x2c0933b0 <col:15, col:26> col:26 __gbeg 'char_type *'
| |-ParmVarDecl 0x2c0933f0 <col:34, col:45> col:45 __gnext 'char_type *'
| |-ParmVarDecl 0x2c093430 <col:54, col:65> col:65 __gend 'char_type *'
| `-AlwaysInlineAttr 0x2c093560 <line:422:50> always_inline
|-CXXMethodDecl 0x2c0935b0 <line:176:5, col:108> col:78 pbase 'char_type *(void) const'
| `-AlwaysInlineAttr 0x2c093620 <col:47> always_inline
|-CXXMethodDecl 0x2c093670 <line:177:5, col:107> col:78 pptr 'char_type *(void) const'
| `-AlwaysInlineAttr 0x2c0936e0 <col:47> always_inline
|-CXXMethodDecl 0x2c093730 <line:178:5, col:108> col:78 epptr 'char_type *(void) const'
| `-AlwaysInlineAttr 0x2c0937a0 <col:47> always_inline
|-CXXMethodDecl 0x2c093800 <line:179:5, col:23> col:10 pbump 'void (int)'
| |-ParmVarDecl 0x2c0937d0 <col:16, col:20> col:20 __n 'int'
| `-AlwaysInlineAttr 0x2c093870 <line:433:50> always_inline
|-CXXMethodDecl 0x2c093980 <line:180:5, col:51> col:10 setp 'void (char_type *, char_type *)'
| |-ParmVarDecl 0x2c0938b0 <col:15, col:26> col:26 __pbeg 'char_type *'
| |-ParmVarDecl 0x2c0938f0 <col:34, col:45> col:45 __pend 'char_type *'
| `-AlwaysInlineAttr 0x2c0939f0 <line:441:50> always_inline
|-CXXMethodDecl 0x2c093a50 <line:184:5, col:43> col:18 imbue 'void (const class std::__1::locale &)' virtual
| `-ParmVarDecl 0x2c093a20 <col:24, col:38> col:38 __loc 'const class std::__1::locale &'
|-CXXMethodDecl 0x2c093b60 <line:187:5, col:67> col:30 setbuf 'class std::__1::basic_streambuf<char> *(char_type *, streamsize)' virtual
| |-ParmVarDecl 0x2c093ad0 <col:37, col:48> col:48 __s 'char_type *'
| `-ParmVarDecl 0x2c093b00 <col:53, col:64> col:64 __n 'streamsize':'int'
|-CXXMethodDecl 0x2c093ca0 <line:188:5, line:189:87> line:188:22 seekoff 'pos_type (off_type, class ios_base::seekdir, class ios_base::openmode)' virtual
| |-ParmVarDecl 0x2c093be0 <col:30, col:39> col:39 __off 'off_type':'long long'
| |-ParmVarDecl 0x2c093c10 <col:46, col:64> col:64 __way 'class ios_base::seekdir':'enum std::__1::ios_base::seekdir'
| `-ParmVarDecl 0x2c093c40 <line:189:30, col:84> col:49 __which 'class ios_base::openmode':'unsigned int'
|-CXXMethodDecl 0x2c093da0 <line:190:5, line:191:87> line:190:22 seekpos 'pos_type (pos_type, class ios_base::openmode)' virtual
| |-ParmVarDecl 0x2c093d20 <col:30, col:39> col:39 __sp 'pos_type':'class std::__1::fpos<__mbstate_t>'
| `-ParmVarDecl 0x2c093d50 <line:191:30, col:84> col:49 __which 'class ios_base::openmode':'unsigned int'
|-CXXMethodDecl 0x2c093e10 <line:192:5, col:22> col:17 sync 'int (void)' virtual
|-CXXMethodDecl 0x2c093e80 <line:195:5, col:34> col:24 showmanyc 'streamsize (void)' virtual
|-CXXMethodDecl 0x2c093f80 <line:196:5, col:61> col:24 xsgetn 'streamsize (char_type *, streamsize)' virtual
| |-ParmVarDecl 0x2c093f00 <col:31, col:42> col:42 __s 'char_type *'
| `-ParmVarDecl 0x2c093f30 <col:47, col:58> col:58 __n 'streamsize':'int'
|-CXXMethodDecl 0x2c094010 <line:197:5, col:32> col:22 underflow 'int_type (void)' virtual
|-CXXMethodDecl 0x2c094090 <line:198:5, col:28> col:22 uflow 'int_type (void)' virtual
|-CXXMethodDecl 0x2c094170 <line:201:5, col:65> col:22 pbackfail 'int_type (int_type)' virtual
| `-ParmVarDecl 0x2c094100 <col:32, col:64> col:41 __c 'int_type':'int'
|-CXXMethodDecl 0x2c094270 <line:204:5, col:67> col:24 used xsputn 'streamsize (const char_type *, streamsize)' virtual
| |-ParmVarDecl 0x2c0941f0 <col:31, col:48> col:48 __s 'const char_type *'
| `-ParmVarDecl 0x2c094220 <col:53, col:64> col:64 __n 'streamsize':'int'
|-CXXMethodDecl 0x2c094340 <line:205:5, col:64> col:22 overflow 'int_type (int_type)' virtual
| `-ParmVarDecl 0x2c0942f0 <col:31, col:63> col:40 __c 'int_type':'int'
|-AccessSpecDecl 0x2c0943b0 <line:207:1, col:8> col:1 private
|-FieldDecl 0x2c0943d0 <line:208:5, col:12> col:12 __loc_ 'class std::__1::locale'
|-FieldDecl 0x2c094410 <line:209:5, col:16> col:16 __binp_ 'char_type *'
|-FieldDecl 0x2c094450 <line:210:5, col:16> col:16 __ninp_ 'char_type *'
|-FieldDecl 0x2c094490 <line:211:5, col:16> col:16 __einp_ 'char_type *'
|-FieldDecl 0x2c0944d0 <line:212:5, col:16> col:16 __bout_ 'char_type *'
|-FieldDecl 0x2c094510 <line:213:5, col:16> col:16 __nout_ 'char_type *'
`-FieldDecl 0x2c094550 <line:214:5, col:16> col:16 __eout_ 'char_type *'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
  NonVirtualBaseLLVMType:%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2c143690 </usr/include/c++/v1/iterator:895:1, line:934:1> line:896:56 class ostreambuf_iterator definition
|-public 'iterator<struct std::__1::output_iterator_tag, void, void, void, void>':'struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void>'
|-TemplateArgument type 'char'
|-TemplateArgument type 'struct std::__1::char_traits<char>'
|-CXXRecordDecl 0x2c320a20 prev 0x2c143690 <col:1, col:56> col:56 implicit class ostreambuf_iterator
|-AccessSpecDecl 0x2c320a70 <line:899:1, col:7> col:1 public
|-TypedefDecl 0x2c320ab0 <line:900:5, col:20> col:20 char_type 'char':'char'
|-TypedefDecl 0x2c320b00 <line:901:5, col:21> col:21 traits_type 'struct std::__1::char_traits<char>':'struct std::__1::char_traits<char>'
|-TypedefDecl 0x2c320bc0 <line:902:5, col:45> col:45 streambuf_type 'basic_streambuf<char, struct std::__1::char_traits<char> >':'class std::__1::basic_streambuf<char>'
|-TypedefDecl 0x2c320c80 <line:903:5, col:43> col:43 ostream_type 'basic_ostream<char, struct std::__1::char_traits<char> >':'class std::__1::basic_ostream<char>'
|-AccessSpecDecl 0x2c320cb0 <line:904:1, col:8> col:1 private
|-FieldDecl 0x2c320d10 <line:905:5, col:21> col:21 referenced __sbuf_ 'streambuf_type *'
|-AccessSpecDecl 0x2c320d40 <line:906:1, col:7> col:1 public
|-CXXConstructorDecl 0x2c320e30 <line:907:5, line:908:33> line:907:67 used ostreambuf_iterator 'void (ostream_type &) noexcept'
| |-ParmVarDecl 0x2c320da0 <col:87, col:101> col:101 used __s 'ostream_type &'
| |-CXXCtorInitializer 'iterator<struct std::__1::output_iterator_tag, void, void, void, void>':'struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void>'
| | `-CXXConstructExpr 0x2c338468 <col:67> 'iterator<struct std::__1::output_iterator_tag, void, void, void, void>':'struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void>' 'void (void) noexcept'
| |-CXXCtorInitializer Field 0x2c320d10 '__sbuf_' 'streambuf_type *'
| | `-CXXMemberCallExpr 0x2c3383e8 <line:908:19, col:29> 'basic_streambuf<char_type, traits_type> *'
| |   `-MemberExpr 0x2c3383c4 <col:19, col:23> '<bound member function type>' .rdbuf 0x2c0986c0
| |     `-ImplicitCastExpr 0x2c338408 <col:19> 'const class std::__1::basic_ios<char>' lvalue <UncheckedDerivedToBase (virtual basic_ios)>
| |       `-DeclRefExpr 0x2c33836c <col:19> 'ostream_type':'class std::__1::basic_ostream<char>' lvalue ParmVar 0x2c320da0 '__s' 'ostream_type &'
| |-CompoundStmt 0x2bb22740 <col:32, col:33>
| `-AlwaysInlineAttr 0x2c320ed0 <line:907:47> always_inline
|-CXXConstructorDecl 0x2c320f90 <line:909:5, col:67> col:67 ostreambuf_iterator 'void (streambuf_type *) noexcept'
| |-ParmVarDecl 0x2c320f10 <col:87, col:103> col:103 __s 'streambuf_type *'
| `-AlwaysInlineAttr 0x2c321010 <col:47> always_inline
|-CXXMethodDecl 0x2c3210f0 <line:911:5, line:916:9> line:911:88 operator= 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &(char)'
| |-ParmVarDecl 0x2c321060 <col:98, col:105> col:105 __c 'char':'char'
| `-AlwaysInlineAttr 0x2c321160 <col:47> always_inline
|-CXXMethodDecl 0x2c3211d0 <line:917:5, col:114> col:88 operator* 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &(void)'
| `-AlwaysInlineAttr 0x2c321240 <col:47> always_inline
|-CXXMethodDecl 0x2c321290 <line:918:5, col:115> col:88 operator++ 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &(void)'
| `-AlwaysInlineAttr 0x2c321300 <col:47> always_inline
|-CXXMethodDecl 0x2c3213a0 <line:919:5, col:118> col:88 operator++ 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &(int)'
| |-ParmVarDecl 0x2c321330 <col:99> col:102 'int'
| `-AlwaysInlineAttr 0x2c321410 <col:47> always_inline
|-CXXMethodDecl 0x2c321440 <line:920:5, col:117> col:72 used failed '_Bool (void) const noexcept'
| |-CompoundStmt 0x2c33cc28 <col:96, col:117>
| | `-ReturnStmt 0x2c33cc18 <col:97, col:115>
| |   `-BinaryOperator 0x2c33cc00 <col:104, col:115> '_Bool' '=='
| |     |-ImplicitCastExpr 0x2c33cbe0 <col:104> 'streambuf_type *' <LValueToRValue>
| |     | `-MemberExpr 0x2c33cbc0 <col:104> 'streambuf_type *const' lvalue ->__sbuf_ 0x2c320d10
| |     |   `-CXXThisExpr 0x2c33cbb0 <col:104> 'const class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > *' this
| |     `-ImplicitCastExpr 0x2c33cbf0 <col:115> 'streambuf_type *' <NullToPointer>
| |       `-IntegerLiteral 0x2bb22ba8 <col:115> 'int' 0
| `-AlwaysInlineAttr 0x2c3214b0 <col:47> always_inline
|-FriendDecl 0x2c321a40 <line:926:5, line:932:47> line:930:5
| `-FunctionTemplateDecl 0x2c321980 parent 0x2bafd040 prev 0x2bcda560 <line:926:5, line:932:47> line:930:5 __pad_and_output
|   |-TemplateTypeParmDecl 0x2c3214e0 <line:926:15, col:21> col:21 class _Ch
|   |-TemplateTypeParmDecl 0x2c321530 <col:26, col:32> col:32 class _Tr
|   |-FunctionDecl 0x2c321900 parent 0x2bafd040 prev 0x2bcda500 <line:927:5, line:932:47> line:930:5 __pad_and_output 'ostreambuf_iterator<_Ch, _Tr> (ostreambuf_iterator<_Ch, _Tr>, const _Ch *, const _Ch *, const _Ch *, class std::__1::ios_base &, _Ch)'
|   | |-ParmVarDecl 0x2c3216f0 <col:22, col:52> col:52 __s 'ostreambuf_iterator<_Ch, _Tr>'
|   | |-ParmVarDecl 0x2c321750 <line:931:22, col:33> col:33 __ob 'const _Ch *'
|   | |-ParmVarDecl 0x2c321790 <col:39, col:50> col:50 __op 'const _Ch *'
|   | |-ParmVarDecl 0x2c3217d0 <col:56, col:67> col:67 __oe 'const _Ch *'
|   | |-ParmVarDecl 0x2c321800 <line:932:22, col:32> col:32 __iob 'class std::__1::ios_base &'
|   | |-ParmVarDecl 0x2c321840 <col:39, col:43> col:43 __fl '_Ch'
|   | `-VisibilityAttr 0x2c3219d0 </usr/include/c++/v1/locale:1480:17, col:40> Inherited Hidden
|   `-Function 0x2c322c00 '__pad_and_output' 'ostreambuf_iterator<char, struct std::__1::char_traits<char> > (ostreambuf_iterator<char, struct std::__1::char_traits<char> >, const char *, const char *, const char *, class std::__1::ios_base &, char)'
|-CXXConstructorDecl 0x2c321cc0 </usr/include/c++/v1/iterator:896:56> col:56 implicit constexpr ostreambuf_iterator 'void (const class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &)' inline noexcept-unevaluated 0x2c321cc0
| `-ParmVarDecl 0x2c321d70 <col:56> col:56 'const class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &'
|-CXXConstructorDecl 0x2c321e70 <col:56> col:56 implicit used constexpr ostreambuf_iterator 'void (class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &&) noexcept' inline
| |-ParmVarDecl 0x2c321f20 <col:56> col:56 used 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &&'
| |-CXXCtorInitializer 'iterator<struct std::__1::output_iterator_tag, void, void, void, void>':'struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void>'
| | `-CXXConstructExpr 0x2c322ea0 <col:56> 'iterator<struct std::__1::output_iterator_tag, void, void, void, void>':'struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void>' 'void (struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void> &&) noexcept'
| |   `-ImplicitCastExpr 0x2c322dc8 <col:56> 'iterator<struct std::__1::output_iterator_tag, void, void, void, void>':'struct std::__1::iterator<struct std::__1::output_iterator_tag, void, void, void, void>' xvalue <UncheckedDerivedToBase (iterator)>
| |     `-CXXStaticCastExpr 0x2c322da8 <col:56> 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> >' xvalue static_cast<class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &&> <NoOp>
| |       `-DeclRefExpr 0x2c322d7c <col:56> 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> >' lvalue ParmVar 0x2c321f20 '' 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &&'
| |-CXXCtorInitializer Field 0x2c320d10 '__sbuf_' 'streambuf_type *'
| | `-ImplicitCastExpr 0x2c322ff0 <col:56> 'streambuf_type *' <LValueToRValue>
| |   `-MemberExpr 0x2c322fc0 <col:56> 'streambuf_type *' xvalue .__sbuf_ 0x2c320d10
| |     `-CXXStaticCastExpr 0x2c322fa0 <col:56> 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> >' xvalue static_cast<class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &&> <NoOp>
| |       `-DeclRefExpr 0x2c322f78 <col:56> 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> >' lvalue ParmVar 0x2c321f20 '' 'class std::__1::ostreambuf_iterator<char, struct std::__1::char_traits<char> > &&'
| `-CompoundStmt 0x2c338020 <col:56>
`-CXXDestructorDecl 0x2c321f90 <col:56> col:56 implicit referenced ~ostreambuf_iterator 'void (void)' inline noexcept-unevaluated 0x2c321f90

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::ostreambuf_iterator" = type { %"class.std::__1::basic_streambuf"* }
  NonVirtualBaseLLVMType:%"class.std::__1::ostreambuf_iterator" = type { %"class.std::__1::basic_streambuf"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | class std::__1::__shared_count
   0 |   (__shared_count vtable pointer)
   4 |   long __shared_owners_
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2bc62480 </usr/include/c++/v1/memory:3583:1, line:3603:1> line:3583:56 referenced class __shared_count definition
|-TypeVisibilityAttr 0x2bc624e0 <col:23, col:52> Default
|-CXXRecordDecl 0x2bc62560 <col:1, col:56> col:56 implicit referenced class __shared_count
|-CXXConstructorDecl 0x2bc62680 <line:3585:5, col:41> col:5 __shared_count 'void (const class std::__1::__shared_count &)'
| `-ParmVarDecl 0x2bc625e0 <col:20, col:40> col:41 'const class std::__1::__shared_count &'
|-CXXMethodDecl 0x2bc627a0 <line:3586:5, col:52> col:21 operator= 'class std::__1::__shared_count &(const class std::__1::__shared_count &)'
| `-ParmVarDecl 0x2bc62710 <col:31, col:51> col:52 'const class std::__1::__shared_count &'
|-AccessSpecDecl 0x2bc62810 <line:3588:1, col:10> col:1 protected
|-FieldDecl 0x2bc62840 <line:3589:5, col:10> col:10 referenced __shared_owners_ 'long'
|-CXXDestructorDecl 0x2bc628b0 <line:3590:5, col:29> col:13 used ~__shared_count 'void (void) noexcept' virtual
|-AccessSpecDecl 0x2bc62920 <line:3591:1, col:8> col:1 private
|-CXXMethodDecl 0x2bc62950 <line:3592:5, col:48> col:18 __on_zero_shared 'void (void) noexcept' virtual pure
|-AccessSpecDecl 0x2bc629d0 <line:3594:1, col:7> col:1 public
|-CXXConstructorDecl 0x2bc62a90 <line:3595:5, line:3597:37> line:3596:14 used __shared_count 'void (long) noexcept'
| |-ParmVarDecl 0x2bc62a20 <col:29, col:43> col:34 used __refs 'long' cinit
| | `-ImplicitCastExpr 0x2bc62de8 <col:43> 'long' <IntegralCast>
| |   `-IntegerLiteral 0x2bc62dd0 <col:43> 'int' 0
| |-CXXCtorInitializer Field 0x2bc62840 '__shared_owners_' 'long'
| | `-ImplicitCastExpr 0x2bc62e30 <line:3597:28> 'long' <LValueToRValue>
| |   `-DeclRefExpr 0x2bc62df4 <col:28> 'long' lvalue ParmVar 0x2bc62a20 '__refs' 'long'
| |-CompoundStmt 0x2bc62e60 <col:36, col:37>
| |-AlwaysInlineAttr 0x2bc62b10 <line:3595:47> always_inline
| `-VisibilityAttr 0x2bc62b40 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2bc62b70 <line:3599:5, col:25> col:10 __add_shared 'void (void) noexcept'
|-CXXMethodDecl 0x2bc62bf0 <line:3600:5, col:29> col:10 __release_shared '_Bool (void) noexcept'
`-CXXMethodDecl 0x2bc62d00 <line:3601:5, line:3602:66> col:10 used use_count 'long (void) const noexcept'
  |-CompoundStmt 0x2bc62f00 <col:37, col:66>
  | `-ReturnStmt 0x2bc62ef0 <col:38, col:64>
  |   `-BinaryOperator 0x2bc62ed8 <col:45, col:64> 'long' '+'
  |     |-ImplicitCastExpr 0x2bc62eb8 <col:45> 'long' <LValueToRValue>
  |     | `-MemberExpr 0x2bc62e80 <col:45> 'const long' lvalue ->__shared_owners_ 0x2bc62840
  |     |   `-CXXThisExpr 0x2bc62e70 <col:45> 'const class std::__1::__shared_count *' this
  |     `-ImplicitCastExpr 0x2bc62ec8 <col:64> 'long' <IntegralCast>
  |       `-IntegerLiteral 0x2bc62ea0 <col:64> 'int' 1
  |-AlwaysInlineAttr 0x2bc62d60 <line:3601:47> always_inline
  `-VisibilityAttr 0x2bc62d90 <col:21, col:44> Hidden

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::__shared_count" = type { i32 (...)**, i32 }
  NonVirtualBaseLLVMType:%"class.std::__1::__shared_count" = type { i32 (...)**, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | class std::__1::locale::facet
   0 |   class std::__1::__shared_count (primary base)
   0 |     (__shared_count vtable pointer)
   4 |     long __shared_owners_
     | [sizeof=8, dsize=8, align=4
     |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2c0071a0 parent 0x2c0037e0 prev 0x2c003940 </usr/include/c++/v1/__locale:119:1, line:133:1> line:119:64 referenced class facet definition
|-public 'class std::__1::__shared_count'
|-TypeVisibilityAttr 0x2c007210 <col:23, col:52> Default
|-CXXRecordDecl 0x2c0072d0 <col:1, col:64> col:64 implicit referenced class facet
|-AccessSpecDecl 0x2c007320 <line:122:1, col:10> col:1 protected
|-CXXConstructorDecl 0x2c0073f0 <line:123:5, line:125:56> line:124:14 used facet 'void (size_t)'
| |-ParmVarDecl 0x2c007370 <col:20, col:36> col:27 used __refs 'size_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x2c007740 <col:36> 'size_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x2c007728 <col:36> 'int' 0
| |-CXXCtorInitializer 'class std::__1::__shared_count'
| | `-CXXConstructExpr 0x2c007820 <line:125:11, col:53> 'class std::__1::__shared_count' 'void (long) noexcept'
| |   `-BinaryOperator 0x2c0077e0 <col:26, col:52> 'long' '-'
| |     |-CXXStaticCastExpr 0x2c007798 <col:26, col:50> 'long' static_cast<long> <NoOp>
| |     | `-ImplicitCastExpr 0x2c007788 <col:44> 'long' <IntegralCast>
| |     |   `-ImplicitCastExpr 0x2c007778 <col:44> 'size_t':'unsigned int' <LValueToRValue>
| |     |     `-DeclRefExpr 0x2c00774c <col:44> 'size_t':'unsigned int' lvalue ParmVar 0x2c007370 '__refs' 'size_t':'unsigned int'
| |     `-ImplicitCastExpr 0x2c0077d0 <col:52> 'long' <IntegralCast>
| |       `-IntegerLiteral 0x2c0077b8 <col:52> 'int' 1
| |-CompoundStmt 0x2c007870 <col:55, col:56>
| |-AlwaysInlineAttr 0x2c007470 <line:123:47> always_inline
| `-VisibilityAttr 0x2c0074a0 <col:21, col:44> Hidden
|-CXXDestructorDecl 0x2c0074f0 <line:127:5, col:20> col:13 used ~facet 'void (void) noexcept' virtual
|-AccessSpecDecl 0x2c007560 <line:131:1, col:8> col:1 private
|-CXXMethodDecl 0x2c007590 <line:132:5, col:37> col:18 __on_zero_shared 'void (void) noexcept' virtual
|-CXXMethodDecl 0x2c007650 <line:119:64, <invalid sloc>> col:64 implicit operator= 'class std::__1::locale::facet &(const class std::__1::locale::facet &)' inline noexcept-unevaluated 0x2c007650
| `-ParmVarDecl 0x2c0076f0 <col:64> col:64 'const class std::__1::locale::facet &'
`-CXXConstructorDecl 0x2c00a4d0 <col:64> col:64 implicit facet 'void (const class std::__1::locale::facet &)' inline noexcept-unevaluated 0x2c00a4d0
  `-ParmVarDecl 0x2c00a580 <col:64> col:64 'const class std::__1::locale::facet &'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
  NonVirtualBaseLLVMType:%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | class std::__1::ctype_base (empty)
     | [sizeof=1, dsize=0, align=1
     |  nvsize=0, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2c013e10 </usr/include/c++/v1/__locale:328:1, line:413:1> line:328:56 referenced class ctype_base definition
|-TypeVisibilityAttr 0x2c013e70 <col:23, col:52> Default
|-CXXRecordDecl 0x2c013ef0 <col:1, col:56> col:56 implicit referenced class ctype_base
|-AccessSpecDecl 0x2c013f40 <line:330:1, col:7> col:1 public
|-TypedefDecl 0x2c013f70 <line:359:5, col:27> col:27 referenced mask 'unsigned long'
|-VarDecl 0x2c013fc0 <line:365:5, col:31> col:23 referenced space 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c014008 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c013ff0 <col:31> 'long' 16384
|-VarDecl 0x2c014060 <line:366:5, col:31> col:23 referenced print 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c0140a8 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c014090 <col:31> 'long' 262144
|-VarDecl 0x2c014100 <line:367:5, col:31> col:23 referenced cntrl 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c014148 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c014130 <col:31> 'long' 512
|-VarDecl 0x2c0141a0 <line:368:5, col:31> col:23 referenced upper 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c0141e8 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c0141d0 <col:31> 'long' 32768
|-VarDecl 0x2c014240 <line:369:5, col:31> col:23 referenced lower 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c014288 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c014270 <col:31> 'long' 4096
|-VarDecl 0x2c0142e0 <line:370:5, col:31> col:23 referenced alpha 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c014328 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c014310 <col:31> 'long' 256
|-VarDecl 0x2c014380 <line:371:5, col:31> col:23 referenced digit 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c0143c8 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c0143b0 <col:31> 'long' 1024
|-VarDecl 0x2c014420 <line:372:5, col:31> col:23 referenced punct 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c014468 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c014450 <col:31> 'long' 8192
|-VarDecl 0x2c0144c0 <line:376:5, col:32> col:23 referenced xdigit 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c014508 <col:32> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c0144f0 <col:32> 'long' 65536
|-VarDecl 0x2c014560 <line:382:5, col:31> col:23 blank 'const mask':'const unsigned long' static cinit
| `-ImplicitCastExpr 0x2c0145a8 <col:31> 'const mask':'const unsigned long' <IntegralCast>
|   `-IntegerLiteral 0x2c014590 <col:31> 'long' 131072
|-VarDecl 0x2c014600 <line:409:5, col:39> col:23 referenced alnum 'const mask':'const unsigned long' static cinit
| `-BinaryOperator 0x2c014680 <col:31, col:39> 'unsigned long' '|'
|   |-ImplicitCastExpr 0x2c014660 <col:31> 'mask':'unsigned long' <LValueToRValue>
|   | `-DeclRefExpr 0x2c014630 <col:31> 'const mask':'const unsigned long' lvalue Var 0x2c0142e0 'alpha' 'const mask':'const unsigned long'
|   `-ImplicitCastExpr 0x2c014670 <col:39> 'mask':'unsigned long' <LValueToRValue>
|     `-DeclRefExpr 0x2c014648 <col:39> 'const mask':'const unsigned long' lvalue Var 0x2c014380 'digit' 'const mask':'const unsigned long'
|-VarDecl 0x2c0146e0 <line:410:5, col:39> col:23 referenced graph 'const mask':'const unsigned long' static cinit
| `-BinaryOperator 0x2c014760 <col:31, col:39> 'unsigned long' '|'
|   |-ImplicitCastExpr 0x2c014740 <col:31> 'mask':'unsigned long' <LValueToRValue>
|   | `-DeclRefExpr 0x2c014710 <col:31> 'const mask':'const unsigned long' lvalue Var 0x2c014600 'alnum' 'const mask':'const unsigned long'
|   `-ImplicitCastExpr 0x2c014750 <col:39> 'mask':'unsigned long' <LValueToRValue>
|     `-DeclRefExpr 0x2c014728 <col:39> 'const mask':'const unsigned long' lvalue Var 0x2c014420 'punct' 'const mask':'const unsigned long'
|-CXXConstructorDecl 0x2c014820 <line:412:5, col:81> col:67 used ctype_base 'void (void)'
| |-CompoundStmt 0x2c0148d8 <col:80, col:81>
| |-AlwaysInlineAttr 0x2c014890 <col:47> always_inline
| `-VisibilityAttr 0x2c0148c0 <col:21, col:44> Hidden
|-CXXDestructorDecl 0x2c028630 <line:328:56> col:56 implicit ~ctype_base 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c0287a0 <col:56> col:56 implicit constexpr ctype_base 'void (const class std::__1::ctype_base &)' inline noexcept-unevaluated 0x2c0287a0
| `-ParmVarDecl 0x2c028850 <col:56> col:56 'const class std::__1::ctype_base &'
`-CXXConstructorDecl 0x2c0288b0 <col:56> col:56 implicit constexpr ctype_base 'void (class std::__1::ctype_base &&)' inline noexcept-unevaluated 0x2c0288b0
  `-ParmVarDecl 0x2c028960 <col:56> col:56 'class std::__1::ctype_base &&'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::ctype_base" = type { i8 }
  NonVirtualBaseLLVMType:%"class.std::__1::ctype_base.base" = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
   0 | class std::__1::ctype<char>
   0 |   class std::__1::locale::facet (primary base)
   0 |     class std::__1::__shared_count (primary base)
   0 |       (__shared_count vtable pointer)
   4 |       long __shared_owners_
   0 |   class std::__1::ctype_base (base) (empty)
   8 |   const mask * __tab_
  12 |   _Bool __del_
     | [sizeof=16, dsize=13, align=4
     |  nvsize=13, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2c029780 </usr/include/c++/v1/__locale:519:1, line:638:1> line:520:56 class ctype definition
|-public 'class locale::facet':'class std::__1::locale::facet'
|-public 'class std::__1::ctype_base'
|-TemplateArgument type 'char'
|-TypeVisibilityAttr 0x2c029840 <col:23, col:52> Default
|-CXXRecordDecl 0x2c0299c0 <col:1, col:56> col:56 implicit referenced class ctype
|-FieldDecl 0x2c029a40 <line:523:5, col:17> col:17 referenced __tab_ 'const mask *'
|-FieldDecl 0x2c029a80 <line:524:5, col:10> col:10 __del_ '_Bool'
|-AccessSpecDecl 0x2c029ab0 <line:525:1, col:7> col:1 public
|-TypedefDecl 0x2c029ad0 <line:526:5, col:18> col:18 referenced char_type 'char'
|-CXXConstructorDecl 0x2c029c70 <line:528:5, col:80> col:14 ctype 'void (const mask *, _Bool, size_t)'
| |-ParmVarDecl 0x2c029b10 <col:20, col:40> col:32 __tab 'const mask *' cinit
| | `-ImplicitCastExpr 0x2c02c070 <col:40> 'const mask *' <NullToPointer>
| |   `-IntegerLiteral 0x2c02c058 <col:40> 'int' 0
| |-ParmVarDecl 0x2c029b50 <col:43, col:56> col:48 __del '_Bool' cinit
| | `-CXXBoolLiteralExpr 0x2c02c080 <col:56> '_Bool' false
| `-ParmVarDecl 0x2c029b90 <col:63, col:79> col:70 __refs 'size_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x2c02c0a8 <col:79> 'size_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x2c02c090 <col:79> 'int' 0
|-CXXMethodDecl 0x2c029e20 <line:530:5, line:534:5> line:531:10 is '_Bool (mask, char_type) const'
| |-ParmVarDecl 0x2c029d20 <col:13, col:18> col:18 used __m 'mask':'unsigned long'
| |-ParmVarDecl 0x2c029d70 <col:23, col:33> col:33 used __c 'char_type':'char'
| |-CompoundStmt 0x2c02c358 <line:532:5, line:534:5>
| | `-ReturnStmt 0x2c02c348 <line:533:9, col:85>
| |   `-ConditionalOperator 0x2c02c328 <col:16, col:85> '_Bool'
| |     |-ParenExpr 0x2c02c198 <col:16, col:37> '_Bool'
| |     | `-BinaryOperator 0x2c02c180 <col:17, col:36> '_Bool' '=='
| |     |   |-ParenExpr 0x2c02c150 <col:17, col:31> 'int'
| |     |   | `-BinaryOperator 0x2c02c138 <col:18, col:27> 'int' '&'
| |     |   |   |-ImplicitCastExpr 0x2c02c128 <col:18, col:22> 'int' <IntegralCast>
| |     |   |   | `-ImplicitCastExpr 0x2c02c118 <col:18, col:22> 'char_type':'char' <LValueToRValue>
| |     |   |   |   `-ParenExpr 0x2c02c0d0 <col:18, col:22> 'char_type':'char' lvalue
| |     |   |   |     `-DeclRefExpr 0x2c02c0b4 <col:19> 'char_type':'char' lvalue ParmVar 0x2c029d70 '__c' 'char_type':'char'
| |     |   |   `-UnaryOperator 0x2c02c100 <col:26, col:27> 'int' prefix '~'
| |     |   |     `-IntegerLiteral 0x2c02c0e8 <col:27> 'int' 127
| |     |   `-IntegerLiteral 0x2c02c168 <col:36> 'int' 0
| |     |-BinaryOperator 0x2c02c300 <col:41, col:81> '_Bool' '!='
| |     | |-ParenExpr 0x2c02c2c0 <col:41, col:77> 'unsigned long'
| |     | | `-BinaryOperator 0x2c02c2a8 <col:42, col:74> 'unsigned long' '&'
| |     | |   |-ImplicitCastExpr 0x2c02c288 <col:42, col:70> 'mask':'unsigned long' <LValueToRValue>
| |     | |   | `-ArraySubscriptExpr 0x2c02c258 <col:42, col:70> 'const mask':'const unsigned long' lvalue
| |     | |   |   |-ImplicitCastExpr 0x2c02c248 <col:42> 'const mask *' <LValueToRValue>
| |     | |   |   | `-MemberExpr 0x2c02c1c0 <col:42> 'const mask *const' lvalue ->__tab_ 0x2c029a40
| |     | |   |   |   `-CXXThisExpr 0x2c02c1b0 <col:42> 'const class std::__1::ctype<char> *' this
| |     | |   |   `-CXXStaticCastExpr 0x2c02c228 <col:49, col:69> 'int' static_cast<int> <NoOp>
| |     | |   |     `-ImplicitCastExpr 0x2c02c218 <col:66> 'int' <IntegralCast>
| |     | |   |       `-ImplicitCastExpr 0x2c02c208 <col:66> 'char_type':'char' <LValueToRValue>
| |     | |   |         `-DeclRefExpr 0x2c02c1e0 <col:66> 'char_type':'char' lvalue ParmVar 0x2c029d70 '__c' 'char_type':'char'
| |     | |   `-ImplicitCastExpr 0x2c02c298 <col:74> 'mask':'unsigned long' <LValueToRValue>
| |     | |     `-DeclRefExpr 0x2c02c26c <col:74> 'mask':'unsigned long' lvalue ParmVar 0x2c029d20 '__m' 'mask':'unsigned long'
| |     | `-ImplicitCastExpr 0x2c02c2f0 <col:81> 'unsigned long' <IntegralCast>
| |     |   `-IntegerLiteral 0x2c02c2d8 <col:81> 'int' 0
| |     `-CXXBoolLiteralExpr 0x2c02c318 <col:85> '_Bool' false
| |-AlwaysInlineAttr 0x2c029e90 <line:530:47> always_inline
| `-VisibilityAttr 0x2c029ec0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02a060 <line:536:5, line:542:5> line:537:22 is 'const char_type *(const char_type *, const char_type *, mask *) const'
| |-ParmVarDecl 0x2c029f30 <col:25, col:42> col:42 used __low 'const char_type *'
| |-ParmVarDecl 0x2c029f70 <col:49, col:66> col:66 used __high 'const char_type *'
| |-ParmVarDecl 0x2c029fb0 <col:74, col:80> col:80 used __vec 'mask *'
| |-CompoundStmt 0x2c02c768 <line:538:5, line:542:5>
| | |-ForStmt 0x2c02c708 <line:539:9, line:540:85>
| | | |-<<<NULL>>>
| | | |-<<<NULL>>>
| | | |-BinaryOperator 0x2c02c3c0 <line:539:16, col:25> '_Bool' '!='
| | | | |-ImplicitCastExpr 0x2c02c3a0 <col:16> 'const char_type *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x2c02c36c <col:16> 'const char_type *' lvalue ParmVar 0x2c029f30 '__low' 'const char_type *'
| | | | `-ImplicitCastExpr 0x2c02c3b0 <col:25> 'const char_type *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x2c02c384 <col:25> 'const char_type *' lvalue ParmVar 0x2c029f70 '__high' 'const char_type *'
| | | |-BinaryOperator 0x2c02c438 <col:33, col:44> 'mask *' lvalue ','
| | | | |-UnaryOperator 0x2c02c3f0 <col:33, col:35> 'const char_type *' lvalue prefix '++'
| | | | | `-DeclRefExpr 0x2c02c3d8 <col:35> 'const char_type *' lvalue ParmVar 0x2c029f30 '__low' 'const char_type *'
| | | | `-UnaryOperator 0x2c02c420 <col:42, col:44> 'mask *' lvalue prefix '++'
| | | |   `-DeclRefExpr 0x2c02c404 <col:44> 'mask *' lvalue ParmVar 0x2c029fb0 '__vec' 'mask *'
| | | `-BinaryOperator 0x2c02c6f0 <line:540:13, col:85> 'mask':'unsigned long' lvalue '='
| | |   |-UnaryOperator 0x2c02c478 <col:13, col:14> 'mask':'unsigned long' lvalue prefix '*'
| | |   | `-ImplicitCastExpr 0x2c02c468 <col:14> 'mask *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x2c02c450 <col:14> 'mask *' lvalue ParmVar 0x2c029fb0 '__vec' 'mask *'
| | |   `-ConditionalOperator 0x2c02c6d0 <col:22, col:85> 'unsigned long'
| | |     |-ParenExpr 0x2c02c598 <col:22, col:46> '_Bool'
| | |     | `-BinaryOperator 0x2c02c580 <col:23, col:45> '_Bool' '=='
| | |     |   |-ParenExpr 0x2c02c550 <col:23, col:40> 'int'
| | |     |   | `-BinaryOperator 0x2c02c538 <col:24, col:36> 'int' '&'
| | |     |   |   |-ImplicitCastExpr 0x2c02c528 <col:24, col:31> 'int' <IntegralCast>
| | |     |   |   | `-ImplicitCastExpr 0x2c02c518 <col:24, col:31> 'char_type':'char' <LValueToRValue>
| | |     |   |   |   `-ParenExpr 0x2c02c4d0 <col:24, col:31> 'const char_type':'const char' lvalue
| | |     |   |   |     `-UnaryOperator 0x2c02c4b8 <col:25, col:26> 'const char_type':'const char' lvalue prefix '*'
| | |     |   |   |       `-ImplicitCastExpr 0x2c02c4a8 <col:26> 'const char_type *' <LValueToRValue>
| | |     |   |   |         `-DeclRefExpr 0x2c02c48c <col:26> 'const char_type *' lvalue ParmVar 0x2c029f30 '__low' 'const char_type *'
| | |     |   |   `-UnaryOperator 0x2c02c500 <col:35, col:36> 'int' prefix '~'
| | |     |   |     `-IntegerLiteral 0x2c02c4e8 <col:36> 'int' 127
| | |     |   `-IntegerLiteral 0x2c02c568 <col:45> 'int' 0
| | |     |-ImplicitCastExpr 0x2c02c6b0 <col:50, col:81> 'mask':'unsigned long' <LValueToRValue>
| | |     | `-ArraySubscriptExpr 0x2c02c680 <col:50, col:81> 'const mask':'const unsigned long' lvalue
| | |     |   |-ImplicitCastExpr 0x2c02c670 <col:50> 'const mask *' <LValueToRValue>
| | |     |   | `-MemberExpr 0x2c02c5c0 <col:50> 'const mask *const' lvalue ->__tab_ 0x2c029a40
| | |     |   |   `-CXXThisExpr 0x2c02c5b0 <col:50> 'const class std::__1::ctype<char> *' this
| | |     |   `-CXXStaticCastExpr 0x2c02c650 <col:57, col:80> 'int' static_cast<int> <NoOp>
| | |     |     `-ImplicitCastExpr 0x2c02c640 <col:74, col:75> 'int' <IntegralCast>
| | |     |       `-ImplicitCastExpr 0x2c02c630 <col:74, col:75> 'char_type':'char' <LValueToRValue>
| | |     |         `-UnaryOperator 0x2c02c608 <col:74, col:75> 'const char_type':'const char' lvalue prefix '*'
| | |     |           `-ImplicitCastExpr 0x2c02c5f8 <col:75> 'const char_type *' <LValueToRValue>
| | |     |             `-DeclRefExpr 0x2c02c5e0 <col:75> 'const char_type *' lvalue ParmVar 0x2c029f30 '__low' 'const char_type *'
| | |     `-ImplicitCastExpr 0x2c02c6c0 <col:85> 'unsigned long' <IntegralCast>
| | |       `-IntegerLiteral 0x2c02c698 <col:85> 'int' 0
| | `-ReturnStmt 0x2c02c758 <line:541:9, col:16>
| |   `-ImplicitCastExpr 0x2c02c748 <col:16> 'const char_type *' <LValueToRValue>
| |     `-DeclRefExpr 0x2c02c72c <col:16> 'const char_type *' lvalue ParmVar 0x2c029f30 '__low' 'const char_type *'
| |-AlwaysInlineAttr 0x2c02a0d0 <line:536:47> always_inline
| `-VisibilityAttr 0x2c02a100 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02a270 <line:544:5, line:551:5> line:545:22 scan_is 'const char_type *(mask, const char_type *, const char_type *) const'
| |-ParmVarDecl 0x2c02a140 <col:31, col:36> col:36 used __m 'mask':'unsigned long'
| |-ParmVarDecl 0x2c02a180 <col:41, col:58> col:58 used __low 'const char_type *'
| |-ParmVarDecl 0x2c02a1c0 <col:65, col:82> col:82 used __high 'const char_type *'
| |-CompoundStmt 0x2c02cb38 <line:546:5, line:551:5>
| | |-ForStmt 0x2c02cad8 <line:547:9, line:549:17>
| | | |-<<<NULL>>>
| | | |-<<<NULL>>>
| | | |-BinaryOperator 0x2c02c7d0 <line:547:16, col:25> '_Bool' '!='
| | | | |-ImplicitCastExpr 0x2c02c7b0 <col:16> 'const char_type *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x2c02c780 <col:16> 'const char_type *' lvalue ParmVar 0x2c02a180 '__low' 'const char_type *'
| | | | `-ImplicitCastExpr 0x2c02c7c0 <col:25> 'const char_type *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x2c02c798 <col:25> 'const char_type *' lvalue ParmVar 0x2c02a1c0 '__high' 'const char_type *'
| | | |-UnaryOperator 0x2c02c800 <col:33, col:35> 'const char_type *' lvalue prefix '++'
| | | | `-DeclRefExpr 0x2c02c7e8 <col:35> 'const char_type *' lvalue ParmVar 0x2c02a180 '__low' 'const char_type *'
| | | `-IfStmt 0x2c02cab8 <line:548:13, line:549:17>
| | |   |-<<<NULL>>>
| | |   |-BinaryOperator 0x2c02ca98 <line:548:17, col:85> '_Bool' '&&'
| | |   | |-ParenExpr 0x2c02c920 <col:17, col:41> '_Bool'
| | |   | | `-BinaryOperator 0x2c02c908 <col:18, col:40> '_Bool' '=='
| | |   | |   |-ParenExpr 0x2c02c8d8 <col:18, col:35> 'int'
| | |   | |   | `-BinaryOperator 0x2c02c8c0 <col:19, col:31> 'int' '&'
| | |   | |   |   |-ImplicitCastExpr 0x2c02c8b0 <col:19, col:26> 'int' <IntegralCast>
| | |   | |   |   | `-ImplicitCastExpr 0x2c02c8a0 <col:19, col:26> 'char_type':'char' <LValueToRValue>
| | |   | |   |   |   `-ParenExpr 0x2c02c858 <col:19, col:26> 'const char_type':'const char' lvalue
| | |   | |   |   |     `-UnaryOperator 0x2c02c840 <col:20, col:21> 'const char_type':'const char' lvalue prefix '*'
| | |   | |   |   |       `-ImplicitCastExpr 0x2c02c830 <col:21> 'const char_type *' <LValueToRValue>
| | |   | |   |   |         `-DeclRefExpr 0x2c02c814 <col:21> 'const char_type *' lvalue ParmVar 0x2c02a180 '__low' 'const char_type *'
| | |   | |   |   `-UnaryOperator 0x2c02c888 <col:30, col:31> 'int' prefix '~'
| | |   | |   |     `-IntegerLiteral 0x2c02c870 <col:31> 'int' 127
| | |   | |   `-IntegerLiteral 0x2c02c8f0 <col:40> 'int' 0
| | |   | `-ImplicitCastExpr 0x2c02ca88 <col:46, col:85> '_Bool' <IntegralToBoolean>
| | |   |   `-ParenExpr 0x2c02ca70 <col:46, col:85> 'unsigned long'
| | |   |     `-BinaryOperator 0x2c02ca58 <col:47, col:82> 'unsigned long' '&'
| | |   |       |-ImplicitCastExpr 0x2c02ca38 <col:47, col:78> 'mask':'unsigned long' <LValueToRValue>
| | |   |       | `-ArraySubscriptExpr 0x2c02ca08 <col:47, col:78> 'const mask':'const unsigned long' lvalue
| | |   |       |   |-ImplicitCastExpr 0x2c02c9f8 <col:47> 'const mask *' <LValueToRValue>
| | |   |       |   | `-MemberExpr 0x2c02c948 <col:47> 'const mask *const' lvalue ->__tab_ 0x2c029a40
| | |   |       |   |   `-CXXThisExpr 0x2c02c938 <col:47> 'const class std::__1::ctype<char> *' this
| | |   |       |   `-CXXStaticCastExpr 0x2c02c9d8 <col:54, col:77> 'int' static_cast<int> <NoOp>
| | |   |       |     `-ImplicitCastExpr 0x2c02c9c8 <col:71, col:72> 'int' <IntegralCast>
| | |   |       |       `-ImplicitCastExpr 0x2c02c9b8 <col:71, col:72> 'char_type':'char' <LValueToRValue>
| | |   |       |         `-UnaryOperator 0x2c02c990 <col:71, col:72> 'const char_type':'const char' lvalue prefix '*'
| | |   |       |           `-ImplicitCastExpr 0x2c02c980 <col:72> 'const char_type *' <LValueToRValue>
| | |   |       |             `-DeclRefExpr 0x2c02c968 <col:72> 'const char_type *' lvalue ParmVar 0x2c02a180 '__low' 'const char_type *'
| | |   |       `-ImplicitCastExpr 0x2c02ca48 <col:82> 'mask':'unsigned long' <LValueToRValue>
| | |   |         `-DeclRefExpr 0x2c02ca1c <col:82> 'mask':'unsigned long' lvalue ParmVar 0x2c02a140 '__m' 'mask':'unsigned long'
| | |   |-BreakStmt 0x2c02cab0 <line:549:17>
| | |   `-<<<NULL>>>
| | `-ReturnStmt 0x2c02cb28 <line:550:9, col:16>
| |   `-ImplicitCastExpr 0x2c02cb18 <col:16> 'const char_type *' <LValueToRValue>
| |     `-DeclRefExpr 0x2c02cafc <col:16> 'const char_type *' lvalue ParmVar 0x2c02a180 '__low' 'const char_type *'
| |-AlwaysInlineAttr 0x2c02a2e0 <line:544:47> always_inline
| `-VisibilityAttr 0x2c02a310 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02a430 <line:553:5, line:560:5> line:554:22 scan_not 'const char_type *(mask, const char_type *, const char_type *) const'
| |-ParmVarDecl 0x2c02a350 <col:31, col:36> col:36 used __m 'mask':'unsigned long'
| |-ParmVarDecl 0x2c02a390 <col:41, col:58> col:58 used __low 'const char_type *'
| |-ParmVarDecl 0x2c02a3d0 <col:65, col:82> col:82 used __high 'const char_type *'
| |-CompoundStmt 0x2c02cf38 <line:555:5, line:560:5>
| | |-ForStmt 0x2c02ced8 <line:556:9, line:558:17>
| | | |-<<<NULL>>>
| | | |-<<<NULL>>>
| | | |-BinaryOperator 0x2c02cba0 <line:556:16, col:25> '_Bool' '!='
| | | | |-ImplicitCastExpr 0x2c02cb80 <col:16> 'const char_type *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x2c02cb50 <col:16> 'const char_type *' lvalue ParmVar 0x2c02a390 '__low' 'const char_type *'
| | | | `-ImplicitCastExpr 0x2c02cb90 <col:25> 'const char_type *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x2c02cb68 <col:25> 'const char_type *' lvalue ParmVar 0x2c02a3d0 '__high' 'const char_type *'
| | | |-UnaryOperator 0x2c02cbd0 <col:33, col:35> 'const char_type *' lvalue prefix '++'
| | | | `-DeclRefExpr 0x2c02cbb8 <col:35> 'const char_type *' lvalue ParmVar 0x2c02a390 '__low' 'const char_type *'
| | | `-IfStmt 0x2c02ceb8 <line:557:13, line:558:17>
| | |   |-<<<NULL>>>
| | |   |-UnaryOperator 0x2c02ce98 <line:557:17, col:88> '_Bool' prefix '!'
| | |   | `-ParenExpr 0x2c02ce80 <col:18, col:88> '_Bool'
| | |   |   `-BinaryOperator 0x2c02ce68 <col:19, col:87> '_Bool' '&&'
| | |   |     |-ParenExpr 0x2c02ccf0 <col:19, col:43> '_Bool'
| | |   |     | `-BinaryOperator 0x2c02ccd8 <col:20, col:42> '_Bool' '=='
| | |   |     |   |-ParenExpr 0x2c02cca8 <col:20, col:37> 'int'
| | |   |     |   | `-BinaryOperator 0x2c02cc90 <col:21, col:33> 'int' '&'
| | |   |     |   |   |-ImplicitCastExpr 0x2c02cc80 <col:21, col:28> 'int' <IntegralCast>
| | |   |     |   |   | `-ImplicitCastExpr 0x2c02cc70 <col:21, col:28> 'char_type':'char' <LValueToRValue>
| | |   |     |   |   |   `-ParenExpr 0x2c02cc28 <col:21, col:28> 'const char_type':'const char' lvalue
| | |   |     |   |   |     `-UnaryOperator 0x2c02cc10 <col:22, col:23> 'const char_type':'const char' lvalue prefix '*'
| | |   |     |   |   |       `-ImplicitCastExpr 0x2c02cc00 <col:23> 'const char_type *' <LValueToRValue>
| | |   |     |   |   |         `-DeclRefExpr 0x2c02cbe4 <col:23> 'const char_type *' lvalue ParmVar 0x2c02a390 '__low' 'const char_type *'
| | |   |     |   |   `-UnaryOperator 0x2c02cc58 <col:32, col:33> 'int' prefix '~'
| | |   |     |   |     `-IntegerLiteral 0x2c02cc40 <col:33> 'int' 127
| | |   |     |   `-IntegerLiteral 0x2c02ccc0 <col:42> 'int' 0
| | |   |     `-ImplicitCastExpr 0x2c02ce58 <col:48, col:87> '_Bool' <IntegralToBoolean>
| | |   |       `-ParenExpr 0x2c02ce40 <col:48, col:87> 'unsigned long'
| | |   |         `-BinaryOperator 0x2c02ce28 <col:49, col:84> 'unsigned long' '&'
| | |   |           |-ImplicitCastExpr 0x2c02ce08 <col:49, col:80> 'mask':'unsigned long' <LValueToRValue>
| | |   |           | `-ArraySubscriptExpr 0x2c02cdd8 <col:49, col:80> 'const mask':'const unsigned long' lvalue
| | |   |           |   |-ImplicitCastExpr 0x2c02cdc8 <col:49> 'const mask *' <LValueToRValue>
| | |   |           |   | `-MemberExpr 0x2c02cd18 <col:49> 'const mask *const' lvalue ->__tab_ 0x2c029a40
| | |   |           |   |   `-CXXThisExpr 0x2c02cd08 <col:49> 'const class std::__1::ctype<char> *' this
| | |   |           |   `-CXXStaticCastExpr 0x2c02cda8 <col:56, col:79> 'int' static_cast<int> <NoOp>
| | |   |           |     `-ImplicitCastExpr 0x2c02cd98 <col:73, col:74> 'int' <IntegralCast>
| | |   |           |       `-ImplicitCastExpr 0x2c02cd88 <col:73, col:74> 'char_type':'char' <LValueToRValue>
| | |   |           |         `-UnaryOperator 0x2c02cd60 <col:73, col:74> 'const char_type':'const char' lvalue prefix '*'
| | |   |           |           `-ImplicitCastExpr 0x2c02cd50 <col:74> 'const char_type *' <LValueToRValue>
| | |   |           |             `-DeclRefExpr 0x2c02cd38 <col:74> 'const char_type *' lvalue ParmVar 0x2c02a390 '__low' 'const char_type *'
| | |   |           `-ImplicitCastExpr 0x2c02ce18 <col:84> 'mask':'unsigned long' <LValueToRValue>
| | |   |             `-DeclRefExpr 0x2c02cdec <col:84> 'mask':'unsigned long' lvalue ParmVar 0x2c02a350 '__m' 'mask':'unsigned long'
| | |   |-BreakStmt 0x2c02ceb0 <line:558:17>
| | |   `-<<<NULL>>>
| | `-ReturnStmt 0x2c02cf28 <line:559:9, col:16>
| |   `-ImplicitCastExpr 0x2c02cf18 <col:16> 'const char_type *' <LValueToRValue>
| |     `-DeclRefExpr 0x2c02cefc <col:16> 'const char_type *' lvalue ParmVar 0x2c02a390 '__low' 'const char_type *'
| |-AlwaysInlineAttr 0x2c02a4a0 <line:553:47> always_inline
| `-VisibilityAttr 0x2c02a4d0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02a5a0 <line:562:5, line:566:5> line:563:15 toupper 'char_type (char_type) const'
| |-ParmVarDecl 0x2c02a510 <col:23, col:33> col:33 used __c 'char_type':'char'
| |-CompoundStmt 0x2c02d028 <line:564:5, line:566:5>
| | `-ReturnStmt 0x2c02d018 <line:565:9, col:30>
| |   `-CXXMemberCallExpr 0x2c02cfe8 <col:16, col:30> 'char_type':'char'
| |     |-MemberExpr 0x2c02cfc8 <col:16> '<bound member function type>' ->do_toupper 0x2c02b6e0
| |     | `-CXXThisExpr 0x2c02cfb8 <col:16> 'const class std::__1::ctype<char> *' this
| |     `-ImplicitCastExpr 0x2c02d008 <col:27> 'char_type':'char' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02cfa0 <col:27> 'char_type':'char' lvalue ParmVar 0x2c02a510 '__c' 'char_type':'char'
| |-AlwaysInlineAttr 0x2c02a610 <line:562:47> always_inline
| `-VisibilityAttr 0x2c02a640 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02a790 <line:568:5, line:572:5> line:569:22 toupper 'const char_type *(char_type *, const char_type *) const'
| |-ParmVarDecl 0x2c02a6b0 <col:30, col:41> col:41 used __low 'char_type *'
| |-ParmVarDecl 0x2c02a6f0 <col:48, col:65> col:65 used __high 'const char_type *'
| |-CompoundStmt 0x2c02d148 <line:570:5, line:572:5>
| | `-ReturnStmt 0x2c02d138 <line:571:9, col:40>
| |   `-CXXMemberCallExpr 0x2c02d0f0 <col:16, col:40> 'const char_type *'
| |     |-MemberExpr 0x2c02d0d0 <col:16> '<bound member function type>' ->do_toupper 0x2c02b800
| |     | `-CXXThisExpr 0x2c02d0c0 <col:16> 'const class std::__1::ctype<char> *' this
| |     |-ImplicitCastExpr 0x2c02d118 <col:27> 'char_type *' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d090 <col:27> 'char_type *' lvalue ParmVar 0x2c02a6b0 '__low' 'char_type *'
| |     `-ImplicitCastExpr 0x2c02d128 <col:34> 'const char_type *' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02d0a8 <col:34> 'const char_type *' lvalue ParmVar 0x2c02a6f0 '__high' 'const char_type *'
| |-AlwaysInlineAttr 0x2c02a800 <line:568:47> always_inline
| `-VisibilityAttr 0x2c02a830 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02a8c0 <line:574:5, line:578:5> line:575:15 tolower 'char_type (char_type) const'
| |-ParmVarDecl 0x2c02a870 <col:23, col:33> col:33 used __c 'char_type':'char'
| |-CompoundStmt 0x2c02d238 <line:576:5, line:578:5>
| | `-ReturnStmt 0x2c02d228 <line:577:9, col:30>
| |   `-CXXMemberCallExpr 0x2c02d1f8 <col:16, col:30> 'char_type':'char'
| |     |-MemberExpr 0x2c02d1d8 <col:16> '<bound member function type>' ->do_tolower 0x2c02b8c0
| |     | `-CXXThisExpr 0x2c02d1c8 <col:16> 'const class std::__1::ctype<char> *' this
| |     `-ImplicitCastExpr 0x2c02d218 <col:27> 'char_type':'char' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02d1b0 <col:27> 'char_type':'char' lvalue ParmVar 0x2c02a870 '__c' 'char_type':'char'
| |-AlwaysInlineAttr 0x2c02a930 <line:574:47> always_inline
| `-VisibilityAttr 0x2c02a960 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02aa50 <line:580:5, line:584:5> line:581:22 tolower 'const char_type *(char_type *, const char_type *) const'
| |-ParmVarDecl 0x2c02a9b0 <col:30, col:41> col:41 used __low 'char_type *'
| |-ParmVarDecl 0x2c02a9f0 <col:48, col:65> col:65 used __high 'const char_type *'
| |-CompoundStmt 0x2c02d358 <line:582:5, line:584:5>
| | `-ReturnStmt 0x2c02d348 <line:583:9, col:40>
| |   `-CXXMemberCallExpr 0x2c02d300 <col:16, col:40> 'const char_type *'
| |     |-MemberExpr 0x2c02d2e0 <col:16> '<bound member function type>' ->do_tolower 0x2c02b9e0
| |     | `-CXXThisExpr 0x2c02d2d0 <col:16> 'const class std::__1::ctype<char> *' this
| |     |-ImplicitCastExpr 0x2c02d328 <col:27> 'char_type *' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d2a0 <col:27> 'char_type *' lvalue ParmVar 0x2c02a9b0 '__low' 'char_type *'
| |     `-ImplicitCastExpr 0x2c02d338 <col:34> 'const char_type *' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02d2b8 <col:34> 'const char_type *' lvalue ParmVar 0x2c02a9f0 '__high' 'const char_type *'
| |-AlwaysInlineAttr 0x2c02aac0 <line:580:47> always_inline
| `-VisibilityAttr 0x2c02aaf0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02aba0 <line:586:5, line:590:5> line:587:15 used widen 'char_type (char) const'
| |-ParmVarDecl 0x2c02ab30 <col:21, col:26> col:26 used __c 'char'
| |-CompoundStmt 0x2c02d448 <line:588:5, line:590:5>
| | `-ReturnStmt 0x2c02d438 <line:589:9, col:28>
| |   `-CXXMemberCallExpr 0x2c02d408 <col:16, col:28> 'char_type':'char'
| |     |-MemberExpr 0x2c02d3e8 <col:16> '<bound member function type>' ->do_widen 0x2c02baa0
| |     | `-CXXThisExpr 0x2c02d3d8 <col:16> 'const class std::__1::ctype<char> *' this
| |     `-ImplicitCastExpr 0x2c02d428 <col:25> 'char' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02d3c0 <col:25> 'char' lvalue ParmVar 0x2c02ab30 '__c' 'char'
| |-AlwaysInlineAttr 0x2c02ac10 <line:586:47> always_inline
| `-VisibilityAttr 0x2c02ac40 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02adc0 <line:592:5, line:596:5> line:593:17 widen 'const char *(const char *, const char *, char_type *) const'
| |-ParmVarDecl 0x2c02ac90 <col:23, col:35> col:35 used __low 'const char *'
| |-ParmVarDecl 0x2c02acd0 <col:42, col:54> col:54 used __high 'const char *'
| |-ParmVarDecl 0x2c02ad10 <col:62, col:73> col:73 used __to 'char_type *'
| |-CompoundStmt 0x2c02d590 <line:594:5, line:596:5>
| | `-ReturnStmt 0x2c02d580 <line:595:9, col:44>
| |   `-CXXMemberCallExpr 0x2c02d528 <col:16, col:44> 'const char *'
| |     |-MemberExpr 0x2c02d508 <col:16> '<bound member function type>' ->do_widen 0x2c02bc00
| |     | `-CXXThisExpr 0x2c02d4f8 <col:16> 'const class std::__1::ctype<char> *' this
| |     |-ImplicitCastExpr 0x2c02d550 <col:25> 'const char *' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d4b0 <col:25> 'const char *' lvalue ParmVar 0x2c02ac90 '__low' 'const char *'
| |     |-ImplicitCastExpr 0x2c02d560 <col:32> 'const char *' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d4c8 <col:32> 'const char *' lvalue ParmVar 0x2c02acd0 '__high' 'const char *'
| |     `-ImplicitCastExpr 0x2c02d570 <col:40> 'char_type *' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02d4e0 <col:40> 'char_type *' lvalue ParmVar 0x2c02ad10 '__to' 'char_type *'
| |-AlwaysInlineAttr 0x2c02ae30 <line:592:47> always_inline
| `-VisibilityAttr 0x2c02ae60 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02af70 <line:598:5, line:602:5> line:599:10 narrow 'char (char_type, char) const'
| |-ParmVarDecl 0x2c02aea0 <col:17, col:27> col:27 used __c 'char_type':'char'
| |-ParmVarDecl 0x2c02aee0 <col:32, col:37> col:37 used __dfault 'char'
| |-CompoundStmt 0x2c02d6b0 <line:600:5, line:602:5>
| | `-ReturnStmt 0x2c02d6a0 <line:601:9, col:39>
| |   `-CXXMemberCallExpr 0x2c02d658 <col:16, col:39> 'char'
| |     |-MemberExpr 0x2c02d638 <col:16> '<bound member function type>' ->do_narrow 0x2c02bd10
| |     | `-CXXThisExpr 0x2c02d628 <col:16> 'const class std::__1::ctype<char> *' this
| |     |-ImplicitCastExpr 0x2c02d680 <col:26> 'char_type':'char' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d5f8 <col:26> 'char_type':'char' lvalue ParmVar 0x2c02aea0 '__c' 'char_type':'char'
| |     `-ImplicitCastExpr 0x2c02d690 <col:31> 'char' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02d610 <col:31> 'char' lvalue ParmVar 0x2c02aee0 '__dfault' 'char'
| |-AlwaysInlineAttr 0x2c02afe0 <line:598:47> always_inline
| `-VisibilityAttr 0x2c02b010 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02b1e0 <line:604:5, line:608:5> line:605:17 narrow 'const char *(const char_type *, const char_type *, char, char *) const'
| |-ParmVarDecl 0x2c02b060 <col:24, col:41> col:41 used __low 'const char_type *'
| |-ParmVarDecl 0x2c02b0a0 <col:48, col:65> col:65 used __high 'const char_type *'
| |-ParmVarDecl 0x2c02b0e0 <col:73, col:78> col:78 used __dfault 'char'
| |-ParmVarDecl 0x2c02b120 <col:88, col:94> col:94 used __to 'char *'
| |-CompoundStmt 0x2c02d828 <line:606:5, line:608:5>
| | `-ReturnStmt 0x2c02d818 <line:607:9, col:55>
| |   `-CXXMemberCallExpr 0x2c02d7a8 <col:16, col:55> 'const char *'
| |     |-MemberExpr 0x2c02d788 <col:16> '<bound member function type>' ->do_narrow 0x2c02beb0
| |     | `-CXXThisExpr 0x2c02d778 <col:16> 'const class std::__1::ctype<char> *' this
| |     |-ImplicitCastExpr 0x2c02d7d8 <col:26> 'const char_type *' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d718 <col:26> 'const char_type *' lvalue ParmVar 0x2c02b060 '__low' 'const char_type *'
| |     |-ImplicitCastExpr 0x2c02d7e8 <col:33> 'const char_type *' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d730 <col:33> 'const char_type *' lvalue ParmVar 0x2c02b0a0 '__high' 'const char_type *'
| |     |-ImplicitCastExpr 0x2c02d7f8 <col:41> 'char' <LValueToRValue>
| |     | `-DeclRefExpr 0x2c02d748 <col:41> 'char' lvalue ParmVar 0x2c02b0e0 '__dfault' 'char'
| |     `-ImplicitCastExpr 0x2c02d808 <col:51> 'char *' <LValueToRValue>
| |       `-DeclRefExpr 0x2c02d760 <col:51> 'char *' lvalue ParmVar 0x2c02b120 '__to' 'char *'
| |-AlwaysInlineAttr 0x2c02b250 <line:604:47> always_inline
| `-VisibilityAttr 0x2c02b280 <col:21, col:44> Hidden
|-VarDecl 0x2c02b2d0 <line:610:5, col:23> col:23 used id 'class locale::id':'class std::__1::locale::id' static
|-VarDecl 0x2c02b310 <line:613:5, col:45> col:25 table_size 'const size_t':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2c02b3a0 <col:38, col:45> 'const size_t':'const unsigned int' <IntegralCast>
|   `-ParenExpr 0x2c02b388 <col:38, col:45> 'int'
|     `-BinaryOperator 0x2c02b370 <col:39, col:43> 'int' '<<'
|       |-IntegerLiteral 0x2c02b340 <col:39> 'int' 1
|       `-IntegerLiteral 0x2c02b358 <col:43> 'int' 8
|-CXXMethodDecl 0x2c02b460 <line:617:5, col:117> col:79 table 'const mask *(void) const noexcept'
| |-CompoundStmt 0x2c02d890 <col:102, col:117>
| | `-ReturnStmt 0x2c02d880 <col:103, col:110>
| |   `-ImplicitCastExpr 0x2c02d870 <col:110> 'const mask *' <LValueToRValue>
| |     `-MemberExpr 0x2c02d850 <col:110> 'const mask *const' lvalue ->__tab_ 0x2c029a40
| |       `-CXXThisExpr 0x2c02d840 <col:110> 'const class std::__1::ctype<char> *' this
| |-AlwaysInlineAttr 0x2c02b4c0 <col:47> always_inline
| `-VisibilityAttr 0x2c02b4f0 <col:21, col:44> Hidden
|-CXXMethodDecl 0x2c02b570 <line:618:5, col:40> col:24 classic_table 'const mask *(void) noexcept' static
|-AccessSpecDecl 0x2c02b5d0 <line:628:1, col:10> col:1 protected
|-CXXDestructorDecl 0x2c02b620 <line:629:5, col:12> col:5 ~ctype 'void (void) noexcept'
|-CXXMethodDecl 0x2c02b6e0 <line:630:5, col:49> col:23 used do_toupper 'char_type (char_type) const' virtual
| `-ParmVarDecl 0x2c02b690 <col:34, col:44> col:44 __c 'char_type':'char'
|-CXXMethodDecl 0x2c02b800 <line:631:5, col:84> col:30 used do_toupper 'const char_type *(char_type *, const char_type *) const' virtual
| |-ParmVarDecl 0x2c02b760 <col:41, col:52> col:52 __low 'char_type *'
| `-ParmVarDecl 0x2c02b7a0 <col:59, col:76> col:76 __high 'const char_type *'
|-CXXMethodDecl 0x2c02b8c0 <line:632:5, col:49> col:23 used do_tolower 'char_type (char_type) const' virtual
| `-ParmVarDecl 0x2c02b870 <col:34, col:44> col:44 __c 'char_type':'char'
|-CXXMethodDecl 0x2c02b9e0 <line:633:5, col:84> col:30 used do_tolower 'const char_type *(char_type *, const char_type *) const' virtual
| |-ParmVarDecl 0x2c02b940 <col:41, col:52> col:52 __low 'char_type *'
| `-ParmVarDecl 0x2c02b980 <col:59, col:76> col:76 __high 'const char_type *'
|-CXXMethodDecl 0x2c02baa0 <line:634:5, col:42> col:23 used do_widen 'char_type (char) const' virtual
| `-ParmVarDecl 0x2c02ba50 <col:32, col:37> col:37 __c 'char'
|-CXXMethodDecl 0x2c02bc00 <line:635:5, col:90> col:25 used do_widen 'const char *(const char *, const char *, char_type *) const' virtual
| |-ParmVarDecl 0x2c02bb20 <col:34, col:46> col:46 __low 'const char *'
| |-ParmVarDecl 0x2c02bb60 <col:53, col:65> col:65 __high 'const char *'
| `-ParmVarDecl 0x2c02bba0 <col:73, col:84> col:84 __to 'char_type *'
|-CXXMethodDecl 0x2c02bd10 <line:636:5, col:58> col:18 used do_narrow 'char (char_type, char) const' virtual
| |-ParmVarDecl 0x2c02bc80 <col:28, col:38> col:38 __c 'char_type':'char'
| `-ParmVarDecl 0x2c02bcc0 <col:43, col:48> col:48 __dfault 'char'
|-CXXMethodDecl 0x2c02beb0 <line:637:5, col:111> col:25 used do_narrow 'const char *(const char_type *, const char_type *, char, char *) const' virtual
| |-ParmVarDecl 0x2c02bd90 <col:35, col:52> col:52 __low 'const char_type *'
| |-ParmVarDecl 0x2c02bdd0 <col:59, col:76> col:76 __high 'const char_type *'
| |-ParmVarDecl 0x2c02be10 <col:84, col:89> col:89 __dfault 'char'
| `-ParmVarDecl 0x2c02be50 <col:99, col:105> col:105 __to 'char *'
`-CXXMethodDecl 0x2c02bf80 <line:520:56, <invalid sloc>> col:56 implicit operator= 'class std::__1::ctype<char> &(const class std::__1::ctype<char> &)' inline noexcept-unevaluated 0x2c02bf80
  `-ParmVarDecl 0x2c02c020 <col:56> col:56 'const class std::__1::ctype<char> &'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i32*, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%"class.std::__1::ctype.base" = type <{ %"class.std::__1::locale::facet", i32*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2bfefff0 prev 0x2bfefbc0 </usr/include/c++/v1/mutex:449:1, line:470:1> line:449:57 referenced struct once_flag definition
|-TypeVisibilityAttr 0x2bff0040 <col:24, col:53> Default
|-CXXRecordDecl 0x2bff00c0 <col:1, col:57> col:57 implicit referenced struct once_flag
|-CXXConstructorDecl 0x2bff0180 <line:451:5, line:453:45> col:9 used constexpr once_flag 'void (void) noexcept'
| |-CXXCtorInitializer Field 0x2bff04a0 '__state_' 'unsigned long'
| | `-ImplicitCastExpr 0x2bff0850 <col:41> 'unsigned long' <IntegralCast>
| |   `-IntegerLiteral 0x2bff0818 <col:41> 'int' 0
| |-CompoundStmt 0x2bff0880 <col:44, col:45>
| |-AlwaysInlineAttr 0x2bff01f0 <line:451:47> always_inline
| `-VisibilityAttr 0x2bff0220 <col:21, col:44> Hidden
|-AccessSpecDecl 0x2bff0240 <line:455:1, col:8> col:1 private
|-CXXConstructorDecl 0x2bff0320 <line:456:5, col:31> col:5 once_flag 'void (const struct std::__1::once_flag &)'
| `-ParmVarDecl 0x2bff0290 <col:15, col:30> col:31 'const struct std::__1::once_flag &'
|-CXXMethodDecl 0x2bff0420 <line:457:5, col:42> col:16 operator= 'struct std::__1::once_flag &(const struct std::__1::once_flag &)'
| `-ParmVarDecl 0x2bff03b0 <col:26, col:41> col:42 'const struct std::__1::once_flag &'
|-FieldDecl 0x2bff04a0 <line:459:5, col:19> col:19 referenced __state_ 'unsigned long'
`-FriendDecl 0x2bff07f0 <line:462:5, line:464:55> col:10
  `-FunctionTemplateDecl 0x2bff0760 parent 0x2bfe13f0 prev 0x2bfeff40 <line:462:5, line:464:55> col:10 call_once
    |-TemplateTypeParmDecl 0x2bff04d0 <line:462:14, col:20> col:20 referenced class _Callable
    |-TemplateTypeParmDecl 0x2bff0520 <col:31, col:40> col:40 referenced class ... _Args
    `-FunctionDecl 0x2bff06f0 parent 0x2bfe13f0 prev 0x2bfefee0 <line:463:5, line:464:55> col:10 call_once 'void (struct std::__1::once_flag &, _Callable &&, _Args &&...)'
      |-ParmVarDecl 0x2bff0590 <col:20, col:29> col:30 'struct std::__1::once_flag &'
      |-ParmVarDecl 0x2bff05f0 <col:32, col:41> col:43 '_Callable &&'
      |-ParmVarDecl 0x2bff0670 <col:45, col:52> col:55 '_Args &&...'
      |-AlwaysInlineAttr 0x2bff07c0 <line:438:43> Inherited always_inline
      `-VisibilityAttr 0x2bff07d0 <col:17, col:40> Inherited Hidden

Layout: <CGRecordLayout
  LLVMType:%"struct.std::__1::once_flag" = type { i32 }
  NonVirtualBaseLLVMType:%"struct.std::__1::once_flag" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2c0078b0 parent 0x2c0037e0 prev 0x2c0039f0 </usr/include/c++/v1/__locale:135:1, line:152:1> line:135:64 referenced class id definition
|-TypeVisibilityAttr 0x2c007920 <col:23, col:52> Default
|-CXXRecordDecl 0x2c0079b0 <col:1, col:64> col:64 implicit referenced class id
|-FieldDecl 0x2c007a10 <line:137:5, col:15> col:15 __flag_ 'struct std::__1::once_flag'
|-FieldDecl 0x2c007a60 <line:138:5, col:13> col:13 __id_ 'int32_t':'int'
|-VarDecl 0x2c007aa0 <line:140:5, col:20> col:20 __next_id 'int32_t':'int' static
|-AccessSpecDecl 0x2c007ad0 <line:141:1, col:7> col:1 public
|-CXXConstructorDecl 0x2c007b60 <line:142:5, col:93> col:77 used constexpr id 'void (void)'
| |-CXXCtorInitializer Field 0x2c007a10 '__flag_' 'struct std::__1::once_flag'
| | `-CXXConstructExpr 0x2c008068 <col:77> 'struct std::__1::once_flag' 'void (void) noexcept'
| |-CXXCtorInitializer Field 0x2c007a60 '__id_' 'int32_t':'int'
| | `-IntegerLiteral 0x2c008018 <col:89> 'int' 0
| |-CompoundStmt 0x2c0080b0 <col:92, col:93>
| |-AlwaysInlineAttr 0x2c007bd0 <col:47> always_inline
| `-VisibilityAttr 0x2c007c00 <col:21, col:44> Hidden
|-AccessSpecDecl 0x2c007c20 <line:143:1, col:8> col:1 private
|-CXXMethodDecl 0x2c007c70 <line:144:5, col:17> col:10 __init 'void (void)'
|-CXXMethodDecl 0x2c007d70 <line:145:5, col:29> col:10 operator= 'void (const class std::__1::locale::id &)'
| `-ParmVarDecl 0x2c007d00 <col:20, col:28> col:29 'const class std::__1::locale::id &'
|-CXXConstructorDecl 0x2c007e40 <line:146:5, col:17> col:5 id 'void (const class std::__1::locale::id &)'
| `-ParmVarDecl 0x2c007df0 <col:8, col:16> col:17 'const class std::__1::locale::id &'
|-AccessSpecDecl 0x2c007ec0 <line:147:1, col:7> col:1 public
|-CXXMethodDecl 0x2c007f00 <line:148:5, col:16> col:10 __get 'long (void)'
|-FriendDecl 0x2c007f90 <line:150:5, col:18> col:12 'class locale':'class std::__1::locale'
`-FriendDecl 0x2c007ff0 <line:151:5, col:26> col:12 'class class locale::__imp':'class std::__1::locale::__imp'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::locale::id" = type { %"struct.std::__1::once_flag", i32 }
  NonVirtualBaseLLVMType:%"class.std::__1::locale::id" = type { %"struct.std::__1::once_flag", i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2bd87fc0 </usr/include/c++/v1/string:1183:1, col:98> col:72 class __basic_string_common definition
|-TemplateArgument integral 1
|-TypeVisibilityAttr 0x2bd880d0 <col:39, col:68> Default
|-CXXRecordDecl 0x2bd88150 prev 0x2bd87fc0 <line:1150:1, col:56> col:56 implicit class __basic_string_common
|-AccessSpecDecl 0x2bd881a0 <line:1152:1, col:10> col:1 protected
|-CXXMethodDecl 0x2bd881c0 <line:1153:5, col:33> col:10 __throw_length_error 'void (void) const'
|-CXXMethodDecl 0x2bd88230 <line:1154:5, col:33> col:10 __throw_out_of_range 'void (void) const'
|-CXXDestructorDecl 0x2c04c870 <line:1183:72> col:72 implicit ~__basic_string_common 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31b860 <col:72> col:72 implicit used constexpr __basic_string_common 'void (void) noexcept' inline
| `-CompoundStmt 0x2c31bb08 <col:72>
|-CXXConstructorDecl 0x2c31b910 <col:72> col:72 implicit constexpr __basic_string_common 'void (const class std::__1::__basic_string_common<true> &)' inline noexcept-unevaluated 0x2c31b910
| `-ParmVarDecl 0x2c31b9c0 <col:72> col:72 'const class std::__1::__basic_string_common<true> &'
`-CXXConstructorDecl 0x2c31ba20 <col:72> col:72 implicit constexpr __basic_string_common 'void (class std::__1::__basic_string_common<true> &&)' inline noexcept-unevaluated 0x2c31ba20
  `-ParmVarDecl 0x2c31bad0 <col:72> col:72 'class std::__1::__basic_string_common<true> &&'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::__basic_string_common" = type { i8 }
  NonVirtualBaseLLVMType:%"class.std::__1::__basic_string_common" = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2b8e17e0 </usr/include/c++/v1/iosfwd:101:1, col:76> /usr/include/c++/v1/memory:1612:56 class allocator definition
|-TemplateArgument type 'char'
|-CXXRecordDecl 0x2be5a0d0 prev 0x2b8e17e0 <col:1, col:56> col:56 implicit class allocator
|-AccessSpecDecl 0x2be5a120 <line:1614:1, col:7> col:1 public
|-TypedefDecl 0x2be5a140 <line:1615:5, col:20> col:20 referenced size_type 'size_t':'unsigned int'
|-TypedefDecl 0x2be5a170 <line:1616:5, col:23> col:23 referenced difference_type 'ptrdiff_t':'int'
|-TypedefDecl 0x2be5a1f0 <line:1617:5, col:18> col:18 referenced pointer 'char *'
|-TypedefDecl 0x2be5a250 <line:1618:5, col:24> col:24 referenced const_pointer 'const char *'
|-TypedefDecl 0x2be5a2b0 <line:1619:5, col:18> col:18 reference 'char &'
|-TypedefDecl 0x2be5a310 <line:1620:5, col:24> col:24 const_reference 'const char &'
|-TypedefDecl 0x2be5a340 <line:1621:5, col:17> col:17 referenced value_type 'char':'char'
|-TypedefDecl 0x2be5a370 <line:1623:5, col:23> col:23 referenced propagate_on_container_move_assignment 'true_type':'struct std::__1::integral_constant<_Bool, true>'
|-ClassTemplateDecl 0x2be5a450 <line:1625:5, col:33> col:33 rebind
| |-TemplateTypeParmDecl 0x2be5a3a0 <col:15, col:21> col:21 class _Up
| `-CXXRecordDecl 0x2be5a400 <col:26, col:33> col:33 struct rebind
|-CXXConstructorDecl 0x2be5a5b0 <line:1627:5, col:89> col:67 used allocator 'void (void) noexcept'
| |-CompoundStmt 0x2bc03580 <col:88, col:89>
| `-AlwaysInlineAttr 0x2be5a650 <col:47> always_inline
|-FunctionTemplateDecl 0x2be5a890 <line:1628:5, col:88> col:88 allocator
| |-TemplateTypeParmDecl 0x2be5a680 <col:15, col:21> col:21 class _Up
| |-CXXConstructorDecl 0x2be5a820 <col:26, col:88> col:88 allocator 'void (const allocator<_Up> &) noexcept'
| | |-ParmVarDecl 0x2be5a780 <col:98, col:118> col:119 'const allocator<_Up> &'
| | `-AlwaysInlineAttr 0x2be5a8c0 <col:68> always_inline
| `-CXXConstructorDecl 0x2c04e4c0 <col:26, col:88> col:88 allocator 'void (const allocator<char> &) noexcept'
|   |-TemplateArgument type 'char'
|   |-ParmVarDecl 0x2c04e450 <col:98, col:118> col:119 'const allocator<char> &'
|   `-AlwaysInlineAttr 0x2c04e570 <col:68> always_inline
|-CXXMethodDecl 0x2be5aa00 <line:1629:5, line:1630:42> line:1629:75 address 'pointer (reference) const noexcept'
| |-ParmVarDecl 0x2be5a970 <col:83, col:93> col:93 __x 'reference':'char &'
| `-AlwaysInlineAttr 0x2be5aa70 <col:47> always_inline
|-CXXMethodDecl 0x2be5ab60 <line:1631:5, line:1632:42> line:1631:81 address 'const_pointer (const_reference) const noexcept'
| |-ParmVarDecl 0x2be5aad0 <col:89, col:105> col:105 __x 'const_reference':'const char &'
| `-AlwaysInlineAttr 0x2be5abd0 <col:47> always_inline
|-CXXMethodDecl 0x2be5acc0 <line:1633:5, line:1634:79> line:1633:75 allocate 'pointer (size_type, allocator<void>::const_pointer)'
| |-ParmVarDecl 0x2be5ac00 <col:84, col:94> col:94 __n 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be5ac30 <col:99, col:132> col:130 'allocator<void>::const_pointer':'const void *'
| `-AlwaysInlineAttr 0x2be5ad30 <col:47> always_inline
|-CXXMethodDecl 0x2be5ae00 <line:1635:5, line:1636:45> line:1635:72 deallocate 'void (pointer, size_type) noexcept'
| |-ParmVarDecl 0x2be5ad60 <col:83, col:91> col:91 __p 'pointer':'char *'
| |-ParmVarDecl 0x2be5ad90 <col:96> col:105 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be5ae70 <col:47> always_inline
|-CXXMethodDecl 0x2be5aea0 <line:1637:5, line:1638:45> line:1637:77 max_size 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be5af10 <col:47> always_inline
|-FunctionTemplateDecl 0x2be5b1b0 <line:1640:5, line:1646:9> line:1643:9 construct
| |-TemplateTypeParmDecl 0x2be5af40 <line:1640:15, col:21> col:21 class _Up
| |-TemplateTypeParmDecl 0x2be5af90 <col:26, col:35> col:35 class ... _Args
| `-CXXMethodDecl 0x2be5b150 <line:1641:9, line:1646:9> line:1643:9 construct 'void (_Up *, _Args &&...)'
|   |-ParmVarDecl 0x2be5b030 <col:19, col:24> col:24 __p '_Up *'
|   |-ParmVarDecl 0x2be5b0c0 <col:29, col:40> col:40 __args '_Args &&...'
|   `-AlwaysInlineAttr 0x2be5b1e0 <line:1641:51> always_inline
|-CXXMethodDecl 0x2be5b2f0 <line:1700:5, col:106> col:72 destroy 'void (pointer)'
| |-ParmVarDecl 0x2be5b260 <col:80, col:88> col:88 __p 'pointer':'char *'
| `-AlwaysInlineAttr 0x2be5b360 <col:47> always_inline
|-CXXDestructorDecl 0x2c04ca50 <line:1612:56> col:56 implicit referenced ~allocator 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c04e1e0 <col:56> col:56 implicit constexpr allocator 'void (const class std::__1::allocator<char> &)' inline noexcept-unevaluated 0x2c04e1e0
| `-ParmVarDecl 0x2c04e270 <col:56> col:56 'const class std::__1::allocator<char> &'
`-CXXConstructorDecl 0x2c04e2b0 <col:56> col:56 implicit used constexpr allocator 'void (class std::__1::allocator<char> &&) noexcept' inline
  |-ParmVarDecl 0x2c04e360 <col:56> col:56 'class std::__1::allocator<char> &&'
  `-CompoundStmt 0x2c04e598 <col:56>

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::allocator" = type { i8 }
  NonVirtualBaseLLVMType:%"class.std::__1::allocator.base" = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2be700d0 </usr/include/c++/v1/string:1269:5, line:1274:5> line:1269:12 struct __long definition
|-CXXRecordDecl 0x2be70360 prev 0x2be700d0 <col:5, col:12> col:12 implicit struct __long
|-FieldDecl 0x2be703d0 <line:1271:9, col:19> col:19 __cap_ 'size_type':'unsigned int'
|-FieldDecl 0x2be70410 <line:1272:9, col:19> col:19 __size_ 'size_type':'unsigned int'
|-FieldDecl 0x2be70450 <line:1273:9, col:17> col:17 referenced __data_ 'pointer':'char *'
|-CXXDestructorDecl 0x2c04cb90 <line:1269:12> col:12 implicit ~__long 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31a310 <col:12> col:12 implicit constexpr __long 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &)' inline noexcept-unevaluated 0x2c31a310
| `-ParmVarDecl 0x2c31a3c0 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &'
|-CXXConstructorDecl 0x2c31a420 <col:12> col:12 implicit constexpr __long 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &&) noexcept' inline
| `-ParmVarDecl 0x2c31a4d0 <col:12> col:12 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &&'
`-CXXConstructorDecl 0x2c31b140 <col:12> col:12 implicit __long 'void (void) noexcept' inline

Layout: <CGRecordLayout
  LLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i32, i32, i8* }
  NonVirtualBaseLLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i32, i32, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2be709b0 </usr/include/c++/v1/string:1289:9, line:1293:9> line:1289:9 union definition
|-FieldDecl 0x2be70aa0 <line:1291:13, col:27> col:27 referenced __size_ 'unsigned char'
|-FieldDecl 0x2be70ae0 <line:1292:13, col:24> col:24 __lx 'value_type':'char'
|-CXXDestructorDecl 0x2c04ce10 <line:1289:9> col:9 implicit ~ 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31a570 <col:9> col:9 implicit constexpr  'void (const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &)' inline noexcept-unevaluated 0x2c31a570
| `-ParmVarDecl 0x2c31a620 <col:9> col:9 'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &'
|-CXXConstructorDecl 0x2c31a680 <col:9> col:9 implicit constexpr  'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &&) noexcept' inline
| `-ParmVarDecl 0x2c31a730 <col:9> col:9 'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &&'
`-CXXConstructorDecl 0x2c33a560 <col:9> col:9 implicit  'void (void) noexcept' inline

Layout: <CGRecordLayout
  LLVMType:%union.anon.3 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2be706d0 </usr/include/c++/v1/string:1287:5, line:1295:5> line:1287:12 struct __short definition
|-CXXRecordDecl 0x2be70960 prev 0x2be706d0 <col:5, col:12> col:12 implicit struct __short
|-CXXRecordDecl 0x2be709b0 <line:1289:9, line:1293:9> line:1289:9 union definition
| |-FieldDecl 0x2be70aa0 <line:1291:13, col:27> col:27 referenced __size_ 'unsigned char'
| |-FieldDecl 0x2be70ae0 <line:1292:13, col:24> col:24 __lx 'value_type':'char'
| |-CXXDestructorDecl 0x2c04ce10 <line:1289:9> col:9 implicit ~ 'void (void) noexcept' inline
| |-CXXConstructorDecl 0x2c31a570 <col:9> col:9 implicit constexpr  'void (const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &)' inline noexcept-unevaluated 0x2c31a570
| | `-ParmVarDecl 0x2c31a620 <col:9> col:9 'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &'
| |-CXXConstructorDecl 0x2c31a680 <col:9> col:9 implicit constexpr  'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &&) noexcept' inline
| | `-ParmVarDecl 0x2c31a730 <col:9> col:9 'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &&'
| `-CXXConstructorDecl 0x2c33a560 <col:9> col:9 implicit  'void (void) noexcept' inline
|-FieldDecl 0x2be70b10 <col:9> col:9 implicit referenced 'union (anonymous union at /usr/include/c++/v1/string:1289:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)'
|-IndirectFieldDecl 0x2be70b50 <line:1291:27> col:27 implicit __size_ 'unsigned char'
| |-Field 0x2be70b10 '' 'union (anonymous union at /usr/include/c++/v1/string:1289:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)'
| `-Field 0x2be70aa0 '__size_' 'unsigned char'
|-IndirectFieldDecl 0x2be70b80 <line:1292:24> col:24 implicit __lx 'value_type':'char'
| |-Field 0x2be70b10 '' 'union (anonymous union at /usr/include/c++/v1/string:1289:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)'
| `-Field 0x2be70ae0 '__lx' 'value_type':'char'
|-FieldDecl 0x2be70c20 <line:1294:9, col:37> col:20 referenced __data_ 'value_type [11]'
|-CXXDestructorDecl 0x2c04cc30 <line:1287:12> col:12 implicit ~__short 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31a770 <col:12> col:12 implicit constexpr __short 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &)' inline noexcept-unevaluated 0x2c31a770
| `-ParmVarDecl 0x2c31a820 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &'
|-CXXConstructorDecl 0x2c31a880 <col:12> col:12 implicit constexpr __short 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &&) noexcept' inline
| `-ParmVarDecl 0x2c31a930 <col:12> col:12 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &&'
`-CXXConstructorDecl 0x2c31b1d0 <col:12> col:12 implicit __short 'void (void) noexcept' inline

Layout: <CGRecordLayout
  LLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { %union.anon.3, [11 x i8] }
  NonVirtualBaseLLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { %union.anon.3, [11 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2be70eb0 </usr/include/c++/v1/string:1303:5, line:1306:5> line:1303:12 struct __raw definition
|-CXXRecordDecl 0x2be72680 prev 0x2be70eb0 <col:5, col:12> col:12 implicit struct __raw
|-FieldDecl 0x2be72750 <line:1305:9, col:36> col:19 referenced __words 'size_type [3]'
|-CXXDestructorDecl 0x2c04ccd0 <line:1303:12> col:12 implicit ~__raw 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31a9a0 <col:12> col:12 implicit constexpr __raw 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &)' inline noexcept-unevaluated 0x2c31a9a0
| `-ParmVarDecl 0x2c31aa50 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &'
|-CXXConstructorDecl 0x2c31aab0 <col:12> col:12 implicit constexpr __raw 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &&) noexcept' inline
| `-ParmVarDecl 0x2c31ab60 <col:12> col:12 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &&'
`-CXXConstructorDecl 0x2c31b260 <col:12> col:12 implicit __raw 'void (void) noexcept' inline

Layout: <CGRecordLayout
  LLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__raw" = type { [3 x i32] }
  NonVirtualBaseLLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__raw" = type { [3 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2be724c0 </usr/include/c++/v1/string:1310:9, line:1315:9> line:1310:9 union definition
|-FieldDecl 0x2be725b0 <line:1312:13, col:20> col:20 referenced __l 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
|-FieldDecl 0x2be725f0 <line:1313:13, col:21> col:21 referenced __s 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
|-FieldDecl 0x2be72780 <line:1314:13, col:19> col:19 referenced __r 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw'
|-CXXDestructorDecl 0x2c04cd70 <line:1310:9> col:9 implicit ~ 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c319ff0 <col:9> col:9 implicit constexpr  'void (const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &)' inline noexcept-unevaluated 0x2c319ff0
| `-ParmVarDecl 0x2c31a0a0 <col:9> col:9 'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &'
|-CXXConstructorDecl 0x2c31a100 <col:9> col:9 implicit used constexpr  'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&) noexcept' inline
| |-ParmVarDecl 0x2c31a1b0 <col:9> col:9 'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&'
| `-CompoundStmt 0x2c31b580 <col:9>
`-CXXConstructorDecl 0x2c31b4f0 <col:9> col:9 implicit  'void (void) noexcept' inline

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x2be70f20 </usr/include/c++/v1/string:1308:5, line:1316:5> line:1308:12 struct __rep definition
|-CXXRecordDecl 0x2be72470 prev 0x2be70f20 <col:5, col:12> col:12 implicit struct __rep
|-CXXRecordDecl 0x2be724c0 <line:1310:9, line:1315:9> line:1310:9 union definition
| |-FieldDecl 0x2be725b0 <line:1312:13, col:20> col:20 referenced __l 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
| |-FieldDecl 0x2be725f0 <line:1313:13, col:21> col:21 referenced __s 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
| |-FieldDecl 0x2be72780 <line:1314:13, col:19> col:19 referenced __r 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw'
| |-CXXDestructorDecl 0x2c04cd70 <line:1310:9> col:9 implicit ~ 'void (void) noexcept' inline
| |-CXXConstructorDecl 0x2c319ff0 <col:9> col:9 implicit constexpr  'void (const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &)' inline noexcept-unevaluated 0x2c319ff0
| | `-ParmVarDecl 0x2c31a0a0 <col:9> col:9 'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &'
| |-CXXConstructorDecl 0x2c31a100 <col:9> col:9 implicit used constexpr  'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&) noexcept' inline
| | |-ParmVarDecl 0x2c31a1b0 <col:9> col:9 'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&'
| | `-CompoundStmt 0x2c31b580 <col:9>
| `-CXXConstructorDecl 0x2c31b4f0 <col:9> col:9 implicit  'void (void) noexcept' inline
|-FieldDecl 0x2be727b0 <col:9> col:9 implicit referenced 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
|-IndirectFieldDecl 0x2be727f0 <line:1312:20> col:20 implicit __l 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
| |-Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| `-Field 0x2be725b0 '__l' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
|-IndirectFieldDecl 0x2be72820 <line:1313:21> col:21 implicit __s 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
| |-Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| `-Field 0x2be725f0 '__s' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
|-IndirectFieldDecl 0x2be72850 <line:1314:19> col:19 implicit __r 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw'
| |-Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| `-Field 0x2be72780 '__r' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw'
|-CXXDestructorDecl 0x2c04caf0 <line:1308:12> col:12 implicit ~__rep 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31a1f0 <col:12> col:12 implicit constexpr __rep 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &)' inline noexcept-unevaluated 0x2c31a1f0
| `-ParmVarDecl 0x2c31a2a0 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &'
|-CXXConstructorDecl 0x2c31abc0 <col:12> col:12 implicit used constexpr __rep 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&) noexcept' inline
| |-ParmVarDecl 0x2c31ac70 <col:12> col:12 used 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&'
| |-CXXCtorInitializer Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| | `-CXXConstructExpr 0x2c31b630 <col:12> 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' 'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&) noexcept'
| |   `-MemberExpr 0x2c31b4d0 <col:12> 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' xvalue . 0x2be727b0
| |     `-CXXStaticCastExpr 0x2c31b4b0 <col:12> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' xvalue static_cast<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&> <NoOp>
| |       `-DeclRefExpr 0x2c31b484 <col:12> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue ParmVar 0x2c31ac70 '' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&'
| `-CompoundStmt 0x2c31b678 <col:12>
`-CXXConstructorDecl 0x2c31b0b0 <col:12> col:12 implicit used __rep 'void (void) noexcept' inline
  `-CompoundStmt 0x2c33a5f0 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
  NonVirtualBaseLLVMType:%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2be73200 </usr/include/c++/v1/memory:2120:1, line:2211:1> line:2121:7 class __libcpp_compressed_pair_imp definition
|-private 'class std::__1::allocator<char>':'class std::__1::allocator<char>'
|-TemplateArgument type 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
|-TemplateArgument type 'class std::__1::allocator<char>'
|-TemplateArgument integral 2
|-CXXRecordDecl 0x2be734f0 prev 0x2be73200 <col:1, col:7> col:7 implicit class __libcpp_compressed_pair_imp
|-AccessSpecDecl 0x2be73540 <line:2124:1, col:8> col:1 private
|-FieldDecl 0x2be73560 <line:2125:5, col:9> col:9 referenced __first_ 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
|-AccessSpecDecl 0x2be73590 <line:2126:1, col:7> col:1 public
|-TypedefDecl 0x2be735b0 <line:2127:5, col:17> col:17 referenced _T1_param 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
|-TypedefDecl 0x2be735e0 <line:2128:5, col:17> col:17 referenced _T2_param 'class std::__1::allocator<char>':'class std::__1::allocator<char>'
|-TypedefDecl 0x2be738f0 <line:2130:5, col:51> col:51 referenced _T1_reference 'typename remove_reference<struct __rep>::type &'
|-TypedefDecl 0x2be73950 <line:2131:5, col:18> col:18 referenced _T2_reference 'class std::__1::allocator<char> &'
|-TypedefDecl 0x2be73a60 <line:2133:5, col:57> col:57 referenced _T1_const_reference 'const typename remove_reference<struct __rep>::type &'
|-TypedefDecl 0x2be73ac0 <line:2134:5, col:24> col:24 referenced _T2_const_reference 'const class std::__1::allocator<char> &'
|-CXXConstructorDecl 0x2be73b10 <line:2136:5, col:99> col:67 used __libcpp_compressed_pair_imp 'void (void)'
| |-CXXCtorInitializer 'class std::__1::allocator<char>':'class std::__1::allocator<char>'
| | `-CXXConstructExpr 0x2c33a518 <col:67> 'class std::__1::allocator<char>':'class std::__1::allocator<char>' 'void (void) noexcept'
| |-CXXCtorInitializer Field 0x2be73560 '__first_' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
| | `-CXXConstructExpr 0x2c33a600 <col:67> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' 'void (void) noexcept'
| |-CompoundStmt 0x2bc16570 <col:98, col:99>
| `-AlwaysInlineAttr 0x2be73bb0 <col:47> always_inline
|-CXXConstructorDecl 0x2be73ca0 <line:2137:5, col:76> col:76 __libcpp_compressed_pair_imp 'void (_T1_param)'
| |-ParmVarDecl 0x2be73c00 <col:105, col:115> col:115 __t1 '_T1_param':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
| `-AlwaysInlineAttr 0x2be73d20 <col:47> always_inline
|-CXXConstructorDecl 0x2be73e10 <line:2139:5, col:76> col:76 __libcpp_compressed_pair_imp 'void (_T2_param)'
| |-ParmVarDecl 0x2be73d70 <col:105, col:115> col:115 __t2 '_T2_param':'class std::__1::allocator<char>'
| `-AlwaysInlineAttr 0x2be73e90 <col:47> always_inline
|-CXXConstructorDecl 0x2be73fb0 <line:2141:5, col:67> col:67 __libcpp_compressed_pair_imp 'void (_T1_param, _T2_param)' noexcept-uninstantiated 0x2bc15260
| |-ParmVarDecl 0x2be73ec0 <col:96, col:106> col:106 __t1 '_T1_param':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
| |-ParmVarDecl 0x2be73f00 <col:112, col:122> col:122 __t2 '_T2_param':'class std::__1::allocator<char>'
| `-AlwaysInlineAttr 0x2be74060 <col:47> always_inline
|-FunctionTemplateDecl 0x2be747e0 <line:2184:5, line:2186:9> col:9 __libcpp_compressed_pair_imp
| |-TemplateTypeParmDecl 0x2be74090 <line:2184:15, col:24> col:24 class ... _Args1
| |-TemplateTypeParmDecl 0x2be740e0 <col:32, col:41> col:41 class ... _Args2
| |-NonTypeTemplateParmDecl 0x2be74130 <col:49, col:59> col:59 referenced 'size_t':'unsigned int' ... _I1
| |-NonTypeTemplateParmDecl 0x2be74170 <col:64, col:74> col:74 referenced 'size_t':'unsigned int' ... _I2
| `-CXXConstructorDecl 0x2be74770 <line:2185:9, line:2186:9> col:9 __libcpp_compressed_pair_imp 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>, __tuple_indices<_I1...>, __tuple_indices<_I2...>)'
|   |-ParmVarDecl 0x2be741d0 <col:38, col:60> col:60 __pc 'struct std::__1::piecewise_construct_t'
|   |-ParmVarDecl 0x2be74300 <line:2187:38, col:55> col:55 __first_args 'tuple<_Args1...>'
|   |-ParmVarDecl 0x2be74430 <line:2188:38, col:55> col:55 __second_args 'tuple<_Args2...>'
|   |-ParmVarDecl 0x2be74550 <line:2189:38, col:60> col:61 '__tuple_indices<_I1...>'
|   |-ParmVarDecl 0x2be746a0 <line:2190:38, col:60> col:61 '__tuple_indices<_I2...>'
|   `-AlwaysInlineAttr 0x2be74820 <line:2185:51> always_inline
|-CXXMethodDecl 0x2be74900 <line:2198:5, col:115> col:81 used first '_T1_reference (void) noexcept'
| |-CompoundStmt 0x2c31c5d0 <col:98, col:115>
| | `-ReturnStmt 0x2c31c5c0 <col:99, col:106>
| |   `-MemberExpr 0x2c31c5a0 <col:106> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue ->__first_ 0x2be73560
| |     `-CXXThisExpr 0x2c31c590 <col:106> 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> *' this
| `-AlwaysInlineAttr 0x2be74970 <col:47> always_inline
|-CXXMethodDecl 0x2be74a00 <line:2199:5, col:127> col:87 used first '_T1_const_reference (void) const noexcept'
| |-CompoundStmt 0x2c33c320 <col:110, col:127>
| | `-ReturnStmt 0x2c33c310 <col:111, col:118>
| |   `-MemberExpr 0x2c33c2f0 <col:118> 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue ->__first_ 0x2be73560
| |     `-CXXThisExpr 0x2c33c2e0 <col:118> 'const class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> *' this
| `-AlwaysInlineAttr 0x2be74a70 <col:47> always_inline
|-CXXMethodDecl 0x2be74b00 <line:2201:5, col:113> col:81 second '_T2_reference (void) noexcept'
| `-AlwaysInlineAttr 0x2be74b70 <col:47> always_inline
|-CXXMethodDecl 0x2be74c00 <line:2202:5, col:125> col:87 second '_T2_const_reference (void) const noexcept'
| `-AlwaysInlineAttr 0x2be74c70 <col:47> always_inline
|-CXXMethodDecl 0x2be74d60 <line:2204:5, line:2210:5> line:2204:72 swap 'void (class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &)' noexcept-uninstantiated 0x2bc16090
| |-ParmVarDecl 0x2be74cd0 <col:77, col:107> col:107 __x 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &'
| `-AlwaysInlineAttr 0x2be74e00 <col:47> always_inline
|-CXXDestructorDecl 0x2c04c9c0 <line:2121:7> col:7 implicit ~__libcpp_compressed_pair_imp 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31acb0 <col:7> col:7 implicit constexpr __libcpp_compressed_pair_imp 'void (const class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &)' inline noexcept-unevaluated 0x2c31acb0
| `-ParmVarDecl 0x2c31ad60 <col:7> col:7 'const class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &'
`-CXXConstructorDecl 0x2c31ade0 <col:7> col:7 implicit used constexpr __libcpp_compressed_pair_imp 'void (class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &&) noexcept' inline
  |-ParmVarDecl 0x2c31ae90 <col:7> col:7 used 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &&'
  |-CXXCtorInitializer 'class std::__1::allocator<char>':'class std::__1::allocator<char>'
  | `-CXXConstructExpr 0x2c31b3c8 <col:7> 'class std::__1::allocator<char>':'class std::__1::allocator<char>' 'void (class std::__1::allocator<char> &&) noexcept'
  |   `-ImplicitCastExpr 0x2c31b390 <col:7> 'class std::__1::allocator<char>':'class std::__1::allocator<char>' xvalue <UncheckedDerivedToBase (allocator)>
  |     `-CXXStaticCastExpr 0x2c31b370 <col:7> 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>' xvalue static_cast<class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &&> <NoOp>
  |       `-DeclRefExpr 0x2c31b348 <col:7> 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>' lvalue ParmVar 0x2c31ae90 '' 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &&'
  |-CXXCtorInitializer Field 0x2be73560 '__first_' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
  | `-CXXConstructExpr 0x2c31b6b0 <col:7> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&) noexcept'
  |   `-MemberExpr 0x2c31b458 <col:7> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' xvalue .__first_ 0x2be73560
  |     `-CXXStaticCastExpr 0x2c31b438 <col:7> 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>' xvalue static_cast<class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &&> <NoOp>
  |       `-DeclRefExpr 0x2c31b410 <col:7> 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>' lvalue ParmVar 0x2c31ae90 '' 'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &&'
  `-CompoundStmt 0x2c31b6f8 <col:7>

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::__libcpp_compressed_pair_imp" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
  NonVirtualBaseLLVMType:%"class.std::__1::__libcpp_compressed_pair_imp" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2be70fa0 </usr/include/c++/v1/memory:2300:1, line:2380:1> line:2301:7 class __compressed_pair definition
|-private '__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >':'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>'
|-TemplateArgument type 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
|-TemplateArgument type 'class std::__1::allocator<char>'
|-CXXRecordDecl 0x2be74e60 prev 0x2be70fa0 <col:1, col:7> col:7 implicit class __compressed_pair
|-TypedefDecl 0x2be75400 <line:2304:5, col:52> col:52 base '__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >':'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>'
|-AccessSpecDecl 0x2be75430 <line:2305:1, col:7> col:1 public
|-TypedefDecl 0x2be754b0 <line:2306:5, col:38> col:38 _T1_param 'typename base::_T1_param':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
|-TypedefDecl 0x2be75520 <line:2307:5, col:38> col:38 _T2_param 'typename base::_T2_param':'class std::__1::allocator<char>'
|-TypedefDecl 0x2be75590 <line:2309:5, col:42> col:42 _T1_reference 'typename base::_T1_reference':'typename remove_reference<struct __rep>::type &'
|-TypedefDecl 0x2be75600 <line:2310:5, col:42> col:42 _T2_reference 'typename base::_T2_reference':'class std::__1::allocator<char> &'
|-TypedefDecl 0x2be75670 <line:2312:5, col:48> col:48 _T1_const_reference 'typename base::_T1_const_reference':'const typename remove_reference<struct __rep>::type &'
|-TypedefDecl 0x2be756e0 <line:2313:5, col:48> col:48 _T2_const_reference 'typename base::_T2_const_reference':'const class std::__1::allocator<char> &'
|-CXXConstructorDecl 0x2be75730 <line:2315:5, col:88> col:67 used __compressed_pair 'void (void)'
| |-CXXCtorInitializer '__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >':'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>'
| | `-CXXConstructExpr 0x2c33a490 <col:67> '__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >':'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>' 'void (void)'
| |-CompoundStmt 0x2bc1c470 <col:87, col:88>
| `-AlwaysInlineAttr 0x2be757d0 <col:47> always_inline
|-CXXConstructorDecl 0x2be758a0 <line:2316:5, col:76> col:76 __compressed_pair 'void (_T1_param)'
| |-ParmVarDecl 0x2be75820 <col:94, col:104> col:104 __t1 '_T1_param':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
| `-AlwaysInlineAttr 0x2be75920 <col:47> always_inline
|-CXXConstructorDecl 0x2be759f0 <line:2318:5, col:76> col:76 __compressed_pair 'void (_T2_param)'
| |-ParmVarDecl 0x2be75970 <col:94, col:104> col:104 __t2 '_T2_param':'class std::__1::allocator<char>'
| `-AlwaysInlineAttr 0x2be75a70 <col:47> always_inline
|-CXXConstructorDecl 0x2be75b60 <line:2320:5, col:67> col:67 __compressed_pair 'void (_T1_param, _T2_param)'
| |-ParmVarDecl 0x2be75aa0 <col:85, col:95> col:95 __t1 '_T1_param':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep'
| |-ParmVarDecl 0x2be75ae0 <col:101, col:111> col:111 __t2 '_T2_param':'class std::__1::allocator<char>'
| `-AlwaysInlineAttr 0x2be75be0 <col:47> always_inline
|-FunctionTemplateDecl 0x2be76050 <line:2359:5, line:2361:9> col:9 __compressed_pair
| |-TemplateTypeParmDecl 0x2be75c10 <line:2359:15, col:24> col:24 class ... _Args1
| |-TemplateTypeParmDecl 0x2be75c60 <col:32, col:41> col:41 class ... _Args2
| `-CXXConstructorDecl 0x2be75fe0 <line:2360:9, line:2361:9> col:9 __compressed_pair 'void (struct std::__1::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>)'
|   |-ParmVarDecl 0x2be75cc0 <col:27, col:49> col:49 __pc 'struct std::__1::piecewise_construct_t'
|   |-ParmVarDecl 0x2be75df0 <col:55, col:72> col:72 __first_args 'tuple<_Args1...>'
|   |-ParmVarDecl 0x2be75f20 <line:2362:55, col:72> col:72 __second_args 'tuple<_Args2...>'
|   `-AlwaysInlineAttr 0x2be76090 <line:2360:51> always_inline
|-CXXMethodDecl 0x2be76150 <line:2370:5, col:120> col:81 used first '_T1_reference (void) noexcept'
| |-CompoundStmt 0x2c31c578 <col:98, col:120>
| | `-ReturnStmt 0x2c31c568 <col:99, col:118>
| |   `-CXXMemberCallExpr 0x2c31c518 <col:106, col:118> 'typename remove_reference<struct __rep>::type':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue
| |     `-MemberExpr 0x2c31c4e8 <col:106, col:112> '<bound member function type>' ->first 0x2be74900
| |       `-ImplicitCastExpr 0x2c31c558 <col:106> 'base *' <UncheckedDerivedToBase (__libcpp_compressed_pair_imp)>
| |         `-CXXThisExpr 0x2c31c4d8 <col:106> 'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > *' this
| `-AlwaysInlineAttr 0x2be761c0 <col:47> always_inline
|-CXXMethodDecl 0x2be76230 <line:2371:5, col:132> col:87 used first '_T1_const_reference (void) const noexcept'
| |-CompoundStmt 0x2c33c2c8 <col:110, col:132>
| | `-ReturnStmt 0x2c33c2b8 <col:111, col:130>
| |   `-CXXMemberCallExpr 0x2c33c260 <col:118, col:130> 'const typename remove_reference<struct __rep>::type':'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue
| |     `-MemberExpr 0x2c33c230 <col:118, col:124> '<bound member function type>' ->first 0x2be74a00
| |       `-ImplicitCastExpr 0x2c33c2a8 <col:118> 'const class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> *' <NoOp>
| |         `-ImplicitCastExpr 0x2c33c298 <col:118> 'base *' <UncheckedDerivedToBase (__libcpp_compressed_pair_imp)>
| |           `-CXXThisExpr 0x2c33c220 <col:118> 'const class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > *' this
| `-AlwaysInlineAttr 0x2be762a0 <col:47> always_inline
|-CXXMethodDecl 0x2be76310 <line:2373:5, col:122> col:81 second '_T2_reference (void) noexcept'
| `-AlwaysInlineAttr 0x2be76380 <col:47> always_inline
|-CXXMethodDecl 0x2be763f0 <line:2374:5, col:134> col:87 second '_T2_const_reference (void) const noexcept'
| `-AlwaysInlineAttr 0x2be76460 <col:47> always_inline
|-CXXMethodDecl 0x2be76550 <line:2376:5, line:2379:26> line:2376:72 swap 'void (class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &)' noexcept-uninstantiated 0x2bc1c1c0
| |-ParmVarDecl 0x2be764c0 <col:77, col:96> col:96 __x 'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &'
| `-AlwaysInlineAttr 0x2be765f0 <col:47> always_inline
|-CXXDestructorDecl 0x2c04c910 <line:2301:7> col:7 implicit ~__compressed_pair 'void (void) noexcept' inline
|-CXXConstructorDecl 0x2c31aed0 <col:7> col:7 implicit constexpr __compressed_pair 'void (const class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &)' inline noexcept-unevaluated 0x2c31aed0
| `-ParmVarDecl 0x2c31af80 <col:7> col:7 'const class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &'
`-CXXConstructorDecl 0x2c31afc0 <col:7> col:7 implicit used constexpr __compressed_pair 'void (class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&) noexcept' inline
  |-ParmVarDecl 0x2c31b070 <col:7> col:7 used 'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&'
  |-CXXCtorInitializer '__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >':'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>'
  | `-CXXConstructExpr 0x2c31b730 <col:7> '__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >':'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>' 'void (class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2> &&) noexcept'
  |   `-ImplicitCastExpr 0x2c31b338 <col:7> '__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >':'class std::__1::__libcpp_compressed_pair_imp<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char>, 2>' xvalue <UncheckedDerivedToBase (__libcpp_compressed_pair_imp)>
  |     `-CXXStaticCastExpr 0x2c31b318 <col:7> 'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' xvalue static_cast<class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&> <NoOp>
  |       `-DeclRefExpr 0x2c31b2ec <col:7> 'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' lvalue ParmVar 0x2c31b070 '' 'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&'
  `-CompoundStmt 0x2c31b7c8 <col:7>

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::__compressed_pair" = type { %"class.std::__1::__libcpp_compressed_pair_imp" }
  NonVirtualBaseLLVMType:%"class.std::__1::__compressed_pair" = type { %"class.std::__1::__libcpp_compressed_pair_imp" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x2b8e5da0 parent 0x2b93ac40 </usr/include/c++/v1/string:4243:1, col:89> col:72 class basic_string definition
|-private '__basic_string_common<true>':'class std::__1::__basic_string_common<true>'
|-TemplateArgument type 'char'
|-TemplateArgument type 'struct std::__1::char_traits<char>'
|-TemplateArgument type 'class std::__1::allocator<char>'
|-TypeVisibilityAttr 0x2be59b20 <col:39, col:68> Default
|-CXXRecordDecl 0x2be59be0 prev 0x2b8e5da0 <line:1204:1, col:56> col:56 implicit class basic_string
|-AccessSpecDecl 0x2be59c30 <line:1207:1, col:7> col:1 public
|-TypedefDecl 0x2be59c50 <line:1208:5, col:26> col:26 __self 'class std::__1::basic_string<char>'
|-TypedefDecl 0x2be59ca0 <line:1209:5, col:21> col:21 traits_type 'struct std::__1::char_traits<char>':'struct std::__1::char_traits<char>'
|-TypedefDecl 0x2be59d30 <line:1210:5, col:45> col:45 referenced value_type 'typename traits_type::char_type':'char'
|-TypedefDecl 0x2be59d80 <line:1211:5, col:24> col:24 allocator_type 'class std::__1::allocator<char>':'class std::__1::allocator<char>'
|-TypedefDecl 0x2be59ed0 <line:1212:5, col:46> col:46 __alloc_traits 'allocator_traits<allocator_type>':'struct std::__1::allocator_traits<class std::__1::allocator<char> >'
|-TypedefDecl 0x2be6f180 <line:1213:5, col:48> col:48 size_type 'typename __alloc_traits::size_type':'unsigned int'
|-TypedefDecl 0x2be6f1f0 <line:1214:5, col:54> col:54 difference_type 'typename __alloc_traits::difference_type':'int'
|-TypedefDecl 0x2be6f260 <line:1215:5, col:25> col:25 reference 'value_type &'
|-TypedefDecl 0x2be6f2c0 <line:1216:5, col:31> col:31 const_reference 'const value_type &'
|-TypedefDecl 0x2be6f330 <line:1217:5, col:46> col:46 pointer 'typename __alloc_traits::pointer':'char *'
|-TypedefDecl 0x2be6f3b0 <line:1218:5, col:52> col:52 const_pointer 'typename __alloc_traits::const_pointer':'const char *'
|-StaticAssertDecl 0x2be6f6c0 <line:1220:5, col:92> col:5
| |-DeclRefExpr 0x2be6f68c <col:19, col:39> 'const _Bool':'const _Bool' lvalue Var 0x2bd0d7c0 'value' 'const _Bool':'const _Bool'
| `-StringLiteral 0x2bd88d60 <col:46> 'const char [45]' lvalue "Character type of basic_string must be a POD"
|-StaticAssertDecl 0x2be6f9d0 <line:1221:5, line:1222:74> line:1221:5
| |-ParenExpr 0x2be6f9a0 <col:19, col:54> 'const _Bool':'const _Bool' lvalue
| | `-DeclRefExpr 0x2be6f97c <col:20, col:49> 'const _Bool':'const _Bool' lvalue Var 0x2bd0d7c0 'value' 'const _Bool':'const _Bool'
| `-StringLiteral 0x2bd88f80 <line:1222:19> 'const char [54]' lvalue "traits_type::char_type must be the same type as CharT"
|-StaticAssertDecl 0x2be6fb10 <line:1223:5, line:1224:74> line:1223:5
| |-ParenExpr 0x2be6fae8 <col:19, col:83> 'const _Bool':'const _Bool' lvalue
| | `-DeclRefExpr 0x2be6fac8 <col:20, col:78> 'const _Bool':'const _Bool' lvalue Var 0x2bd0d7c0 'value' 'const _Bool':'const _Bool'
| `-StringLiteral 0x2bd891dc <line:1224:19> 'const char [54]' lvalue "Allocator::value_type must be same type as value_type"
|-TypedefDecl 0x2be6fc50 <line:1229:5, col:34> col:34 iterator '__wrap_iter<pointer>':'class std::__1::__wrap_iter<char *>'
|-TypedefDecl 0x2be6fda0 <line:1230:5, col:40> col:40 const_iterator '__wrap_iter<const_pointer>':'class std::__1::__wrap_iter<const char *>'
|-TypedefDecl 0x2be6ff10 <line:1232:5, col:50> col:50 reverse_iterator 'std::__1::reverse_iterator<iterator>':'class std::__1::reverse_iterator<class std::__1::__wrap_iter<char *> >'
|-TypedefDecl 0x2be70080 <line:1233:5, col:56> col:56 const_reverse_iterator 'std::__1::reverse_iterator<const_iterator>':'class std::__1::reverse_iterator<class std::__1::__wrap_iter<const char *> >'
|-AccessSpecDecl 0x2be700b0 <line:1235:1, col:8> col:1 private
|-CXXRecordDecl 0x2be700d0 <line:1269:5, line:1274:5> line:1269:12 struct __long definition
| |-CXXRecordDecl 0x2be70360 prev 0x2be700d0 <col:5, col:12> col:12 implicit struct __long
| |-FieldDecl 0x2be703d0 <line:1271:9, col:19> col:19 __cap_ 'size_type':'unsigned int'
| |-FieldDecl 0x2be70410 <line:1272:9, col:19> col:19 __size_ 'size_type':'unsigned int'
| |-FieldDecl 0x2be70450 <line:1273:9, col:17> col:17 referenced __data_ 'pointer':'char *'
| |-CXXDestructorDecl 0x2c04cb90 <line:1269:12> col:12 implicit ~__long 'void (void) noexcept' inline
| |-CXXConstructorDecl 0x2c31a310 <col:12> col:12 implicit constexpr __long 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &)' inline noexcept-unevaluated 0x2c31a310
| | `-ParmVarDecl 0x2c31a3c0 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &'
| |-CXXConstructorDecl 0x2c31a420 <col:12> col:12 implicit constexpr __long 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &&) noexcept' inline
| | `-ParmVarDecl 0x2c31a4d0 <col:12> col:12 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long &&'
| `-CXXConstructorDecl 0x2c31b140 <col:12> col:12 implicit __long 'void (void) noexcept' inline
|-EnumDecl 0x2be70140 <line:1280:5> col:5
| `-EnumConstantDecl 0x2be701b0 <col:11, col:26> col:11 referenced __short_mask 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1280:5)'
|   `-ImplicitCastExpr 0x2be701e0 <col:26> 'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x2bd89a10 <col:26> 'int' 1
|-EnumDecl 0x2be701f0 <line:1281:5> col:5
| `-EnumConstantDecl 0x2be70260 <col:11, col:25> col:11 __long_mask 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1281:5)'
|   `-ImplicitCastExpr 0x2be70290 <col:25> 'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x2bd89ac0 <col:25> 'unsigned long' 1
|-EnumDecl 0x2be702a0 <line:1284:5> col:5
| `-EnumConstantDecl 0x2be706a0 <col:11, line:1285:65> line:1284:11 referenced __min_cap 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1284:5)'
|   `-ConditionalOperator 0x2be705e0 <col:23, line:1285:65> 'unsigned int'
|     |-BinaryOperator 0x2be70520 <line:1284:23, col:65> '_Bool' '>'
|     | |-BinaryOperator 0x2be704f8 <col:23, col:61> 'unsigned int' '/'
|     | | |-ParenExpr 0x2be704c0 <col:23, col:42> 'unsigned int'
|     | | | `-BinaryOperator 0x2be704a8 <col:24, col:41> 'unsigned int' '-'
|     | | |   |-UnaryExprOrTypeTraitExpr 0x2be70480 <col:24, col:37> 'unsigned int' sizeof 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
|     | | |   `-ImplicitCastExpr 0x2be70498 <col:41> 'unsigned int' <IntegralCast>
|     | | |     `-IntegerLiteral 0x2bd89b90 <col:41> 'int' 1
|     | | `-UnaryExprOrTypeTraitExpr 0x2be704e0 <col:44, col:61> 'unsigned int' sizeof 'value_type':'char'
|     | `-ImplicitCastExpr 0x2be70510 <col:65> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x2bd89c20 <col:65> 'int' 2
|     |-BinaryOperator 0x2be705b8 <line:1285:23, col:61> 'unsigned int' '/'
|     | |-ParenExpr 0x2be70580 <col:23, col:42> 'unsigned int'
|     | | `-BinaryOperator 0x2be70568 <col:24, col:41> 'unsigned int' '-'
|     | |   |-UnaryExprOrTypeTraitExpr 0x2be70540 <col:24, col:37> 'unsigned int' sizeof 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
|     | |   `-ImplicitCastExpr 0x2be70558 <col:41> 'unsigned int' <IntegralCast>
|     | |     `-IntegerLiteral 0x2bd89c80 <col:41> 'int' 1
|     | `-UnaryExprOrTypeTraitExpr 0x2be705a0 <col:44, col:61> 'unsigned int' sizeof 'value_type':'char'
|     `-ImplicitCastExpr 0x2be705d0 <col:65> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x2bd89d10 <col:65> 'int' 2
|-CXXRecordDecl 0x2be706d0 <line:1287:5, line:1295:5> line:1287:12 struct __short definition
| |-CXXRecordDecl 0x2be70960 prev 0x2be706d0 <col:5, col:12> col:12 implicit struct __short
| |-CXXRecordDecl 0x2be709b0 <line:1289:9, line:1293:9> line:1289:9 union definition
| | |-FieldDecl 0x2be70aa0 <line:1291:13, col:27> col:27 referenced __size_ 'unsigned char'
| | |-FieldDecl 0x2be70ae0 <line:1292:13, col:24> col:24 __lx 'value_type':'char'
| | |-CXXDestructorDecl 0x2c04ce10 <line:1289:9> col:9 implicit ~ 'void (void) noexcept' inline
| | |-CXXConstructorDecl 0x2c31a570 <col:9> col:9 implicit constexpr  'void (const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &)' inline noexcept-unevaluated 0x2c31a570
| | | `-ParmVarDecl 0x2c31a620 <col:9> col:9 'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &'
| | |-CXXConstructorDecl 0x2c31a680 <col:9> col:9 implicit constexpr  'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &&) noexcept' inline
| | | `-ParmVarDecl 0x2c31a730 <col:9> col:9 'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9) &&'
| | `-CXXConstructorDecl 0x2c33a560 <col:9> col:9 implicit  'void (void) noexcept' inline
| |-FieldDecl 0x2be70b10 <col:9> col:9 implicit referenced 'union (anonymous union at /usr/include/c++/v1/string:1289:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)'
| |-IndirectFieldDecl 0x2be70b50 <line:1291:27> col:27 implicit __size_ 'unsigned char'
| | |-Field 0x2be70b10 '' 'union (anonymous union at /usr/include/c++/v1/string:1289:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)'
| | `-Field 0x2be70aa0 '__size_' 'unsigned char'
| |-IndirectFieldDecl 0x2be70b80 <line:1292:24> col:24 implicit __lx 'value_type':'char'
| | |-Field 0x2be70b10 '' 'union (anonymous union at /usr/include/c++/v1/string:1289:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)'
| | `-Field 0x2be70ae0 '__lx' 'value_type':'char'
| |-FieldDecl 0x2be70c20 <line:1294:9, col:37> col:20 referenced __data_ 'value_type [11]'
| |-CXXDestructorDecl 0x2c04cc30 <line:1287:12> col:12 implicit ~__short 'void (void) noexcept' inline
| |-CXXConstructorDecl 0x2c31a770 <col:12> col:12 implicit constexpr __short 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &)' inline noexcept-unevaluated 0x2c31a770
| | `-ParmVarDecl 0x2c31a820 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &'
| |-CXXConstructorDecl 0x2c31a880 <col:12> col:12 implicit constexpr __short 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &&) noexcept' inline
| | `-ParmVarDecl 0x2c31a930 <col:12> col:12 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short &&'
| `-CXXConstructorDecl 0x2c31b1d0 <col:12> col:12 implicit __short 'void (void) noexcept' inline
|-CXXRecordDecl 0x2be70740 <line:1299:5, col:44> col:11 union __ulx definition
| |-CXXRecordDecl 0x2be70870 prev 0x2be70740 <col:5, col:11> col:11 implicit union __ulx
| |-FieldDecl 0x2be708d0 <col:17, col:24> col:24 __lx 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
| `-FieldDecl 0x2be70c50 <col:30, col:38> col:38 __lxx 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
|-EnumDecl 0x2be707b0 <line:1301:5> col:5
| `-EnumConstantDecl 0x2be70e80 <col:11, col:55> col:11 referenced __n_words 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1301:5)'
|   `-BinaryOperator 0x2be70cb8 <col:23, col:55> 'unsigned int' '/'
|     |-UnaryExprOrTypeTraitExpr 0x2be70c80 <col:23, col:35> 'unsigned int' sizeof 'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__ulx'
|     `-UnaryExprOrTypeTraitExpr 0x2be70ca0 <col:39, col:55> 'unsigned int' sizeof 'size_type':'unsigned int'
|-CXXRecordDecl 0x2be70eb0 <line:1303:5, line:1306:5> line:1303:12 struct __raw definition
| |-CXXRecordDecl 0x2be72680 prev 0x2be70eb0 <col:5, col:12> col:12 implicit struct __raw
| |-FieldDecl 0x2be72750 <line:1305:9, col:36> col:19 referenced __words 'size_type [3]'
| |-CXXDestructorDecl 0x2c04ccd0 <line:1303:12> col:12 implicit ~__raw 'void (void) noexcept' inline
| |-CXXConstructorDecl 0x2c31a9a0 <col:12> col:12 implicit constexpr __raw 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &)' inline noexcept-unevaluated 0x2c31a9a0
| | `-ParmVarDecl 0x2c31aa50 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &'
| |-CXXConstructorDecl 0x2c31aab0 <col:12> col:12 implicit constexpr __raw 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &&) noexcept' inline
| | `-ParmVarDecl 0x2c31ab60 <col:12> col:12 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw &&'
| `-CXXConstructorDecl 0x2c31b260 <col:12> col:12 implicit __raw 'void (void) noexcept' inline
|-CXXRecordDecl 0x2be70f20 <line:1308:5, line:1316:5> line:1308:12 struct __rep definition
| |-CXXRecordDecl 0x2be72470 prev 0x2be70f20 <col:5, col:12> col:12 implicit struct __rep
| |-CXXRecordDecl 0x2be724c0 <line:1310:9, line:1315:9> line:1310:9 union definition
| | |-FieldDecl 0x2be725b0 <line:1312:13, col:20> col:20 referenced __l 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
| | |-FieldDecl 0x2be725f0 <line:1313:13, col:21> col:21 referenced __s 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
| | |-FieldDecl 0x2be72780 <line:1314:13, col:19> col:19 referenced __r 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw'
| | |-CXXDestructorDecl 0x2c04cd70 <line:1310:9> col:9 implicit ~ 'void (void) noexcept' inline
| | |-CXXConstructorDecl 0x2c319ff0 <col:9> col:9 implicit constexpr  'void (const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &)' inline noexcept-unevaluated 0x2c319ff0
| | | `-ParmVarDecl 0x2c31a0a0 <col:9> col:9 'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &'
| | |-CXXConstructorDecl 0x2c31a100 <col:9> col:9 implicit used constexpr  'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&) noexcept' inline
| | | |-ParmVarDecl 0x2c31a1b0 <col:9> col:9 'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&'
| | | `-CompoundStmt 0x2c31b580 <col:9>
| | `-CXXConstructorDecl 0x2c31b4f0 <col:9> col:9 implicit  'void (void) noexcept' inline
| |-FieldDecl 0x2be727b0 <col:9> col:9 implicit referenced 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| |-IndirectFieldDecl 0x2be727f0 <line:1312:20> col:20 implicit __l 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
| | |-Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| | `-Field 0x2be725b0 '__l' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long'
| |-IndirectFieldDecl 0x2be72820 <line:1313:21> col:21 implicit __s 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
| | |-Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| | `-Field 0x2be725f0 '__s' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short'
| |-IndirectFieldDecl 0x2be72850 <line:1314:19> col:19 implicit __r 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw'
| | |-Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| | `-Field 0x2be72780 '__r' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw'
| |-CXXDestructorDecl 0x2c04caf0 <line:1308:12> col:12 implicit ~__rep 'void (void) noexcept' inline
| |-CXXConstructorDecl 0x2c31a1f0 <col:12> col:12 implicit constexpr __rep 'void (const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &)' inline noexcept-unevaluated 0x2c31a1f0
| | `-ParmVarDecl 0x2c31a2a0 <col:12> col:12 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &'
| |-CXXConstructorDecl 0x2c31abc0 <col:12> col:12 implicit used constexpr __rep 'void (struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&) noexcept' inline
| | |-ParmVarDecl 0x2c31ac70 <col:12> col:12 used 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&'
| | |-CXXCtorInitializer Field 0x2be727b0 '' 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)'
| | | `-CXXConstructExpr 0x2c31b630 <col:12> 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' 'void (union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9) &&) noexcept'
| | |   `-MemberExpr 0x2c31b4d0 <col:12> 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' xvalue . 0x2be727b0
| | |     `-CXXStaticCastExpr 0x2c31b4b0 <col:12> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' xvalue static_cast<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&> <NoOp>
| | |       `-DeclRefExpr 0x2c31b484 <col:12> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue ParmVar 0x2c31ac70 '' 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep &&'
| | `-CompoundStmt 0x2c31b678 <col:12>
| `-CXXConstructorDecl 0x2c31b0b0 <col:12> col:12 implicit used __rep 'void (void) noexcept' inline
|   `-CompoundStmt 0x2c33a5f0 <col:12>
|-FieldDecl 0x2be76620 <line:1318:5, col:46> col:46 referenced __r_ '__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >'
|-AccessSpecDecl 0x2be76650 <line:1320:1, col:7> col:1 public
|-VarDecl 0x2be76670 <line:1321:5, col:36> col:28 npos 'const size_type':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2be766a8 <col:35, col:36> 'const size_type':'const unsigned int' <IntegralCast>
|   `-UnaryOperator 0x2bd8aaa8 <col:35, col:36> 'int' prefix '-'
|     `-IntegerLiteral 0x2bd8aa90 <col:36> 'int' 1
|-CXXConstructorDecl 0x2be76730 <line:1323:5, col:67> col:67 referenced basic_string 'void (void)' noexcept-uninstantiated 0x2bd8ab30
| `-AlwaysInlineAttr 0x2be767f0 <line:1927:50> always_inline
|-CXXConstructorDecl 0x2be768f0 <line:1325:5, col:76> col:76 basic_string 'void (const allocator_type &)'
| |-ParmVarDecl 0x2be76850 <col:89, col:111> col:111 __a 'const allocator_type &'
| `-AlwaysInlineAttr 0x2be76970 <line:1938:50> always_inline
|-CXXConstructorDecl 0x2be76a10 <line:1326:5> col:5 basic_string 'void (const class std::__1::basic_string<char> &)'
| `-ParmVarDecl 0x2be769b0 <col:18, col:38> col:38 __str 'const class std::__1::basic_string<char> &'
|-CXXConstructorDecl 0x2be76b80 <line:1327:5> col:5 basic_string 'void (const class std::__1::basic_string<char> &, const allocator_type &)'
| |-ParmVarDecl 0x2be76aa0 <col:18, col:38> col:38 __str 'const class std::__1::basic_string<char> &'
| `-ParmVarDecl 0x2be76ae0 <col:45, col:67> col:67 __a 'const allocator_type &'
|-CXXConstructorDecl 0x2be76cd0 <line:2071:1, line:2082:1> line:1330:5 used basic_string 'void (class std::__1::basic_string<char> &&) noexcept(is_nothrow_move_constructible<allocator_type>::value)'
| |-ParmVarDecl 0x2be76c30 <col:18, col:33> col:33 used __str 'class std::__1::basic_string<char> &&'
| |-CXXCtorInitializer '__basic_string_common<true>':'class std::__1::__basic_string_common<true>'
| | `-CXXConstructExpr 0x2c31bb18 <col:5> '__basic_string_common<true>':'class std::__1::__basic_string_common<true>' 'void (void) noexcept'
| |-CXXCtorInitializer Field 0x2be76620 '__r_' '__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >'
| | `-CXXConstructExpr 0x2c31b800 <line:2074:7, col:38> '__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' 'void (class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&) noexcept'
| |   `-CallExpr 0x2c319f08 <col:12, col:37> 'typename remove_reference<class __compressed_pair<struct __rep, class allocator<char> > &>::type':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' xvalue
| |     |-ImplicitCastExpr 0x2c319ef8 <col:12, col:22> 'typename remove_reference<class __compressed_pair<struct __rep, class allocator<char> > &>::type &&(*)(class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&) noexcept' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x2c319e94 <col:12, col:22> 'typename remove_reference<class __compressed_pair<struct __rep, class allocator<char> > &>::type &&(class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&) noexcept' lvalue Function 0x2c319dc0 'move' 'typename remove_reference<class __compressed_pair<struct __rep, class allocator<char> > &>::type &&(class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> > &&) noexcept' (FunctionTemplate 0x2b9f09e0 'move')
| |     `-MemberExpr 0x2c3198f8 <col:27, col:33> '__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' lvalue .__r_ 0x2be76620
| |       `-DeclRefExpr 0x2c3198e0 <col:27> 'class std::__1::basic_string<char>' lvalue ParmVar 0x2be76c30 '__str' 'class std::__1::basic_string<char> &&'
| |-CompoundStmt 0x2c31bbe0 <line:2075:1, line:2082:1>
| | `-CXXMemberCallExpr 0x2c31bbc0 <line:2076:5, col:18> 'void'
| |   `-MemberExpr 0x2c31bba0 <col:5, col:11> '<bound member function type>' .__zero 0x2be840c0
| |     `-DeclRefExpr 0x2c31bb88 <col:5> 'class std::__1::basic_string<char>' lvalue ParmVar 0x2be76c30 '__str' 'class std::__1::basic_string<char> &&'
| `-AlwaysInlineAttr 0x2be76d80 <line:2071:50> always_inline
|-CXXConstructorDecl 0x2be76ea0 <line:1332:5, line:1333:5> col:5 basic_string 'void (class std::__1::basic_string<char> &&, const allocator_type &)'
| |-ParmVarDecl 0x2be76dc0 <col:18, col:33> col:33 __str 'class std::__1::basic_string<char> &&'
| |-ParmVarDecl 0x2be76e00 <col:40, col:62> col:62 __a 'const allocator_type &'
| `-AlwaysInlineAttr 0x2be76f20 <line:2085:50> always_inline
|-CXXConstructorDecl 0x2be77000 <line:1335:5, col:67> col:67 basic_string 'void (const value_type *)'
| |-ParmVarDecl 0x2be76f80 <col:80, col:98> col:98 __s 'const value_type *'
| `-AlwaysInlineAttr 0x2be77080 <line:1997:50> always_inline
|-CXXConstructorDecl 0x2be771a0 <line:1336:5, line:1337:5> col:5 basic_string 'void (const value_type *, const allocator_type &)'
| |-ParmVarDecl 0x2be770c0 <col:18, col:36> col:36 __s 'const value_type *'
| |-ParmVarDecl 0x2be77100 <col:41, col:63> col:63 __a 'const allocator_type &'
| `-AlwaysInlineAttr 0x2be77220 <line:2008:50> always_inline
|-CXXConstructorDecl 0x2be77340 <line:1338:5, line:1339:5> col:5 basic_string 'void (const value_type *, size_type)'
| |-ParmVarDecl 0x2be77260 <col:18, col:36> col:36 __s 'const value_type *'
| |-ParmVarDecl 0x2be772a0 <col:41, col:51> col:51 __n 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be773c0 <line:2020:50> always_inline
|-CXXConstructorDecl 0x2be77540 <line:1340:5, line:1341:5> col:5 basic_string 'void (const value_type *, size_type, const allocator_type &)'
| |-ParmVarDecl 0x2be77400 <col:18, col:36> col:36 __s 'const value_type *'
| |-ParmVarDecl 0x2be77440 <col:41, col:51> col:51 __n 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be77480 <col:56, col:78> col:78 __a 'const allocator_type &'
| `-AlwaysInlineAttr 0x2be775d0 <line:2031:50> always_inline
|-CXXConstructorDecl 0x2be776e0 <line:2130:1, line:2137:1> line:1343:5 used basic_string 'void (size_type, value_type)'
| |-ParmVarDecl 0x2be77600 <col:18, col:28> col:28 used __n 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be77640 <col:33, col:44> col:44 used __c 'value_type':'char'
| |-CXXCtorInitializer '__basic_string_common<true>':'class std::__1::__basic_string_common<true>'
| | `-CXXConstructExpr 0x2c33a208 <col:5> '__basic_string_common<true>':'class std::__1::__basic_string_common<true>' 'void (void) noexcept'
| |-CXXCtorInitializer Field 0x2be76620 '__r_' '__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >'
| | `-CXXConstructExpr 0x2c33a270 <col:5> '__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' 'void (void)'
| |-CompoundStmt 0x2c33a478 <line:2132:1, line:2137:1>
| | `-CXXMemberCallExpr 0x2c33a430 <line:2133:5, col:20> 'void'
| |   |-MemberExpr 0x2c33a410 <col:5> '<bound member function type>' ->__init 0x2be84860
| |   | `-CXXThisExpr 0x2c33a400 <col:5> 'class std::__1::basic_string<char> *' this
| |   |-ImplicitCastExpr 0x2c33a458 <col:12> 'size_type':'unsigned int' <LValueToRValue>
| |   | `-DeclRefExpr 0x2c33a364 <col:12> 'size_type':'unsigned int' lvalue ParmVar 0x2be77600 '__n' 'size_type':'unsigned int'
| |   `-ImplicitCastExpr 0x2c33a468 <col:17> 'value_type':'char' <LValueToRValue>
| |     `-DeclRefExpr 0x2c33a37c <col:17> 'value_type':'char' lvalue ParmVar 0x2be77640 '__c' 'value_type':'char'
| `-AlwaysInlineAttr 0x2be77760 <line:2130:50> always_inline
|-CXXConstructorDecl 0x2be778d0 <line:1344:5, line:1345:5> col:5 basic_string 'void (size_type, value_type, const allocator_type &)'
| |-ParmVarDecl 0x2be77790 <col:18, col:28> col:28 __n 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be777d0 <col:33, col:44> col:44 __c 'value_type':'char'
| |-ParmVarDecl 0x2be77810 <col:49, col:71> col:71 __a 'const allocator_type &'
| `-AlwaysInlineAttr 0x2be77960 <line:2140:50> always_inline
|-CXXConstructorDecl 0x2be77b20 <line:1346:5> col:5 basic_string 'void (const class std::__1::basic_string<char> &, size_type, size_type, const allocator_type &)'
| |-ParmVarDecl 0x2be779a0 <col:18, col:38> col:38 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be779e0 <col:45, col:55> col:55 __pos 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be77a20 <col:62, col:78> col:72 __n 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be77a60 <line:1347:18, col:61> col:40 __a 'const allocator_type &'
|-FunctionTemplateDecl 0x2be77d40 <line:1348:5, line:1350:9> col:9 basic_string
| |-TemplateTypeParmDecl 0x2be77bb0 <line:1348:14, col:20> col:20 class _InputIterator
| `-CXXConstructorDecl 0x2be77cd0 <line:1349:9, line:1350:9> col:9 basic_string 'void (_InputIterator, _InputIterator)'
|   |-ParmVarDecl 0x2be77c10 <col:22, col:37> col:37 __first '_InputIterator'
|   |-ParmVarDecl 0x2be77c50 <col:46, col:61> col:61 __last '_InputIterator'
|   `-AlwaysInlineAttr 0x2be77d70 <line:2225:50> always_inline
|-FunctionTemplateDecl 0x2be78000 <line:1351:5, line:1353:9> col:9 basic_string
| |-TemplateTypeParmDecl 0x2be77df0 <line:1351:14, col:20> col:20 class _InputIterator
| `-CXXConstructorDecl 0x2be77f90 <line:1352:9, line:1353:9> col:9 basic_string 'void (_InputIterator, _InputIterator, const allocator_type &)'
|   |-ParmVarDecl 0x2be77e50 <col:22, col:37> col:37 __first '_InputIterator'
|   |-ParmVarDecl 0x2be77e90 <col:46, col:61> col:61 __last '_InputIterator'
|   |-ParmVarDecl 0x2be77ed0 <col:69, col:91> col:91 __a 'const allocator_type &'
|   `-AlwaysInlineAttr 0x2be78040 <line:2236:50> always_inline
|-CXXConstructorDecl 0x2be78260 <line:1355:5, line:1356:5> col:5 basic_string 'void (initializer_list<value_type>)'
| |-ParmVarDecl 0x2be781c0 <col:18, col:47> col:47 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| `-AlwaysInlineAttr 0x2be782e0 <line:2250:50> always_inline
|-CXXConstructorDecl 0x2be78450 <line:1357:5, line:1358:5> col:5 basic_string 'void (initializer_list<value_type>, const allocator_type &)'
| |-ParmVarDecl 0x2be78370 <col:18, col:47> col:47 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| |-ParmVarDecl 0x2be783b0 <col:53, col:75> col:75 __a 'const allocator_type &'
| `-AlwaysInlineAttr 0x2be784d0 <line:2260:50> always_inline
|-CXXDestructorDecl 0x2be78510 <line:1361:5, col:6> col:5 used ~basic_string 'void (void) noexcept'
|-CXXMethodDecl 0x2be78630 <line:1363:5, col:54> col:19 operator= 'class std::__1::basic_string<char> &(const class std::__1::basic_string<char> &)'
| `-ParmVarDecl 0x2be785c0 <col:29, col:49> col:49 __str 'const class std::__1::basic_string<char> &'
|-CXXMethodDecl 0x2be78740 <line:1365:5, line:1367:133> line:1366:19 operator= 'class std::__1::basic_string<char> &(class std::__1::basic_string<char> &&)' noexcept-uninstantiated 0x2bd8dde0
| |-ParmVarDecl 0x2be786b0 <col:29, col:44> col:44 __str 'class std::__1::basic_string<char> &&'
| `-AlwaysInlineAttr 0x2be787e0 <line:2446:50> always_inline
|-CXXMethodDecl 0x2be788b0 <line:1370:5, col:134> col:81 operator= 'class std::__1::basic_string<char> &(const value_type *)'
| |-ParmVarDecl 0x2be78820 <col:91, col:109> col:109 __s 'const value_type *'
| `-AlwaysInlineAttr 0x2be78920 <col:47> always_inline
|-CXXMethodDecl 0x2be789e0 <line:1371:5, col:43> col:19 operator= 'class std::__1::basic_string<char> &(value_type)'
| `-ParmVarDecl 0x2be78950 <col:29, col:40> col:40 __c 'value_type':'char'
|-CXXMethodDecl 0x2be78b50 <line:1373:5, line:1374:106> col:19 operator= 'class std::__1::basic_string<char> &(initializer_list<value_type>)'
| |-ParmVarDecl 0x2be78ac0 <col:29, col:58> col:58 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| `-AlwaysInlineAttr 0x2be78bc0 <line:1373:47> always_inline
|-CXXMethodDecl 0x2be78c40 <line:1391:5, line:1393:43> line:1392:14 begin 'iterator (void) noexcept'
| `-AlwaysInlineAttr 0x2be78cb0 <line:1391:47> always_inline
|-CXXMethodDecl 0x2be78d30 <line:1394:5, line:1396:49> line:1395:20 begin 'const_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be78da0 <line:1394:47> always_inline
|-CXXMethodDecl 0x2be78de0 <line:1397:5, line:1399:52> line:1398:14 end 'iterator (void) noexcept'
| `-AlwaysInlineAttr 0x2be78e50 <line:1397:47> always_inline
|-CXXMethodDecl 0x2be78e90 <line:1400:5, line:1402:58> line:1401:20 end 'const_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be78f00 <line:1400:47> always_inline
|-CXXMethodDecl 0x2be78f90 <line:1404:5, line:1406:41> line:1405:22 rbegin 'reverse_iterator (void) noexcept'
| `-AlwaysInlineAttr 0x2be79000 <line:1404:47> always_inline
|-CXXMethodDecl 0x2be79090 <line:1407:5, line:1409:47> line:1408:28 rbegin 'const_reverse_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79100 <line:1407:47> always_inline
|-CXXMethodDecl 0x2be79140 <line:1410:5, line:1412:43> line:1411:22 rend 'reverse_iterator (void) noexcept'
| `-AlwaysInlineAttr 0x2be791b0 <line:1410:47> always_inline
|-CXXMethodDecl 0x2be791f0 <line:1413:5, line:1415:49> line:1414:28 rend 'const_reverse_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79260 <line:1413:47> always_inline
|-CXXMethodDecl 0x2be792a0 <line:1417:5, line:1419:25> line:1418:20 cbegin 'const_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79310 <line:1417:47> always_inline
|-CXXMethodDecl 0x2be79350 <line:1420:5, line:1422:23> line:1421:20 cend 'const_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be793c0 <line:1420:47> always_inline
|-CXXMethodDecl 0x2be79400 <line:1423:5, line:1425:26> line:1424:28 crbegin 'const_reverse_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79470 <line:1423:47> always_inline
|-CXXMethodDecl 0x2be794b0 <line:1426:5, line:1428:24> line:1427:28 crend 'const_reverse_iterator (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79520 <line:1426:47> always_inline
|-CXXMethodDecl 0x2be79580 <line:1430:5, line:1431:70> line:1430:77 referenced size 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be795f0 <col:47> always_inline
|-CXXMethodDecl 0x2be79630 <line:1432:5, col:116> col:77 length 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be796a0 <col:47> always_inline
|-CXXMethodDecl 0x2be796e0 <line:1433:5, col:94> col:77 max_size 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79750 <line:3181:50> always_inline
|-CXXMethodDecl 0x2be79790 <line:1434:5, line:1435:66> line:1434:77 referenced capacity 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79800 <col:47> always_inline
|-CXXMethodDecl 0x2be798c0 <line:1437:5, col:46> col:10 resize 'void (size_type, value_type)'
| |-ParmVarDecl 0x2be79830 <col:17, col:27> col:27 __n 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be79870 <col:32, col:43> col:43 __c 'value_type':'char'
|-CXXMethodDecl 0x2be799b0 <line:1438:5, col:121> col:72 referenced resize 'void (size_type)'
| |-ParmVarDecl 0x2be79940 <col:79, col:89> col:89 __n 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be79a20 <col:47> always_inline
|-CXXMethodDecl 0x2be79aa0 <line:1440:5, col:39> col:10 reserve 'void (size_type)'
| `-ParmVarDecl 0x2be79a50 <col:18, col:38> col:28 res_arg 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be79b10 <line:1441:5, line:1442:46> col:10 shrink_to_fit 'void (void) noexcept'
| `-AlwaysInlineAttr 0x2be79b80 <line:1441:47> always_inline
|-CXXMethodDecl 0x2be79bb0 <line:1443:5, line:1444:18> col:10 clear 'void (void) noexcept'
| `-AlwaysInlineAttr 0x2be79c20 <line:3134:50> always_inline
|-CXXMethodDecl 0x2be79c50 <line:1445:5, col:115> col:72 referenced empty '_Bool (void) const noexcept'
| `-AlwaysInlineAttr 0x2be79cc0 <col:47> always_inline
|-CXXMethodDecl 0x2be79da0 <line:1447:5, col:111> col:83 referenced operator[] 'const_reference (size_type) const'
| |-ParmVarDecl 0x2be79d10 <col:94, col:104> col:104 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be79e10 <line:3257:50> always_inline
|-CXXMethodDecl 0x2be79ef0 <line:1448:5, col:103> col:77 referenced operator[] 'reference (size_type)'
| |-ParmVarDecl 0x2be79e60 <col:88, col:98> col:98 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be79f60 <line:3266:50> always_inline
|-CXXMethodDecl 0x2be79fe0 <line:1450:5, col:39> col:21 at 'const_reference (size_type) const'
| `-ParmVarDecl 0x2be79f90 <col:24, col:34> col:34 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7a0b0 <line:1451:5, col:31> col:15 at 'reference (size_type)'
| `-ParmVarDecl 0x2be7a060 <col:18, col:28> col:28 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7a180 <line:1453:5, col:141> col:81 operator+= 'class std::__1::basic_string<char> &(const class std::__1::basic_string<char> &)'
| |-ParmVarDecl 0x2be7a130 <col:92, col:112> col:112 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be7a1f0 <col:47> always_inline
|-CXXMethodDecl 0x2be7a280 <line:1454:5, col:135> col:81 operator+= 'class std::__1::basic_string<char> &(const value_type *)'
| |-ParmVarDecl 0x2be7a230 <col:92, col:110> col:110 __s 'const value_type *'
| `-AlwaysInlineAttr 0x2be7a2f0 <col:47> always_inline
|-CXXMethodDecl 0x2be7a370 <line:1455:5, col:138> col:81 operator+= 'class std::__1::basic_string<char> &(value_type)'
| |-ParmVarDecl 0x2be7a320 <col:92, col:103> col:103 __c 'value_type':'char'
| `-AlwaysInlineAttr 0x2be7a3e0 <col:47> always_inline
|-CXXMethodDecl 0x2be7a4e0 <line:1457:5, col:148> col:81 operator+= 'class std::__1::basic_string<char> &(initializer_list<value_type>)'
| |-ParmVarDecl 0x2be7a470 <col:92, col:121> col:121 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| `-AlwaysInlineAttr 0x2be7a550 <col:47> always_inline
|-CXXMethodDecl 0x2be7a5e0 <line:1460:5, line:1461:51> col:19 append 'class std::__1::basic_string<char> &(const class std::__1::basic_string<char> &)'
| |-ParmVarDecl 0x2be7a590 <col:26, col:46> col:46 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be7a650 <line:2649:50> always_inline
|-CXXMethodDecl 0x2be7a7c0 <line:1462:5, col:88> col:19 append 'class std::__1::basic_string<char> &(const class std::__1::basic_string<char> &, size_type, size_type)'
| |-ParmVarDecl 0x2be7a690 <col:26, col:46> col:46 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be7a6d0 <col:53, col:63> col:63 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7a710 <col:70, col:84> col:80 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7a930 <line:1463:5, col:62> col:19 append 'class std::__1::basic_string<char> &(const value_type *, size_type)'
| |-ParmVarDecl 0x2be7a850 <col:26, col:44> col:44 __s 'const value_type *'
| `-ParmVarDecl 0x2be7a890 <col:49, col:59> col:59 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7aa00 <line:1464:5, col:47> col:19 append 'class std::__1::basic_string<char> &(const value_type *)'
| `-ParmVarDecl 0x2be7a9b0 <col:26, col:44> col:44 __s 'const value_type *'
|-CXXMethodDecl 0x2be7ab60 <line:1465:5, col:55> col:19 append 'class std::__1::basic_string<char> &(size_type, value_type)'
| |-ParmVarDecl 0x2be7aa80 <col:26, col:36> col:36 __n 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7aac0 <col:41, col:52> col:52 __c 'value_type':'char'
|-FunctionTemplateDecl 0x2be7b0a0 <line:1466:5, line:1473:61> col:9 append
| |-TemplateTypeParmDecl 0x2be7abd0 <line:1466:14, col:20> col:20 class _InputIterator
| `-CXXMethodDecl 0x2be7b040 <line:1467:9, line:1473:61> col:9 append 'typename enable_if<__is_input_iterator<_InputIterator>::value && !__is_forward_iterator<_InputIterator>::value, class basic_string<char> &>::type (_InputIterator, _InputIterator)'
|   |-ParmVarDecl 0x2be7af60 <col:16, col:31> col:31 __first '_InputIterator'
|   `-ParmVarDecl 0x2be7afa0 <col:40, col:55> col:55 __last '_InputIterator'
|-FunctionTemplateDecl 0x2be7b4f0 <line:1474:5, line:1480:65> col:9 append
| |-TemplateTypeParmDecl 0x2be7b120 <line:1474:14, col:20> col:20 class _ForwardIterator
| `-CXXMethodDecl 0x2be7b490 <line:1475:9, line:1480:65> col:9 append 'typename enable_if<__is_forward_iterator<_ForwardIterator>::value, class basic_string<char> &>::type (_ForwardIterator, _ForwardIterator)'
|   |-ParmVarDecl 0x2be7b3b0 <col:16, col:33> col:33 __first '_ForwardIterator'
|   `-ParmVarDecl 0x2be7b3f0 <col:42, col:59> col:59 __last '_ForwardIterator'
|-CXXMethodDecl 0x2be7b640 <line:1482:5, line:1483:103> col:19 append 'class std::__1::basic_string<char> &(initializer_list<value_type>)'
| |-ParmVarDecl 0x2be7b5d0 <col:26, col:55> col:55 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| `-AlwaysInlineAttr 0x2be7b6b0 <line:1482:47> always_inline
|-CXXMethodDecl 0x2be7b770 <line:1486:5, col:34> col:10 push_back 'void (value_type)'
| `-ParmVarDecl 0x2be7b6e0 <col:20, col:31> col:31 __c 'value_type':'char'
|-CXXMethodDecl 0x2be7b7e0 <line:1487:5, line:1488:19> col:10 pop_back 'void (void)'
| `-AlwaysInlineAttr 0x2be7b850 <line:3112:50> always_inline
|-CXXMethodDecl 0x2be7b8d0 <line:1489:5, col:83> col:77 front 'reference (void)'
| `-AlwaysInlineAttr 0x2be7b940 <line:3293:50> always_inline
|-CXXMethodDecl 0x2be7b9c0 <line:1490:5, col:91> col:83 front 'const_reference (void) const'
| `-AlwaysInlineAttr 0x2be7ba30 <line:3302:50> always_inline
|-CXXMethodDecl 0x2be7ba70 <line:1491:5, col:82> col:77 back 'reference (void)'
| `-AlwaysInlineAttr 0x2be7bae0 <line:3311:50> always_inline
|-CXXMethodDecl 0x2be7bb20 <line:1492:5, col:90> col:83 back 'const_reference (void) const'
| `-AlwaysInlineAttr 0x2be7bb90 <line:3320:50> always_inline
|-CXXMethodDecl 0x2be7bc20 <line:1494:5, line:1495:51> col:19 assign 'class std::__1::basic_string<char> &(const class std::__1::basic_string<char> &)'
| |-ParmVarDecl 0x2be7bbd0 <col:26, col:46> col:46 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be7bc90 <line:2502:50> always_inline
|-CXXMethodDecl 0x2be7bd20 <line:1497:5, line:1499:52> line:1498:19 assign 'class std::__1::basic_string<char> &(class std::__1::basic_string<char> &&)'
| |-ParmVarDecl 0x2be7bcd0 <col:26, col:41> col:41 str 'class std::__1::basic_string<char> &&'
| `-AlwaysInlineAttr 0x2be7bd90 <line:1497:47> always_inline
|-CXXMethodDecl 0x2be7beb0 <line:1501:5, col:88> col:19 assign 'class std::__1::basic_string<char> &(const class std::__1::basic_string<char> &, size_type, size_type)'
| |-ParmVarDecl 0x2be7bdd0 <col:26, col:46> col:46 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be7be10 <col:53, col:63> col:63 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7be50 <col:70, col:84> col:80 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7bfe0 <line:1502:5, col:62> col:19 assign 'class std::__1::basic_string<char> &(const value_type *, size_type)'
| |-ParmVarDecl 0x2be7bf40 <col:26, col:44> col:44 __s 'const value_type *'
| `-ParmVarDecl 0x2be7bf80 <col:49, col:59> col:59 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7c0b0 <line:1503:5, col:47> col:19 assign 'class std::__1::basic_string<char> &(const value_type *)'
| `-ParmVarDecl 0x2be7c060 <col:26, col:44> col:44 __s 'const value_type *'
|-CXXMethodDecl 0x2be7c1d0 <line:1504:5, col:55> col:19 assign 'class std::__1::basic_string<char> &(size_type, value_type)'
| |-ParmVarDecl 0x2be7c130 <col:26, col:36> col:36 __n 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7c170 <col:41, col:52> col:52 __c 'value_type':'char'
|-FunctionTemplateDecl 0x2be7c680 <line:1505:5, line:1512:61> col:9 assign
| |-TemplateTypeParmDecl 0x2be7c240 <line:1505:14, col:20> col:20 class _InputIterator
| `-CXXMethodDecl 0x2be7c620 <line:1506:9, line:1512:61> col:9 assign 'typename enable_if<__is_input_iterator<_InputIterator>::value && !__is_forward_iterator<_InputIterator>::value, class basic_string<char> &>::type (_InputIterator, _InputIterator)'
|   |-ParmVarDecl 0x2be7c560 <col:16, col:31> col:31 __first '_InputIterator'
|   `-ParmVarDecl 0x2be7c5a0 <col:40, col:55> col:55 __last '_InputIterator'
|-FunctionTemplateDecl 0x2be7ca40 <line:1513:5, line:1519:65> col:9 assign
| |-TemplateTypeParmDecl 0x2be7c700 <line:1513:14, col:20> col:20 class _ForwardIterator
| `-CXXMethodDecl 0x2be7c9e0 <line:1514:9, line:1519:65> col:9 assign 'typename enable_if<__is_forward_iterator<_ForwardIterator>::value, class basic_string<char> &>::type (_ForwardIterator, _ForwardIterator)'
|   |-ParmVarDecl 0x2be7c920 <col:16, col:33> col:33 __first '_ForwardIterator'
|   `-ParmVarDecl 0x2be7c960 <col:42, col:59> col:59 __last '_ForwardIterator'
|-CXXMethodDecl 0x2be7cb90 <line:1521:5, line:1522:103> col:19 assign 'class std::__1::basic_string<char> &(initializer_list<value_type>)'
| |-ParmVarDecl 0x2be7cb20 <col:26, col:55> col:55 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| `-AlwaysInlineAttr 0x2be7cc00 <line:1521:47> always_inline
|-CXXMethodDecl 0x2be7cd10 <line:1525:5, line:1526:69> col:19 insert 'class std::__1::basic_string<char> &(size_type, const class std::__1::basic_string<char> &)'
| |-ParmVarDecl 0x2be7cc30 <col:26, col:36> col:36 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7cc70 <col:44, col:64> col:64 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be7cd80 <line:2810:50> always_inline
|-CXXMethodDecl 0x2be7cf30 <line:1527:5, col:107> col:19 insert 'class std::__1::basic_string<char> &(size_type, const class std::__1::basic_string<char> &, size_type, size_type)'
| |-ParmVarDecl 0x2be7cdb0 <col:26, col:36> col:36 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7cdf0 <col:44, col:64> col:64 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be7ce30 <col:71, col:81> col:81 __pos2 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7ce70 <col:89, col:103> col:99 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7d0e0 <line:1528:5, col:79> col:19 insert 'class std::__1::basic_string<char> &(size_type, const value_type *, size_type)'
| |-ParmVarDecl 0x2be7cfb0 <col:26, col:36> col:36 __pos 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7cff0 <col:43, col:61> col:61 __s 'const value_type *'
| `-ParmVarDecl 0x2be7d030 <col:66, col:76> col:76 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7d240 <line:1529:5, col:64> col:19 insert 'class std::__1::basic_string<char> &(size_type, const value_type *)'
| |-ParmVarDecl 0x2be7d160 <col:26, col:36> col:36 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7d1a0 <col:43, col:61> col:61 __s 'const value_type *'
|-CXXMethodDecl 0x2be7d3f0 <line:1530:5, col:72> col:19 insert 'class std::__1::basic_string<char> &(size_type, size_type, value_type)'
| |-ParmVarDecl 0x2be7d2c0 <col:26, col:36> col:36 __pos 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7d300 <col:43, col:53> col:53 __n 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7d340 <col:58, col:69> col:69 __c 'value_type':'char'
|-CXXMethodDecl 0x2be7d540 <line:1531:5, col:57> col:14 insert 'iterator (const_iterator, value_type)'
| |-ParmVarDecl 0x2be7d470 <col:21, col:36> col:36 __pos 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| `-ParmVarDecl 0x2be7d4b0 <col:43, col:54> col:54 __c 'value_type':'char'
|-CXXMethodDecl 0x2be7d6f0 <line:1532:5, line:1533:72> col:14 insert 'iterator (const_iterator, size_type, value_type)'
| |-ParmVarDecl 0x2be7d5c0 <col:21, col:36> col:36 __pos 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7d600 <col:43, col:53> col:53 __n 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7d640 <col:58, col:69> col:69 __c 'value_type':'char'
| `-AlwaysInlineAttr 0x2be7d770 <line:2863:50> always_inline
|-FunctionTemplateDecl 0x2be7dcd0 <line:1534:5, line:1541:83> col:9 insert
| |-TemplateTypeParmDecl 0x2be7d7a0 <line:1534:14, col:20> col:20 class _InputIterator
| `-CXXMethodDecl 0x2be7dc70 <line:1535:9, line:1541:83> col:9 insert 'typename enable_if<__is_input_iterator<_InputIterator>::value && !__is_forward_iterator<_InputIterator>::value, iterator>::type (const_iterator, _InputIterator, _InputIterator)'
|   |-ParmVarDecl 0x2be7db30 <col:16, col:31> col:31 __pos 'const_iterator':'class std::__1::__wrap_iter<const char *>'
|   |-ParmVarDecl 0x2be7db70 <col:38, col:53> col:53 __first '_InputIterator'
|   `-ParmVarDecl 0x2be7dbb0 <col:62, col:77> col:77 __last '_InputIterator'
|-FunctionTemplateDecl 0x2be7e190 <line:1542:5, line:1548:87> col:9 insert
| |-TemplateTypeParmDecl 0x2be7dd60 <line:1542:14, col:20> col:20 class _ForwardIterator
| `-CXXMethodDecl 0x2be7e130 <line:1543:9, line:1548:87> col:9 insert 'typename enable_if<__is_forward_iterator<_ForwardIterator>::value, iterator>::type (const_iterator, _ForwardIterator, _ForwardIterator)'
|   |-ParmVarDecl 0x2be7dff0 <col:16, col:31> col:31 __pos 'const_iterator':'class std::__1::__wrap_iter<const char *>'
|   |-ParmVarDecl 0x2be7e030 <col:38, col:55> col:55 __first '_ForwardIterator'
|   `-ParmVarDecl 0x2be7e070 <col:64, col:81> col:81 __last '_ForwardIterator'
|-CXXMethodDecl 0x2be7e350 <line:1550:5, line:1552:69> line:1551:14 insert 'iterator (const_iterator, initializer_list<value_type>)'
| |-ParmVarDecl 0x2be7e220 <col:21, col:36> col:36 __pos 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7e2c0 <col:43, col:72> col:72 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| `-AlwaysInlineAttr 0x2be7e3c0 <line:1550:47> always_inline
|-CXXMethodDecl 0x2be7e4d0 <line:1555:5, col:66> col:19 erase 'class std::__1::basic_string<char> &(size_type, size_type)'
| |-ParmVarDecl 0x2be7e3f0 <col:25, col:43> col:35 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7e430 <col:46, col:62> col:56 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7e5e0 <line:1556:5, line:1557:40> col:14 erase 'iterator (const_iterator)'
| |-ParmVarDecl 0x2be7e550 <col:20, col:35> col:35 __pos 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| `-AlwaysInlineAttr 0x2be7e650 <line:3077:50> always_inline
|-CXXMethodDecl 0x2be7e750 <line:1558:5, line:1559:65> col:14 erase 'iterator (const_iterator, const_iterator)'
| |-ParmVarDecl 0x2be7e680 <col:20, col:35> col:35 __first 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7e6c0 <col:44, col:59> col:59 __last 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| `-AlwaysInlineAttr 0x2be7e7c0 <line:3095:50> always_inline
|-CXXMethodDecl 0x2be7e920 <line:1561:5, line:1562:86> col:19 replace 'class std::__1::basic_string<char> &(size_type, size_type, const class std::__1::basic_string<char> &)'
| |-ParmVarDecl 0x2be7e7f0 <col:27, col:37> col:37 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7e830 <col:45, col:55> col:55 __n1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7e870 <col:61, col:81> col:81 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be7e9a0 <line:2993:50> always_inline
|-CXXMethodDecl 0x2be7eb90 <line:1563:5, col:125> col:19 replace 'class std::__1::basic_string<char> &(size_type, size_type, const class std::__1::basic_string<char> &, size_type, size_type)'
| |-ParmVarDecl 0x2be7e9d0 <col:27, col:37> col:37 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7ea10 <col:45, col:55> col:55 __n1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7ea50 <col:61, col:81> col:81 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be7ea90 <col:88, col:98> col:98 __pos2 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7ead0 <col:106, col:121> col:116 __n2 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7eda0 <line:1564:5, col:97> col:19 replace 'class std::__1::basic_string<char> &(size_type, size_type, const value_type *, size_type)'
| |-ParmVarDecl 0x2be7ec20 <col:27, col:37> col:37 __pos 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7ec60 <col:44, col:54> col:54 __n1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7eca0 <col:60, col:78> col:78 __s 'const value_type *'
| `-ParmVarDecl 0x2be7ece0 <col:83, col:93> col:93 __n2 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be7ef50 <line:1565:5, col:81> col:19 replace 'class std::__1::basic_string<char> &(size_type, size_type, const value_type *)'
| |-ParmVarDecl 0x2be7ee20 <col:27, col:37> col:37 __pos 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7ee60 <col:44, col:54> col:54 __n1 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7eea0 <col:60, col:78> col:78 __s 'const value_type *'
|-CXXMethodDecl 0x2be7f150 <line:1566:5, col:90> col:19 replace 'class std::__1::basic_string<char> &(size_type, size_type, size_type, value_type)'
| |-ParmVarDecl 0x2be7efd0 <col:27, col:37> col:37 __pos 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7f010 <col:44, col:54> col:54 __n1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7f050 <col:60, col:70> col:70 __n2 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be7f090 <col:76, col:87> col:87 __c 'value_type':'char'
|-CXXMethodDecl 0x2be7f300 <line:1567:5, line:1568:94> col:19 replace 'class std::__1::basic_string<char> &(const_iterator, const_iterator, const class std::__1::basic_string<char> &)'
| |-ParmVarDecl 0x2be7f1d0 <col:27, col:42> col:42 __i1 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f210 <col:48, col:63> col:63 __i2 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f250 <col:69, col:89> col:89 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be7f380 <line:3020:50> always_inline
|-CXXMethodDecl 0x2be7f530 <line:1569:5, line:1570:105> col:19 replace 'class std::__1::basic_string<char> &(const_iterator, const_iterator, const value_type *, size_type)'
| |-ParmVarDecl 0x2be7f3b0 <col:27, col:42> col:42 __i1 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f3f0 <col:48, col:63> col:63 __i2 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f430 <col:69, col:87> col:87 __s 'const value_type *'
| |-ParmVarDecl 0x2be7f470 <col:92, col:102> col:102 __n 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be7f5b0 <line:3029:50> always_inline
|-CXXMethodDecl 0x2be7f710 <line:1571:5, line:1572:90> col:19 replace 'class std::__1::basic_string<char> &(const_iterator, const_iterator, const value_type *)'
| |-ParmVarDecl 0x2be7f5e0 <col:27, col:42> col:42 __i1 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f620 <col:48, col:63> col:63 __i2 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f660 <col:69, col:87> col:87 __s 'const value_type *'
| `-AlwaysInlineAttr 0x2be7f790 <line:3037:50> always_inline
|-CXXMethodDecl 0x2be7f940 <line:1573:5, line:1574:98> col:19 replace 'class std::__1::basic_string<char> &(const_iterator, const_iterator, size_type, value_type)'
| |-ParmVarDecl 0x2be7f7c0 <col:27, col:42> col:42 __i1 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f800 <col:48, col:63> col:63 __i2 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7f840 <col:69, col:79> col:79 __n 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be7f880 <col:84, col:95> col:95 __c 'value_type':'char'
| `-AlwaysInlineAttr 0x2be7f9c0 <line:3045:50> always_inline
|-FunctionTemplateDecl 0x2be7fe60 <line:1575:5, line:1581:99> col:9 replace
| |-TemplateTypeParmDecl 0x2be7f9f0 <line:1575:14, col:20> col:20 class _InputIterator
| `-CXXMethodDecl 0x2be7fe00 <line:1576:9, line:1581:99> col:9 replace 'typename enable_if<__is_input_iterator<_InputIterator>::value, class basic_string<char> &>::type (const_iterator, const_iterator, _InputIterator, _InputIterator)'
|   |-ParmVarDecl 0x2be7fc80 <col:17, col:32> col:32 __i1 'const_iterator':'class std::__1::__wrap_iter<const char *>'
|   |-ParmVarDecl 0x2be7fcc0 <col:38, col:53> col:53 __i2 'const_iterator':'class std::__1::__wrap_iter<const char *>'
|   |-ParmVarDecl 0x2be7fd00 <col:59, col:74> col:74 __j1 '_InputIterator'
|   `-ParmVarDecl 0x2be7fd40 <col:80, col:95> col:95 __j2 '_InputIterator'
|-CXXMethodDecl 0x2be80080 <line:1583:5, line:1585:63> line:1584:19 replace 'class std::__1::basic_string<char> &(const_iterator, const_iterator, initializer_list<value_type>)'
| |-ParmVarDecl 0x2be7fef0 <col:27, col:42> col:42 __i1 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7ff30 <col:48, col:63> col:63 __i2 'const_iterator':'class std::__1::__wrap_iter<const char *>'
| |-ParmVarDecl 0x2be7ffd0 <col:69, col:98> col:98 __il 'initializer_list<value_type>':'class std::initializer_list<char>'
| `-AlwaysInlineAttr 0x2be80100 <line:1583:47> always_inline
|-CXXMethodDecl 0x2be80290 <line:1588:5, col:73> col:15 copy 'size_type (value_type *, size_type, size_type) const'
| |-ParmVarDecl 0x2be80160 <col:20, col:32> col:32 __s 'value_type *'
| |-ParmVarDecl 0x2be801a0 <col:37, col:47> col:47 __n 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be801e0 <col:52, col:70> col:62 __pos 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be803e0 <line:1589:5, line:1590:68> col:18 substr 'class std::__1::basic_string<char> (size_type, size_type) const'
| |-ParmVarDecl 0x2be80310 <col:25, col:43> col:35 __pos 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be80350 <col:46, col:62> col:56 __n 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be80450 <line:3341:50> always_inline
|-CXXMethodDecl 0x2be80520 <line:1592:5, line:1594:119> line:1593:10 swap 'void (class std::__1::basic_string<char> &)' noexcept-uninstantiated 0x2bd9d820
| |-ParmVarDecl 0x2be80490 <col:15, col:29> col:29 __str 'class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be805c0 <line:3349:50> always_inline
|-CXXMethodDecl 0x2be80630 <line:1597:5, line:1598:61> col:23 referenced c_str 'const value_type *(void) const noexcept'
| `-AlwaysInlineAttr 0x2be806a0 <line:1597:47> always_inline
|-CXXMethodDecl 0x2be806f0 <line:1599:5, line:1600:97> col:23 used data 'const value_type *(void) const noexcept'
| |-CompoundStmt 0x2c33bd58 <col:45, col:97>
| | `-ReturnStmt 0x2c33bd48 <col:46, col:95>
| |   `-CallExpr 0x2c33bd28 <col:53, col:95> 'const char *'
| |     |-ImplicitCastExpr 0x2c33bd18 <col:53, col:63> 'const char *(*)(const char *) noexcept' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x2c33bcb4 <col:53, col:63> 'const char *(const char *) noexcept' lvalue Function 0x2c33a880 '__to_raw_pointer' 'const char *(const char *) noexcept' (FunctionTemplate 0x2bbe6610 '__to_raw_pointer')
| |     `-CXXMemberCallExpr 0x2c33a708 <col:80, col:94> 'const_pointer':'const char *'
| |       `-MemberExpr 0x2c33a6e8 <col:80> '<bound member function type>' ->__get_pointer 0x2be84020
| |         `-CXXThisExpr 0x2c33a6d8 <col:80> 'const class std::__1::basic_string<char> *' this
| `-AlwaysInlineAttr 0x2be80760 <line:1599:47> always_inline
|-CXXMethodDecl 0x2be807e0 <line:1602:5, line:1603:69> col:20 get_allocator 'allocator_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be80850 <line:1602:47> always_inline
|-CXXMethodDecl 0x2be80960 <line:1605:5, line:1606:74> col:15 find 'size_type (const class std::__1::basic_string<char> &, size_type) const noexcept'
| |-ParmVarDecl 0x2be80890 <col:20, col:40> col:40 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be808d0 <col:47, col:65> col:57 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be809d0 <line:3389:50> always_inline
|-CXXMethodDecl 0x2be80b40 <line:1607:5, col:81> col:15 find 'size_type (const value_type *, size_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be80a10 <col:20, col:38> col:38 __s 'const value_type *'
| |-ParmVarDecl 0x2be80a50 <col:43, col:53> col:53 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be80a90 <col:60, col:70> col:70 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be80ca0 <line:1608:5, line:1609:70> col:15 find 'size_type (const value_type *, size_type) const noexcept'
| |-ParmVarDecl 0x2be80bd0 <col:20, col:38> col:38 __s 'const value_type *'
| |-ParmVarDecl 0x2be80c10 <col:43, col:61> col:53 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be80d10 <line:3399:50> always_inline
|-CXXMethodDecl 0x2be80e10 <line:1610:5, col:63> col:15 find 'size_type (value_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be80d40 <col:20, col:31> col:31 __c 'value_type':'char'
| `-ParmVarDecl 0x2be80d80 <col:36, col:54> col:46 __pos 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be80f20 <line:1612:5, line:1613:78> col:15 rfind 'size_type (const class std::__1::basic_string<char> &, size_type) const noexcept'
| |-ParmVarDecl 0x2be80e90 <col:21, col:41> col:41 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be80ed0 <col:48, col:66> col:58 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be80f90 <line:3432:50> always_inline
|-CXXMethodDecl 0x2be810b0 <line:1614:5, col:82> col:15 rfind 'size_type (const value_type *, size_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be80fd0 <col:21, col:39> col:39 __s 'const value_type *'
| |-ParmVarDecl 0x2be81010 <col:44, col:54> col:54 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be81050 <col:61, col:71> col:71 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be811d0 <line:1615:5, line:1616:74> col:15 rfind 'size_type (const value_type *, size_type) const noexcept'
| |-ParmVarDecl 0x2be81140 <col:21, col:39> col:39 __s 'const value_type *'
| |-ParmVarDecl 0x2be81180 <col:44, col:62> col:54 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be81240 <line:3442:50> always_inline
|-CXXMethodDecl 0x2be81300 <line:1617:5, col:67> col:15 rfind 'size_type (value_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be81270 <col:21, col:32> col:32 __c 'value_type':'char'
| `-ParmVarDecl 0x2be812b0 <col:37, col:55> col:47 __pos 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be81410 <line:1619:5, line:1620:83> col:15 find_first_of 'size_type (const class std::__1::basic_string<char> &, size_type) const noexcept'
| |-ParmVarDecl 0x2be81380 <col:29, col:49> col:49 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be813c0 <col:56, col:74> col:66 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be81480 <line:3475:50> always_inline
|-CXXMethodDecl 0x2be815a0 <line:1621:5, col:90> col:15 find_first_of 'size_type (const value_type *, size_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be814c0 <col:29, col:47> col:47 __s 'const value_type *'
| |-ParmVarDecl 0x2be81500 <col:52, col:62> col:62 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be81540 <col:69, col:79> col:79 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be816c0 <line:1622:5, line:1623:79> col:15 find_first_of 'size_type (const value_type *, size_type) const noexcept'
| |-ParmVarDecl 0x2be81630 <col:29, col:47> col:47 __s 'const value_type *'
| |-ParmVarDecl 0x2be81670 <col:52, col:70> col:62 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be81730 <line:3485:50> always_inline
|-CXXMethodDecl 0x2be817f0 <line:1624:5, line:1625:72> col:15 find_first_of 'size_type (value_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be81760 <col:29, col:40> col:40 __c 'value_type':'char'
| |-ParmVarDecl 0x2be817a0 <col:45, col:63> col:55 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be81860 <line:3496:50> always_inline
|-CXXMethodDecl 0x2be81930 <line:1627:5, line:1628:85> col:15 find_last_of 'size_type (const class std::__1::basic_string<char> &, size_type) const noexcept'
| |-ParmVarDecl 0x2be818a0 <col:28, col:48> col:48 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be818e0 <col:55, col:73> col:65 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be819a0 <line:3518:50> always_inline
|-CXXMethodDecl 0x2be81ac0 <line:1629:5, col:89> col:15 find_last_of 'size_type (const value_type *, size_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be819e0 <col:28, col:46> col:46 __s 'const value_type *'
| |-ParmVarDecl 0x2be81a20 <col:51, col:61> col:61 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be81a60 <col:68, col:78> col:78 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be81be0 <line:1630:5, line:1631:81> col:15 find_last_of 'size_type (const value_type *, size_type) const noexcept'
| |-ParmVarDecl 0x2be81b50 <col:28, col:46> col:46 __s 'const value_type *'
| |-ParmVarDecl 0x2be81b90 <col:51, col:69> col:61 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be81c50 <line:3528:50> always_inline
|-CXXMethodDecl 0x2be81d10 <line:1632:5, line:1633:74> col:15 find_last_of 'size_type (value_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be81c80 <col:28, col:39> col:39 __c 'value_type':'char'
| |-ParmVarDecl 0x2be81cc0 <col:44, col:62> col:54 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be81d80 <line:3539:50> always_inline
|-CXXMethodDecl 0x2be81e50 <line:1635:5, line:1636:87> col:15 find_first_not_of 'size_type (const class std::__1::basic_string<char> &, size_type) const noexcept'
| |-ParmVarDecl 0x2be81dc0 <col:33, col:53> col:53 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be81e00 <col:60, col:78> col:70 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be81ec0 <line:3561:50> always_inline
|-CXXMethodDecl 0x2be81fe0 <line:1637:5, col:94> col:15 find_first_not_of 'size_type (const value_type *, size_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be81f00 <col:33, col:51> col:51 __s 'const value_type *'
| |-ParmVarDecl 0x2be81f40 <col:56, col:66> col:66 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be81f80 <col:73, col:83> col:83 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be82100 <line:1638:5, line:1639:83> col:15 find_first_not_of 'size_type (const value_type *, size_type) const noexcept'
| |-ParmVarDecl 0x2be82070 <col:33, col:51> col:51 __s 'const value_type *'
| |-ParmVarDecl 0x2be820b0 <col:56, col:74> col:66 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be82170 <line:3571:50> always_inline
|-CXXMethodDecl 0x2be82230 <line:1640:5, line:1641:76> col:15 find_first_not_of 'size_type (value_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be821a0 <col:33, col:44> col:44 __c 'value_type':'char'
| |-ParmVarDecl 0x2be821e0 <col:49, col:67> col:59 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be822a0 <line:3582:50> always_inline
|-CXXMethodDecl 0x2be82370 <line:1643:5, line:1644:89> col:15 find_last_not_of 'size_type (const class std::__1::basic_string<char> &, size_type) const noexcept'
| |-ParmVarDecl 0x2be822e0 <col:32, col:52> col:52 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be82320 <col:59, col:77> col:69 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be823e0 <line:3605:50> always_inline
|-CXXMethodDecl 0x2be82500 <line:1645:5, col:93> col:15 find_last_not_of 'size_type (const value_type *, size_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be82420 <col:32, col:50> col:50 __s 'const value_type *'
| |-ParmVarDecl 0x2be82460 <col:55, col:65> col:65 __pos 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be824a0 <col:72, col:82> col:82 __n 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be82620 <line:1646:5, line:1647:85> col:15 find_last_not_of 'size_type (const value_type *, size_type) const noexcept'
| |-ParmVarDecl 0x2be82590 <col:32, col:50> col:50 __s 'const value_type *'
| |-ParmVarDecl 0x2be825d0 <col:55, col:73> col:65 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be82690 <line:3615:50> always_inline
|-CXXMethodDecl 0x2be82750 <line:1648:5, line:1649:78> col:15 find_last_not_of 'size_type (value_type, size_type) const noexcept'
| |-ParmVarDecl 0x2be826c0 <col:32, col:43> col:43 __c 'value_type':'char'
| |-ParmVarDecl 0x2be82700 <col:48, col:66> col:58 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be827c0 <line:3626:50> always_inline
|-CXXMethodDecl 0x2be82890 <line:1651:5, line:1652:50> col:9 compare 'int (const class std::__1::basic_string<char> &) const noexcept'
| |-ParmVarDecl 0x2be82800 <col:17, col:37> col:37 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be82900 <line:3638:50> always_inline
|-CXXMethodDecl 0x2be82a60 <line:1653:5, line:1654:78> col:9 compare 'int (size_type, size_type, const class std::__1::basic_string<char> &) const'
| |-ParmVarDecl 0x2be82930 <col:17, col:27> col:27 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be82970 <col:35, col:45> col:45 __n1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be829b0 <col:51, col:71> col:71 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be82ae0 <line:3656:50> always_inline
|-CXXMethodDecl 0x2be82cd0 <line:1655:5, col:117> col:9 compare 'int (size_type, size_type, const class std::__1::basic_string<char> &, size_type, size_type) const'
| |-ParmVarDecl 0x2be82b10 <col:17, col:27> col:27 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be82b50 <col:35, col:45> col:45 __n1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be82b90 <col:51, col:71> col:71 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be82bd0 <col:78, col:88> col:88 __pos2 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be82c10 <col:96, col:111> col:106 __n2 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be82df0 <line:1656:5, col:46> col:9 compare 'int (const value_type *) const noexcept'
| `-ParmVarDecl 0x2be82d60 <col:17, col:35> col:35 __s 'const value_type *'
|-CXXMethodDecl 0x2be82fa0 <line:1657:5, col:74> col:9 compare 'int (size_type, size_type, const value_type *) const'
| |-ParmVarDecl 0x2be82e70 <col:17, col:27> col:27 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be82eb0 <col:35, col:45> col:45 __n1 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be82ef0 <col:51, col:69> col:69 __s 'const value_type *'
|-CXXMethodDecl 0x2be831a0 <line:1658:5, col:90> col:9 compare 'int (size_type, size_type, const value_type *, size_type) const'
| |-ParmVarDecl 0x2be83020 <col:17, col:27> col:27 __pos1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be83060 <col:35, col:45> col:45 __n1 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be830a0 <col:51, col:69> col:69 __s 'const value_type *'
| `-ParmVarDecl 0x2be830e0 <col:74, col:84> col:84 __n2 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be83220 <line:1660:5, col:87> col:72 __invariants '_Bool (void) const'
| `-AlwaysInlineAttr 0x2be83290 <line:3724:50> always_inline
|-CXXMethodDecl 0x2be832c0 <line:1662:5, line:1664:63> line:1663:10 used __is_long '_Bool (void) const noexcept'
| |-CompoundStmt 0x2c33c198 <line:1664:9, col:63>
| | `-ReturnStmt 0x2c33c188 <col:10, col:61>
| |   `-CXXFunctionalCastExpr 0x2c33c170 <col:17, col:61> '_Bool' functional cast to _Bool <NoOp>
| |     `-ImplicitCastExpr 0x2c33c160 <col:22, col:49> '_Bool' <IntegralToBoolean>
| |       `-BinaryOperator 0x2c33c148 <col:22, col:49> 'int' '&'
| |         |-ImplicitCastExpr 0x2c33c128 <col:22, col:39> 'int' <IntegralCast>
| |         | `-ImplicitCastExpr 0x2c33c118 <col:22, col:39> 'unsigned char' <LValueToRValue>
| |         |   `-MemberExpr 0x2c33c0ac <col:22, col:39> 'const unsigned char' lvalue .__size_ 0x2be70aa0
| |         |     `-MemberExpr 0x2c33c080 <col:22, col:39> 'const union (anonymous union at /usr/include/c++/v1/string:1289:9)':'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short::(anonymous at /usr/include/c++/v1/string:1289:9)' lvalue . 0x2be70b10
| |         |       `-MemberExpr 0x2c33c060 <col:22, col:35> 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short' lvalue .__s 0x2be725f0
| |         |         `-MemberExpr 0x2c33c034 <col:22, col:35> 'const union (anonymous union at /usr/include/c++/v1/string:1310:9)':'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' lvalue . 0x2be727b0
| |         |           `-CXXMemberCallExpr 0x2c33bff8 <col:22, col:33> 'const typename remove_reference<struct __rep>::type':'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue
| |         |             `-MemberExpr 0x2c33bfd8 <col:22, col:27> '<bound member function type>' .first 0x2be76230
| |         |               `-MemberExpr 0x2c33bf78 <col:22> 'const __compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'const class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' lvalue ->__r_ 0x2be76620
| |         |                 `-CXXThisExpr 0x2c33bf68 <col:22> 'const class std::__1::basic_string<char> *' this
| |         `-ImplicitCastExpr 0x2c33c138 <col:49> 'int' <IntegralCast>
| |           `-DeclRefExpr 0x2c33c0cc <col:49> 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1280:5)' EnumConstant 0x2be701b0 '__short_mask' 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1280:5)'
| `-AlwaysInlineAttr 0x2be83330 <line:1662:47> always_inline
|-AccessSpecDecl 0x2be83360 <line:1675:1, col:8> col:1 private
|-CXXMethodDecl 0x2be833e0 <line:1676:5, line:1678:31> line:1677:21 __alloc 'allocator_type &(void) noexcept'
| `-AlwaysInlineAttr 0x2be83450 <line:1676:47> always_inline
|-CXXMethodDecl 0x2be834c0 <line:1679:5, line:1681:31> line:1680:27 __alloc 'const allocator_type &(void) const noexcept'
| `-AlwaysInlineAttr 0x2be83530 <line:1679:47> always_inline
|-CXXMethodDecl 0x2be835d0 <line:1703:5, line:1708:63> line:1704:10 __set_short_size 'void (size_type) noexcept'
| |-ParmVarDecl 0x2be83560 <col:27, col:37> col:37 __s 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be83640 <line:1703:47> always_inline
|-CXXMethodDecl 0x2be83680 <line:1711:5, line:1716:47> line:1712:15 __get_short_size 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be836f0 <line:1711:47> always_inline
|-CXXMethodDecl 0x2be83770 <line:1721:5, line:1723:41> line:1722:10 __set_long_size 'void (size_type) noexcept'
| |-ParmVarDecl 0x2be83720 <col:26, col:36> col:36 __s 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be837e0 <line:1721:47> always_inline
|-CXXMethodDecl 0x2be83820 <line:1724:5, line:1726:42> line:1725:15 __get_long_size 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be83890 <line:1724:47> always_inline
|-CXXMethodDecl 0x2be83910 <line:1727:5, line:1729:76> line:1728:10 __set_size 'void (size_type) noexcept'
| |-ParmVarDecl 0x2be838c0 <col:21, col:31> col:31 __s 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be83980 <line:1727:47> always_inline
|-CXXMethodDecl 0x2be83a00 <line:1731:5, line:1733:54> line:1732:10 __set_long_cap 'void (size_type) noexcept'
| |-ParmVarDecl 0x2be839b0 <col:25, col:35> col:35 __s 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be83a70 <line:1731:47> always_inline
|-CXXMethodDecl 0x2be83ab0 <line:1734:5, line:1736:67> line:1735:15 __get_long_cap 'size_type (void) const noexcept'
| `-AlwaysInlineAttr 0x2be83b20 <line:1734:47> always_inline
|-CXXMethodDecl 0x2be83bc0 <line:1738:5, line:1740:41> line:1739:10 __set_long_pointer 'void (pointer) noexcept'
| |-ParmVarDecl 0x2be83b50 <col:29, col:37> col:37 __p 'pointer':'char *'
| `-AlwaysInlineAttr 0x2be83c30 <line:1738:47> always_inline
|-CXXMethodDecl 0x2be83c90 <line:1741:5, line:1743:42> line:1742:13 __get_long_pointer 'pointer (void) noexcept'
| `-AlwaysInlineAttr 0x2be83d00 <line:1741:47> always_inline
|-CXXMethodDecl 0x2be83d60 <line:1744:5, line:1746:42> line:1745:19 used __get_long_pointer 'const_pointer (void) const noexcept'
| |-CompoundStmt 0x2c33c480 <line:1746:9, col:42>
| | `-ReturnStmt 0x2c33c470 <col:10, col:34>
| |   `-ImplicitCastExpr 0x2c33c460 <col:17, col:34> 'const_pointer':'const char *' <NoOp>
| |     `-ImplicitCastExpr 0x2c33c450 <col:17, col:34> 'pointer':'char *' <LValueToRValue>
| |       `-MemberExpr 0x2c33c430 <col:17, col:34> 'const pointer':'char *const' lvalue .__data_ 0x2be70450
| |         `-MemberExpr 0x2c33c410 <col:17, col:30> 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__long' lvalue .__l 0x2be725b0
| |           `-MemberExpr 0x2c33c3e4 <col:17, col:30> 'const union (anonymous union at /usr/include/c++/v1/string:1310:9)':'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' lvalue . 0x2be727b0
| |             `-CXXMemberCallExpr 0x2c33c3c8 <col:17, col:28> 'const typename remove_reference<struct __rep>::type':'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue
| |               `-MemberExpr 0x2c33c3a8 <col:17, col:22> '<bound member function type>' .first 0x2be76230
| |                 `-MemberExpr 0x2c33c348 <col:17> 'const __compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'const class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' lvalue ->__r_ 0x2be76620
| |                   `-CXXThisExpr 0x2c33c338 <col:17> 'const class std::__1::basic_string<char> *' this
| `-AlwaysInlineAttr 0x2be83dd0 <line:1744:47> always_inline
|-CXXMethodDecl 0x2be83e10 <line:1747:5, line:1749:82> line:1748:13 __get_short_pointer 'pointer (void) noexcept'
| `-AlwaysInlineAttr 0x2be83e80 <line:1747:47> always_inline
|-CXXMethodDecl 0x2be83ec0 <line:1750:5, line:1752:88> line:1751:19 used __get_short_pointer 'const_pointer (void) const noexcept'
| |-CompoundStmt 0x2c33c728 <line:1752:9, col:88>
| | `-ReturnStmt 0x2c33c718 <col:10, col:86>
| |   `-CallExpr 0x2c33c6f8 <col:17, col:86> 'pointer':'const char *'
| |     |-ImplicitCastExpr 0x2c33c6e8 <col:17, col:48> 'pointer (*)(typename conditional<is_void<element_type>::value, struct __nat, element_type>::type &) noexcept' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x2c33c528 <col:17, col:48> 'pointer (typename conditional<is_void<element_type>::value, struct __nat, element_type>::type &) noexcept' lvalue CXXMethod 0x2c33ba80 'pointer_to' 'pointer (typename conditional<is_void<element_type>::value, struct __nat, element_type>::type &) noexcept'
| |     `-ArraySubscriptExpr 0x2c33c690 <col:59, col:85> 'const value_type':'const char' lvalue
| |       |-ImplicitCastExpr 0x2c33c680 <col:59, col:76> 'const value_type *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x2c33c640 <col:59, col:76> 'value_type const[11]' lvalue .__data_ 0x2be70c20
| |       |   `-MemberExpr 0x2c33c620 <col:59, col:72> 'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__short' lvalue .__s 0x2be725f0
| |       |     `-MemberExpr 0x2c33c5f4 <col:59, col:72> 'const union (anonymous union at /usr/include/c++/v1/string:1310:9)':'const union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' lvalue . 0x2be727b0
| |       |       `-CXXMemberCallExpr 0x2c33c5d8 <col:59, col:70> 'const typename remove_reference<struct __rep>::type':'const struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue
| |       |         `-MemberExpr 0x2c33c5b8 <col:59, col:64> '<bound member function type>' .first 0x2be76230
| |       |           `-MemberExpr 0x2c33c558 <col:59> 'const __compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'const class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' lvalue ->__r_ 0x2be76620
| |       |             `-CXXThisExpr 0x2c33c548 <col:59> 'const class std::__1::basic_string<char> *' this
| |       `-IntegerLiteral 0x2bdce678 <col:84> 'int' 0
| `-AlwaysInlineAttr 0x2be83f30 <line:1750:47> always_inline
|-CXXMethodDecl 0x2be83f70 <line:1753:5, line:1755:76> line:1754:13 __get_pointer 'pointer (void) noexcept'
| `-AlwaysInlineAttr 0x2be83fe0 <line:1753:47> always_inline
|-CXXMethodDecl 0x2be84020 <line:1756:5, line:1758:76> line:1757:19 used __get_pointer 'const_pointer (void) const noexcept'
| |-CompoundStmt 0x2c33bf50 <line:1758:9, col:76>
| | `-ReturnStmt 0x2c33bf40 <col:10, col:74>
| |   `-ConditionalOperator 0x2c33bf20 <col:17, col:74> 'const_pointer':'const char *'
| |     |-CXXMemberCallExpr 0x2c33bda0 <col:17, col:27> '_Bool'
| |     | `-MemberExpr 0x2c33bd80 <col:17> '<bound member function type>' ->__is_long 0x2be832c0
| |     |   `-CXXThisExpr 0x2c33bd70 <col:17> 'const class std::__1::basic_string<char> *' this
| |     |-CXXMemberCallExpr 0x2c33be50 <col:31, col:50> 'const_pointer':'const char *'
| |     | `-MemberExpr 0x2c33be30 <col:31> '<bound member function type>' ->__get_long_pointer 0x2be83d60
| |     |   `-CXXThisExpr 0x2c33be20 <col:31> 'const class std::__1::basic_string<char> *' this
| |     `-CXXMemberCallExpr 0x2c33bf00 <col:54, col:74> 'const_pointer':'const char *'
| |       `-MemberExpr 0x2c33bee0 <col:54> '<bound member function type>' ->__get_short_pointer 0x2be83ec0
| |         `-CXXThisExpr 0x2c33bed0 <col:54> 'const class std::__1::basic_string<char> *' this
| `-AlwaysInlineAttr 0x2be84090 <line:1756:47> always_inline
|-CXXMethodDecl 0x2be840c0 <line:1760:5, line:1766:9> line:1761:10 used __zero 'void (void) noexcept'
| |-CompoundStmt 0x2c31c450 <line:1762:9, line:1766:9>
| | |-DeclStmt 0x2c31bf90 <line:1763:13, col:67>
| | | `-VarDecl 0x2c31be10 <col:13, col:60> col:25 used __a 'size_type (&)[3]' cinit
| | |   `-MemberExpr 0x2c31bf38 <col:43, col:60> 'size_type [3]' lvalue .__words 0x2be72750
| | |     `-MemberExpr 0x2c31bf18 <col:43, col:56> 'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__raw' lvalue .__r 0x2be72780
| | |       `-MemberExpr 0x2c31beec <col:43, col:56> 'union (anonymous union at /usr/include/c++/v1/string:1310:9)':'union std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep::(anonymous at /usr/include/c++/v1/string:1310:9)' lvalue . 0x2be727b0
| | |         `-CXXMemberCallExpr 0x2c31bed0 <col:43, col:54> 'typename remove_reference<struct __rep>::type':'struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep' lvalue
| | |           `-MemberExpr 0x2c31beb0 <col:43, col:48> '<bound member function type>' .first 0x2be76150
| | |             `-MemberExpr 0x2c31be50 <col:43> '__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, allocator_type>':'class std::__1::__compressed_pair<struct std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::__rep, class std::__1::allocator<char> >' lvalue ->__r_ 0x2be76620
| | |               `-CXXThisExpr 0x2c31be40 <col:43> 'class std::__1::basic_string<char> *' this
| | `-ForStmt 0x2c31c428 <line:1764:13, line:1765:28>
| |   |-DeclStmt 0x2c31bfe0 <line:1764:18, col:34>
| |   | `-VarDecl 0x2c31bfa0 <col:18, col:33> col:27 used __i 'unsigned int' cinit
| |   |   `-ImplicitCastExpr 0x2c31bfd0 <col:33> 'unsigned int' <IntegralCast>
| |   |     `-IntegerLiteral 0x2bdcec30 <col:33> 'int' 0
| |   |-<<<NULL>>>
| |   |-BinaryOperator 0x2c31c338 <col:36, col:42> '_Bool' '<'
| |   | |-ImplicitCastExpr 0x2c31c318 <col:36> 'unsigned int' <LValueToRValue>
| |   | | `-DeclRefExpr 0x2c31c04c <col:36> 'unsigned int' lvalue Var 0x2c31bfa0 '__i' 'unsigned int'
| |   | `-ImplicitCastExpr 0x2c31c328 <col:42> 'unsigned int' <IntegralCast>
| |   |   `-DeclRefExpr 0x2c31c064 <col:42> 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1301:5)' EnumConstant 0x2be70e80 '__n_words' 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1301:5)'
| |   |-UnaryOperator 0x2c31c368 <col:53, col:55> 'unsigned int' lvalue prefix '++'
| |   | `-DeclRefExpr 0x2c31c350 <col:55> 'unsigned int' lvalue Var 0x2c31bfa0 '__i' 'unsigned int'
| |   `-BinaryOperator 0x2c31c410 <line:1765:17, col:28> 'size_type':'unsigned int' lvalue '='
| |     |-ArraySubscriptExpr 0x2c31c3e8 <col:17, col:24> 'size_type':'unsigned int' lvalue
| |     | |-ImplicitCastExpr 0x2c31c3c8 <col:17> 'size_type *' <ArrayToPointerDecay>
| |     | | `-DeclRefExpr 0x2c31c37c <col:17> 'size_type [3]':'size_type [3]' lvalue Var 0x2c31be10 '__a' 'size_type (&)[3]'
| |     | `-ImplicitCastExpr 0x2c31c3d8 <col:21> 'unsigned int' <LValueToRValue>
| |     |   `-DeclRefExpr 0x2c31c394 <col:21> 'unsigned int' lvalue Var 0x2c31bfa0 '__i' 'unsigned int'
| |     `-ImplicitCastExpr 0x2c31c400 <col:28> 'size_type':'unsigned int' <IntegralCast>
| |       `-IntegerLiteral 0x2bdceda8 <col:28> 'int' 0
| `-AlwaysInlineAttr 0x2be84130 <line:1760:47> always_inline
|-FunctionTemplateDecl 0x2be84290 <line:1768:5, line:1771:46> line:1770:19 __align_it
| |-NonTypeTemplateParmDecl 0x2be84160 <line:1768:15, col:25> col:25 'size_type':'unsigned int' __a
| `-CXXMethodDecl 0x2be84230 <col:30, line:1771:46> line:1770:19 __align_it 'size_type (size_type) noexcept' static
|   |-ParmVarDecl 0x2be841c0 <col:30, col:40> col:40 __s 'size_type':'unsigned int'
|   `-AlwaysInlineAttr 0x2be842c0 <line:1769:51> always_inline
|-EnumDecl 0x2be84340 <line:1772:5> col:5
| `-EnumConstantDecl 0x2be843b0 <col:11, col:25> col:11 __alignment 'enum std::__1::basic_string<char, struct std::__1::char_traits<char>, class std::__1::allocator<char> >::(anonymous at /usr/include/c++/v1/string:1772:5)'
|   `-ImplicitCastExpr 0x2be843e0 <col:25> 'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x2bda3010 <col:25> 'int' 16
|-CXXMethodDecl 0x2be84450 <line:1773:5, line:1777:79> line:1774:15 __recommend 'size_type (size_type) noexcept' static
| |-ParmVarDecl 0x2be84400 <col:27, col:37> col:37 __s 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be844c0 <line:1773:54> always_inline
|-CXXMethodDecl 0x2be84630 <line:1779:5, col:75> col:10 __init 'void (const value_type *, size_type, size_type)'
| |-ParmVarDecl 0x2be84500 <col:17, col:35> col:35 __s 'const value_type *'
| |-ParmVarDecl 0x2be84540 <col:40, col:50> col:50 __sz 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be84580 <col:56, col:66> col:66 __reserve 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be84750 <line:1780:5, col:54> col:10 __init 'void (const value_type *, size_type)'
| |-ParmVarDecl 0x2be846c0 <col:17, col:35> col:35 __s 'const value_type *'
| `-ParmVarDecl 0x2be84700 <col:40, col:50> col:50 __sz 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be84860 <line:1781:5, col:46> col:10 used __init 'void (size_type, value_type)'
| |-ParmVarDecl 0x2be847d0 <col:17, col:27> col:27 __n 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be84810 <col:32, col:43> col:43 __c 'value_type':'char'
|-FunctionTemplateDecl 0x2be84d90 <line:1783:5, line:1790:57> col:5 __init
| |-TemplateTypeParmDecl 0x2be848d0 <line:1783:15, col:21> col:21 class _InputIterator
| `-CXXMethodDecl 0x2be84d30 <line:1784:5, line:1790:57> col:5 __init 'typename enable_if<__is_input_iterator<_InputIterator>::value && !__is_forward_iterator<_InputIterator>::value, void>::type (_InputIterator, _InputIterator)'
|   |-ParmVarDecl 0x2be84c50 <col:12, col:27> col:27 __first '_InputIterator'
|   `-ParmVarDecl 0x2be84c90 <col:36, col:51> col:51 __last '_InputIterator'
|-FunctionTemplateDecl 0x2be85160 <line:1792:5, line:1798:61> col:5 __init
| |-TemplateTypeParmDecl 0x2be84e10 <line:1792:15, col:21> col:21 class _ForwardIterator
| `-CXXMethodDecl 0x2be85100 <line:1793:5, line:1798:61> col:5 __init 'typename enable_if<__is_forward_iterator<_ForwardIterator>::value, void>::type (_ForwardIterator, _ForwardIterator)'
|   |-ParmVarDecl 0x2be85020 <col:12, col:29> col:29 __first '_ForwardIterator'
|   `-ParmVarDecl 0x2be85060 <col:38, col:55> col:55 __last '_ForwardIterator'
|-CXXMethodDecl 0x2be853e0 <line:1800:5, line:1801:80> line:1800:10 __grow_by 'void (size_type, size_type, size_type, size_type, size_type, size_type)'
| |-ParmVarDecl 0x2be851e0 <col:20, col:30> col:30 __old_cap 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be85220 <col:41, col:51> col:51 __delta_cap 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be85260 <col:64, col:74> col:74 __old_sz 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be852a0 <line:1801:20, col:30> col:30 __n_copy 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be852e0 <col:40, col:50> col:50 __n_del 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be85320 <col:59, col:79> col:69 __n_add 'size_type':'unsigned int'
|-CXXMethodDecl 0x2be856d0 <line:1802:5, line:1804:82> line:1802:10 __grow_by_and_replace 'void (size_type, size_type, size_type, size_type, size_type, size_type, const value_type *)'
| |-ParmVarDecl 0x2be85470 <col:32, col:42> col:42 __old_cap 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be854b0 <col:53, col:63> col:63 __delta_cap 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be854f0 <col:76, col:86> col:86 __old_sz 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be85530 <line:1803:32, col:42> col:42 __n_copy 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be85570 <col:52, col:62> col:62 __n_del 'size_type':'unsigned int'
| |-ParmVarDecl 0x2be855b0 <line:1804:32, col:42> col:42 __n_add 'size_type':'unsigned int'
| `-ParmVarDecl 0x2be855f0 <col:51, col:69> col:69 __p_new_stuff 'const value_type *'
|-CXXMethodDecl 0x2be857b0 <line:1806:5, line:1807:40> col:10 __erase_to_end 'void (size_type)'
| |-ParmVarDecl 0x2be85760 <col:25, col:35> col:35 __pos 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be85820 <line:3152:50> always_inline
|-CXXMethodDecl 0x2be858b0 <line:1809:5, line:1812:89> line:1810:10 __copy_assign_alloc 'void (const class std::__1::basic_string<char> &)'
| |-ParmVarDecl 0x2be85860 <col:30, col:50> col:50 __str 'const class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be85920 <line:1809:47> always_inline
|-CXXMethodDecl 0x2be85a20 <line:1814:5, line:1823:9> line:1815:10 __copy_assign_alloc 'void (const class std::__1::basic_string<char> &, true_type)'
| |-ParmVarDecl 0x2be85960 <col:30, col:50> col:50 __str 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be85990 <col:57> col:66 'true_type':'struct std::__1::integral_constant<_Bool, true>'
| `-AlwaysInlineAttr 0x2be85a90 <line:1814:47> always_inline
|-CXXMethodDecl 0x2be85b90 <line:1825:5, line:1827:10> line:1826:10 __copy_assign_alloc 'void (const class std::__1::basic_string<char> &, false_type) noexcept'
| |-ParmVarDecl 0x2be85ad0 <col:30, col:48> col:49 'const class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be85b00 <col:51> col:61 'false_type':'struct std::__1::integral_constant<_Bool, false>'
| `-AlwaysInlineAttr 0x2be85c00 <line:1825:47> always_inline
|-CXXMethodDecl 0x2be85d00 <line:1830:5, line:1831:55> col:10 __move_assign 'void (class std::__1::basic_string<char> &, false_type)'
| |-ParmVarDecl 0x2be85c40 <col:24, col:38> col:38 __str 'class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be85c70 <col:45> col:55 'false_type':'struct std::__1::integral_constant<_Bool, false>'
| `-AlwaysInlineAttr 0x2be85d70 <line:2422:50> always_inline
|-CXXMethodDecl 0x2be85e80 <line:1832:5, line:1834:68> line:1833:10 __move_assign 'void (class std::__1::basic_string<char> &, true_type)' noexcept-uninstantiated 0x2bda5ce0
| |-ParmVarDecl 0x2be85db0 <col:24, col:38> col:38 __str 'class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be85de0 <col:45> col:54 'true_type':'struct std::__1::integral_constant<_Bool, true>'
| `-AlwaysInlineAttr 0x2be85f20 <line:2433:50> always_inline
|-CXXMethodDecl 0x2be85fd0 <line:1837:5, line:1844:89> line:1839:5 __move_assign_alloc 'void (class std::__1::basic_string<char> &)' noexcept-uninstantiated 0x2bda5e20
| |-ParmVarDecl 0x2be85f60 <col:25, col:39> col:39 __str 'class std::__1::basic_string<char> &'
| `-AlwaysInlineAttr 0x2be86070 <line:1837:47> always_inline
|-CXXMethodDecl 0x2be86160 <line:1846:5, line:1851:9> line:1847:10 __move_assign_alloc 'void (class std::__1::basic_string<char> &, true_type)' noexcept-uninstantiated 0x2bda5fa0
| |-ParmVarDecl 0x2be860b0 <col:30, col:44> col:44 __c 'class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be860e0 <col:49> col:58 'true_type':'struct std::__1::integral_constant<_Bool, true>'
| `-AlwaysInlineAttr 0x2be86200 <line:1846:47> always_inline
|-CXXMethodDecl 0x2be862e0 <line:1853:5, line:1856:10> line:1854:10 __move_assign_alloc 'void (class std::__1::basic_string<char> &, false_type) noexcept'
| |-ParmVarDecl 0x2be86240 <col:30, col:42> col:43 'class std::__1::basic_string<char> &'
| |-ParmVarDecl 0x2be86270 <col:45> col:55 'false_type':'struct std::__1::integral_constant<_Bool, false>'
| `-AlwaysInlineAttr 0x2be86350 <line:1853:47> always_inline
|-CXXMethodDecl 0x2be86470 <line:1858:5, line:1863:78> line:1859:17 __swap_alloc 'void (allocator_type &, allocator_type &)' static noexcept-uninstantiated 0x2bda6300
| |-ParmVarDecl 0x2be86390 <col:30, col:46> col:46 __x 'allocator_type &'
| |-ParmVarDecl 0x2be863d0 <col:51, col:67> col:67 __y 'allocator_type &'
| `-AlwaysInlineAttr 0x2be86510 <line:1858:47> always_inline
|-CXXMethodDecl 0x2be86670 <line:1865:5, line:1871:9> line:1866:17 __swap_alloc 'void (allocator_type &, allocator_type &, true_type)' static noexcept-uninstantiated 0x2bda6520
| |-ParmVarDecl 0x2be86550 <col:30, col:46> col:46 __x 'allocator_type &'
| |-ParmVarDecl 0x2be86590 <col:51, col:67> col:67 __y 'allocator_type &'
| |-ParmVarDecl 0x2be865c0 <col:72> col:81 'true_type':'struct std::__1::integral_constant<_Bool, true>'
| `-AlwaysInlineAttr 0x2be86720 <line:1865:47> always_inline
|-CXXMethodDecl 0x2be86880 <line:1872:5, line:1874:10> line:1873:17 __swap_alloc 'void (allocator_type &, allocator_type &, false_type) noexcept' static
| |-ParmVarDecl 0x2be86760 <col:30, col:44> col:45 'allocator_type &'
| |-ParmVarDecl 0x2be867a0 <col:47, col:61> col:62 'allocator_type &'
| |-ParmVarDecl 0x2be867d0 <col:64> col:74 'false_type':'struct std::__1::integral_constant<_Bool, false>'
| `-AlwaysInlineAttr 0x2be86900 <line:1872:47> always_inline
|-CXXMethodDecl 0x2be86930 <line:1876:5, col:99> col:72 __invalidate_all_iterators 'void (void)'
| `-AlwaysInlineAttr 0x2be869a0 <line:1887:50> always_inline
|-CXXMethodDecl 0x2be86a20 <line:1877:5, col:109> col:72 __invalidate_iterators_past 'void (size_type)'
| |-ParmVarDecl 0x2be869d0 <col:100> col:109 'size_type':'unsigned int'
| `-AlwaysInlineAttr 0x2be86a90 <line:1897:50> always_inline
|-FriendDecl 0x2be87260 <line:1879:5, col:77> col:25
| `-FunctionDecl 0x2be86b80 parent 0x2bd43c90 prev 0x2be87090 <col:5, col:77> col:25 operator+ 'class std::__1::basic_string<char> (const class std::__1::basic_string<char> &, const class std::__1::basic_string<char> &)'
|   |-TemplateArgument type 'char'
|   |-TemplateArgument type 'struct std::__1::char_traits<char>'
|   |-TemplateArgument type 'class std::__1::allocator<char>'
|   |-ParmVarDecl 0x2be86ad0 <col:37, col:55> col:56 'const class std::__1::basic_string<char> &'
|   `-ParmVarDecl 0x2be86b10 <col:58, col:76> col:77 'const class std::__1::basic_string<char> &'
|-FriendDecl 0x2be879b0 <line:1880:5, col:75> col:25
| `-FunctionDecl 0x2be87370 parent 0x2bd43c90 prev 0x2be87810 <col:5, col:75> col:25 operator+ 'class std::__1::basic_string<char> (const value_type *, const class std::__1::basic_string<char> &)'
|   |-TemplateArgument type 'char'
|   |-TemplateArgument type 'struct std::__1::char_traits<char>'
|   |-TemplateArgument type 'class std::__1::allocator<char>'
|   |-ParmVarDecl 0x2be872a0 <col:37, col:53> col:54 'const value_type *'
|   `-ParmVarDecl 0x2be872e0 <col:56, col:74> col:75 'const class std::__1::basic_string<char> &'
|-FriendDecl 0x2be880c0 <line:1881:5, col:68> col:25
| `-FunctionDecl 0x2be87ab0 parent 0x2bd43c90 prev 0x2be87f50 <col:5, col:68> col:25 operator+ 'class std::__1::basic_string<char> (value_type, const class std::__1::basic_string<char> &)'
|   |-TemplateArgument type 'char'
|   |-TemplateArgument type 'struct std::__1::char_traits<char>'
|   |-TemplateArgument type 'class std::__1::allocator<char>'
|   |-ParmVarDecl 0x2be879e0 <col:37> col:47 'value_type':'char'
|   `-ParmVarDecl 0x2be87a20 <col:49, col:67> col:68 'const class std::__1::basic_string<char> &'
|-FriendDecl 0x2be88800 <line:1882:5, col:75> col:25
| `-FunctionDecl 0x2be881d0 parent 0x2bd43c90 prev 0x2be886c0 <col:5, col:75> col:25 operator+ 'class std::__1::basic_string<char> (const class std::__1::basic_string<char> &, const value_type *)'
|   |-TemplateArgument type 'char'
|   |-TemplateArgument type 'struct std::__1::char_traits<char>'
|   |-TemplateArgument type 'class std::__1::allocator<char>'
|   |-ParmVarDecl 0x2be88100 <col:37, col:55> col:56 'const class std::__1::basic_string<char> &'
|   `-ParmVarDecl 0x2be88140 <col:58, col:74> col:75 'const value_type *'
`-FriendDecl 0x2be88f20 <line:1883:5, col:68> col:25
  `-FunctionDecl 0x2be88910 parent 0x2bd43c90 prev 0x2be88e10 <col:5, col:68> col:25 operator+ 'class std::__1::basic_string<char> (const class std::__1::basic_string<char> &, value_type)'
    |-TemplateArgument type 'char'
    |-TemplateArgument type 'struct std::__1::char_traits<char>'
    |-TemplateArgument type 'class std::__1::allocator<char>'
    |-ParmVarDecl 0x2be88840 <col:37, col:55> col:56 'const class std::__1::basic_string<char> &'
    `-ParmVarDecl 0x2be88880 <col:58> col:68 'value_type':'char'

Layout: <CGRecordLayout
  LLVMType:%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
  NonVirtualBaseLLVMType:%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
  IsZeroInitializable:1
  BitFields:[
]>
